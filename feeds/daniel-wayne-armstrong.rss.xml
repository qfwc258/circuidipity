<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Circuidipity</title><link>http://www.circuidipity.com/</link><description></description><atom:link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 12 Aug 2015 01:27:00 -0400</lastBuildDate><item><title>Incremental backups</title><link>http://www.circuidipity.com/incremental-backups-rsnapshot.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #3 .:&lt;/a&gt; Make incremental and automatic backups of a home folder using &lt;strong&gt;rsnapshot + cron&lt;/strong&gt; (and manual backups via &lt;strong&gt;public transit&lt;/strong&gt;).&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Backup strategy &lt;strong&gt;Version 0&lt;/strong&gt; for my home folder was &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;. That is, I would simply make a periodic, manual sync of files using &lt;strong&gt;rsync&lt;/strong&gt; from my primary computer to a &lt;strong&gt;portable&lt;/strong&gt; encrypted &lt;a class="reference external" href="http://www.circuidipity.com/encrypt-external-drive.html"&gt;USB hard drive&lt;/a&gt;. Then ride the &lt;strong&gt;subway&lt;/strong&gt; to a family/friend's place and swap drives (offsite backup).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version 1&lt;/strong&gt; expanded to &lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;Raspberry Pi&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;. One of the advantages of setting up a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi home server&lt;/a&gt; is providing a 24/7 uptime location to automatically (using &lt;strong&gt;cron&lt;/strong&gt;) mirror my laptop's home folder over the local area network (LAN).&lt;/p&gt;
&lt;p&gt;These backups are &lt;strong&gt;snapshots&lt;/strong&gt; of home at a particular date. Pi server has a backup of 24 hours or less, the USB drive has another snapshot a few weeks old, the offsite another snapshot from a month ago. But there is no ordered progression of backups from Day 2 to Day 3, Week 4, Month 5, etc. One alternative is to every day stash an entire backup of my home folder but its a sub-optimal use of resources and would quickly fill a hard drive.&lt;/p&gt;
&lt;p&gt;A much better solution is to use &lt;a class="reference external" href="http://rsnapshot.org/"&gt;rsnapshot&lt;/a&gt;  to make &lt;strong&gt;incremental backups&lt;/strong&gt; and my backup strategy &lt;strong&gt;Version 2&lt;/strong&gt; now incorporates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsnapshot&lt;/strong&gt; + &lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;Raspberry Pi&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;nightly a cron job runs &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; to sync &lt;tt class="docutils literal"&gt;/home/&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/my/backup/location/daily.0/&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;daily.0&lt;/tt&gt; increments to &lt;tt class="docutils literal"&gt;daily.1&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;daily.1&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;daily.2&lt;/tt&gt;, etc. (retention set to 7 days)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--hard-links&lt;/span&gt;&lt;/tt&gt; is how &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; performs its minimal-storage-magic... if a file remains unchanged in the next backup a hard link is created so subsequent backups only contain modified files and links;&lt;/li&gt;
&lt;li&gt;in the wee morning hours another cron job syncs &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; to Pi server;&lt;/li&gt;
&lt;li&gt;every Saturday &lt;tt class="docutils literal"&gt;daily.6&lt;/tt&gt; rotates to &lt;tt class="docutils literal"&gt;weekly.0&lt;/tt&gt; (and &lt;tt class="docutils literal"&gt;weekly.0&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;weekly.1&lt;/tt&gt; ... with 4 week retention);&lt;/li&gt;
&lt;li&gt;on the 1st of the month &lt;tt class="docutils literal"&gt;weekly.3&lt;/tt&gt; rotates to &lt;tt class="docutils literal"&gt;month.0&lt;/tt&gt; (12 month retention);&lt;/li&gt;
&lt;li&gt;every week or so I sync &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; to the USB drive;&lt;/li&gt;
&lt;li&gt;every month or so I ride the subway to offsite storage and swap drives&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;0. Rsnapshot&lt;/h2&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt;, make a directory to store backups, and make a copy of the default config file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install rsnapshot
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir /my/backup/location
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /etc/rsnapshot.conf /etc/rsnapshot.conf.default
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/rsnapshot.conf&lt;/tt&gt; (important to separate fields with &lt;strong&gt;TABS&lt;/strong&gt; not spaces). Example of a few tweaks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;snapshot_root   /my/backup/location

cmd_cp          /bin/cp
cmd_rm          /bin/rm
cmd_rsync       /usr/bin/rsync
cmd_du          /usr/bin/du
cmd_rsnapshot_diff      /usr/bin/rsnapshot-diff

retain  daily   7
retain  weekly  4
retain  monthly 12

exclude_file    /home/USER/.rsyncExclude  &lt;span class="c"&gt;# ...and create this file with list of things to exclude from backup&lt;/span&gt;

link_dest       1

sync_first      &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# allows better recovery in the event that rsnapshot is interrupted (see: ``man rsnapshot``)&lt;/span&gt;

&lt;span class="c"&gt;# LOCALHOST&lt;/span&gt;
backup  /home/          localhost/
backup  /etc/           localhost/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check config syntax and run backup test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot configtest
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot -t sync
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK go ahead and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot sync &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo rsnapshot daily &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsnapshot du
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Automate backups by running (as root user) &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; and create a job for &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt;. Sample job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; * * *     /usr/bin/rsnapshot sync &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; /usr/bin/rsnapshot daily
&lt;span class="m"&gt;40&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; * * &lt;span class="m"&gt;6&lt;/span&gt;     /usr/bin/rsnapshot weekly
&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; * *     /usr/bin/rsnapshot monthly
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="backup-the-backup"&gt;
&lt;h2&gt;1. Backup the backup&lt;/h2&gt;
&lt;p&gt;Rsnapshot operates as a &lt;strong&gt;pull&lt;/strong&gt; program: it pulls in backups from local and remote devices. Instead of juggling access permissions to allow the rsnapshot server to talk with other devices I decided to limit &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; to making backups on &lt;tt class="docutils literal"&gt;localhost&lt;/tt&gt; and use &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;my already-configured SSH key setup&lt;/a&gt; to &lt;strong&gt;push&lt;/strong&gt; a snapshot of the backup to my Raspberry Pi for remote storage.&lt;/p&gt;
&lt;div class="section" id="on-the-pi"&gt;
&lt;h3&gt;1.1 On the Pi&lt;/h3&gt;
&lt;p&gt;Create a directory to store the backup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir /path/to/backup
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-localhost"&gt;
&lt;h3&gt;1.2 On localhost&lt;/h3&gt;
&lt;p&gt;Set the ip address and hostname of the Pi server in &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;192.168.1.88    raspberry.server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test synching &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; on &lt;tt class="docutils literal"&gt;localhost&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspberry.server:/path/to/backup/&lt;/span&gt;&lt;/tt&gt; with the &lt;tt class="docutils literal"&gt;rsync &lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; option (I exclude &lt;tt class="docutils literal"&gt;/etc/&lt;/tt&gt; from the backup):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rsync --dry-run --archive --hard-links --numeric-ids --delete --exclude&lt;span class="o"&gt;=&lt;/span&gt;etc/ --verbose /my/backup/location/ raspberry.server:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK drop &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; and re-run the command to make a proper backup.&lt;/p&gt;
&lt;p&gt;I use &lt;tt class="docutils literal"&gt;keychain&lt;/tt&gt; to manage &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH keys for password-less logins to the Pi&lt;/a&gt;. Create a &lt;tt class="docutils literal"&gt;backupSnap.sh&lt;/tt&gt; shell script and place in &lt;tt class="docutils literal"&gt;~/bin&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
. &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/.keychain/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-sh
rsync --archive --hard-links --numeric-ids --delete --exclude&lt;span class="o"&gt;=&lt;/span&gt;etc/ /my/backup/location/ &lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Automate the backups by creating a cron job (example that runs daily at 04:50):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; * * *  /home/USERNAME/bin/backupSnap.sh raspberry.server:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="external-drive-and-offsite-storage"&gt;
&lt;h2&gt;2. External drive and offsite storage&lt;/h2&gt;
&lt;p&gt;I connect my USB drive and sync the backup to the device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/home/USERNAME/bin/backupSnap.sh /media/USB/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and take my hard drive for &lt;a class="reference external" href="http://ttc.ca/Routes/General_Information/Maps/index.jsp"&gt;a ride on the subway&lt;/a&gt; to say hello to my offsite storage!&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 12 Aug 2015 01:27:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-12:incremental-backups-rsnapshot.html</guid><category>network</category><category>ssh</category><category>crypto</category><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>Run remote X applications on a local display</title><link>http://www.circuidipity.com/x11-forwarding-ssh.html</link><description>&lt;p&gt;Run remote X applications on a local display with X11 forwarding over SSH.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I give my &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook's smallish amount of RAM&lt;/a&gt; a bit of a break by enlisting other machines on my home network to run X apps. Once &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH is properly configured&lt;/a&gt; it is easy to use X11 forwarding to have apps running on the server show up on the client's local display.&lt;/p&gt;
&lt;div class="section" id="on-the-server"&gt;
&lt;h3&gt;On the server&lt;/h3&gt;
&lt;p&gt;Activate X11 forwarding on the OpenSSH server by modifying &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;X11Forwarding yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl restart sshd.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-client"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;p&gt;X11 forwarding options can be configured system-wide in &lt;tt class="docutils literal"&gt;/etc/ssh/ssh_config&lt;/tt&gt; or per-user in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; or simply forward X on a connection-by-connection basis at login with the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-X&lt;/span&gt;&lt;/tt&gt; option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -X remote.host
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some apps might require the &lt;tt class="docutils literal"&gt;ForwardX11Trusted&lt;/tt&gt; option to allow the full set of X functions from a &lt;strong&gt;trusted&lt;/strong&gt; remote server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -Y remote.host
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; An intruder on the SSH server will be able to capture everything on the local screen and every keystroke with &lt;tt class="docutils literal"&gt;ForwardX11Trusted&lt;/tt&gt; enabled.&lt;/p&gt;
&lt;p&gt;If SSH has properly configured X11 forwarding it sets &lt;tt class="docutils literal"&gt;$DISPLAY&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$DISPLAY&lt;/span&gt;
localhost:10.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch an X app on the server and it opens on the local display:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;urxvt &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logging into a remote host just to run a single app can be overkill. Run one-off commands with the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; option which backgrounds the SSH client before running the app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -fX remote.host urxvt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One interesting use I discovered for X11 forwarding is running the &lt;tt class="docutils literal"&gt;rhythmbox&lt;/tt&gt; music player. A limitation of X11 forwarding is that sound is not transmitted to the client's audio hardware. Turns out that is a &lt;strong&gt;feature&lt;/strong&gt; on my home network setup because my speakers are connected to the server. I launch &lt;tt class="docutils literal"&gt;rhythmbox&lt;/tt&gt; on the server, display and &lt;a class="reference external" href="http://www.circuidipity.com/thinkpad-usb-keyboard-trackpoint.html"&gt;control the player&lt;/a&gt; on the client, and the &lt;a class="reference external" href="https://www.youtube.com/watch?v=mZDYJYqcYK4"&gt;good and funky sounds&lt;/a&gt; issue forth from the server!&lt;/p&gt;
&lt;p&gt;I create the &lt;tt class="docutils literal"&gt;Jukebox&lt;/tt&gt; alias in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_aliases&lt;/span&gt;&lt;/tt&gt; to X11 forward the player as a one-off command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;Jukebox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh -fX remote.host rhythmbox&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy Hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 11 Aug 2015 15:43:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-11:x11-forwarding-ssh.html</guid><category>ssh</category><category>crypto</category><category>network</category><category>graphics</category><category>linux</category></item><item><title>Chromebook liftoff and splashdown</title><link>http://www.circuidipity.com/chromebook-liftoff-splashdown.html</link><description>&lt;p&gt;Create shell scripts to configure a Debian-powered Chromebook when it leaves and returns home.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;After spending a few months on a used desktop I am back on &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook&lt;/a&gt; as my primary computer. I am exploring the idea of taking a cheap(er) and cheerful device like a Chromebook - replacing Chrome OS with full-featured Linux - as a starting point and add/subtract layers of capabilities depending on location and circumstance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outward-bound"&gt;
&lt;h2&gt;Outward bound...&lt;/h2&gt;
&lt;p&gt;I created the &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/liftoff"&gt;liftoff&lt;/a&gt; script to prepare Chromebook before leaving home that syncs a few working directories to a &lt;a class="reference external" href="http://www.circuidipity.com/20141031.html"&gt;USB stick for extra offline storage&lt;/a&gt;. Online access makes available the services of a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi home server&lt;/a&gt; via SSH.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="and-return-home"&gt;
&lt;h2&gt;... and return home&lt;/h2&gt;
&lt;p&gt;Running &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/splashdown"&gt;splashdown&lt;/a&gt; folds the Chromebook back into the home network:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;contents of USB stick are synced with (former desktop converted to headless) server&lt;/li&gt;
&lt;li&gt;1TB hard drive on server made available to Chromebook using &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;SSHFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chromebook hardware is augmented by:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.circuidipity.com/thinkpad-usb-keyboard-trackpoint.html"&gt;ThinkPad USB keyboard&lt;/a&gt; with built-in Trackpoint and 3-button mouse&lt;/li&gt;
&lt;li&gt;external 28&amp;quot; display configured for &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dldsply"&gt;dual-desktop&lt;/a&gt; mode running &lt;a class="reference external" href="http://www.circuidipity.com/i3-tiling-window-manager.html"&gt;i3 window manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add server's 8GB RAM into the mix by running remote X apps on local display with X11 forwarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After 18 months of light-now-daily use I am very happy with my Chromebook. Free software makes modest hardware go a long way.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Mon, 10 Aug 2015 15:12:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-10:chromebook-liftoff-splashdown.html</guid><category>chromebook</category><category>shell</category><category>programming</category><category>debian</category><category>linux</category></item><item><title>Writing systemd service files</title><link>http://www.circuidipity.com/writing-systemd-service-files.html</link><description>&lt;p&gt;Allow &lt;strong&gt;systemd&lt;/strong&gt; and its &lt;tt class="docutils literal"&gt;systemctl&lt;/tt&gt; command to start, stop, and report the status of a daemon by creating a &lt;strong&gt;service file&lt;/strong&gt; in &lt;tt class="docutils literal"&gt;/etc/systemd/system&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Setup the &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-ram-irqbalance.html"&gt;irqbalance daemon I installed on my Raspberry Pi&lt;/a&gt; for systemd control by creating &lt;tt class="docutils literal"&gt;/etc/systemd/system/irqbalance.service&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Daemon to distribute hardware interrupts across multi-CPUs

&lt;span class="o"&gt;[&lt;/span&gt;Service&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forking
&lt;span class="c"&gt;# man systemd.service: &amp;quot;If set to forking... it is recommended to also use the&lt;/span&gt;
&lt;span class="c"&gt;# PIDFile= option, so that systemd can identify the main process of the daemon.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/irqbalance.pid
&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin/irqbalance --pid&lt;span class="o"&gt;=&lt;/span&gt;/var/run/irqbalance.pid

&lt;span class="o"&gt;[&lt;/span&gt;Install&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set the new service to be auto-started at boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl daemon-reload &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;irqbalance.service
Created symlink from /etc/systemd/system/multi-user.target.wants/irqbalance.service to /etc/systemd/system/irqbalance.service.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch daemon and inspect running service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl start irqbalance.service &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl status irqbalance
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Systemd#Writing_unit_files"&gt;Writing systemd unit files&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 04 Aug 2015 16:28:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-04:writing-systemd-service-files.html</guid><category>linux</category></item><item><title>Raspberry Pi RAM gobbled up by irqbalance</title><link>http://www.circuidipity.com/raspberry-pi-ram-irqbalance.html</link><description>&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; After a few days uptime my Pi sees hundreds of MB gobbled up by the &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt; daemon (which balances interrupts across multiple CPUs). Package version is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;1.0.6-3&lt;/span&gt;&lt;/tt&gt; on Debian &lt;tt class="docutils literal"&gt;jessie/armhf&lt;/tt&gt; and its a &lt;a class="reference external" href="https://bugs.launchpad.net/ubuntu/+source/irqbalance/+bug/1247107"&gt;known bug&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; &lt;strong&gt;0)&lt;/strong&gt; Restart &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt; in nightly cron job, or &lt;strong&gt;1)&lt;/strong&gt; Compile and install a newer, patched version (my choice).&lt;/p&gt;
&lt;p&gt;Remove buggy &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl stop irqbalance
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get --purge remove irqbalance
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install development tools on the Pi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential autogen automake libtool pkg-config checkinstall
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/Irqbalance/irqbalance"&gt;Download source&lt;/a&gt; and unpack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://github.com/Irqbalance/irqbalance/archive/v1.0.9.tar.gz &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar xvzf v1.0.9.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Checkinstall&lt;/strong&gt; is an easy way to make Debian packages for personal use. Compile and (check)install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;irqbalance-1.0.9
&lt;span class="nv"&gt;$ &lt;/span&gt;/autogen.sh
&lt;span class="nv"&gt;$ &lt;/span&gt;./configure
&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo checkinstall make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start new &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /usr/local/sbin/irqbalance &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optional: Configure the daemon for &lt;a class="reference external" href="http://www.circuidipity.com/writing-systemd-service-files.html"&gt;systemd control and auto-start at boot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have been running the daemon for a few days now and it stays around 0.6% memory usage vs &lt;strong&gt;20%&lt;/strong&gt; (and growing) of the previous packaged version.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 04 Aug 2015 16:34:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-30:raspberry-pi-ram-irqbalance.html</guid><category>raspberry pi</category><category>debian</category><category>linux</category></item><item><title>Run a Raspberry Pi from USB storage v4.0</title><link>http://www.circuidipity.com/raspberry-pi-usb-storage-v4.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #0 .:&lt;/a&gt; I am exploring the use of my Pi as &lt;strong&gt;24/7 uptime home server&lt;/strong&gt;. Hard drives offer a more robust storage media than a Pi's default choice of microSD cards and that is what I decide to use. &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; I put my plan in motion using &lt;strong&gt;Debian&lt;/strong&gt; and move &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; from a microSD to a powered 1TB USB 3.5&amp;quot; hard drive with encrypted storage.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Current setup:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;HDMI display + USB keyboard (initial setup)&lt;/li&gt;
&lt;li&gt;USB hard drive with 3 partitions: &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;, encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-20150705&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;4GB microSD card (initial setup and &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Previous versions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;v3.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage-using-raspbian.html"&gt;Pi 2 Model B + Raspbian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v2.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage.html"&gt;Pi 2 Model B + Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v1.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Pi Model B + Raspbian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h2&gt;0. Debian&lt;/h2&gt;
&lt;p&gt;With the move to ARMv7 the Pi 2 is now capable of running the official Debian &lt;strong&gt;armhf&lt;/strong&gt; port. Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2.&lt;/p&gt;
&lt;p&gt;Start here: &lt;a class="reference external" href="http://www.circuidipity.com/debian-jessie-raspberry-pi-2.html"&gt;Install and configure Jessie on a microSD&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;1. Partition&lt;/h2&gt;
&lt;p&gt;I connect the USB drive to Pi and confirm detection:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# lsblk&lt;/span&gt;
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda           8:0    &lt;span class="m"&gt;0&lt;/span&gt; 931.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
└─sda1        8:1    &lt;span class="m"&gt;0&lt;/span&gt; 931.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
mmcblk0     179:0    &lt;span class="m"&gt;0&lt;/span&gt;   7.6G  &lt;span class="m"&gt;0&lt;/span&gt; disk
├─mmcblk0p1 179:1    &lt;span class="m"&gt;0&lt;/span&gt;   121M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot/firmware
└─mmcblk0p2 179:2    &lt;span class="m"&gt;0&lt;/span&gt;   2.9G  &lt;span class="m"&gt;0&lt;/span&gt; part /
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Device is &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt; with a single &lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt; partition. Use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to create 3 new partitions on the USB drive:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 20GB - future &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;sda2 - 2GB - future encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;sda3 - remaining space - future encrypted &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample walk-through:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/sda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.25.2&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot Start        End    Sectors   Size Id Type
/dev/sda1        &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;1953525167&lt;/span&gt; &lt;span class="m"&gt;1953523120&lt;/span&gt; 931.5G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Selected partition 1
Partition &lt;span class="m"&gt;1&lt;/span&gt; has been deleted.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;4&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-4, default 1&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 2048&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;: +20G

Created a new partition &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size &lt;span class="m"&gt;20&lt;/span&gt; GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;2-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 41945088&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;: +1G

Created a new partition &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size &lt;span class="m"&gt;1&lt;/span&gt; GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;2&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;3,4, default 3&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;44042240-1953525167, default 44042240&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44042240-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 910.5 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot    Start        End    Sectors   Size Id Type
/dev/sda1           &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;41945087&lt;/span&gt;   &lt;span class="m"&gt;41943040&lt;/span&gt;    20G &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/sda2       &lt;span class="m"&gt;41945088&lt;/span&gt;   &lt;span class="m"&gt;44042239&lt;/span&gt;    &lt;span class="m"&gt;2097152&lt;/span&gt;     1G &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/sda3       &lt;span class="m"&gt;44042240&lt;/span&gt; &lt;span class="m"&gt;1953525167&lt;/span&gt; &lt;span class="m"&gt;1909482928&lt;/span&gt; 910.5G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Syncing disks.

&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="root"&gt;
&lt;h2&gt;2. Root&lt;/h2&gt;
&lt;p&gt;Format the future &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition using filesystem &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt; and mount:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mke2fs -t ext4 -L rootfs /dev/sda1&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/sda1 /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify options in &lt;tt class="docutils literal"&gt;/boot/firmware/cmdline.txt&lt;/tt&gt; to point the bootloader to &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; filesystem on the USB device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Original:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ttyAMA0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p2 rootwait net.ifnames&lt;span class="o"&gt;=&lt;/span&gt;1

Modified:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ttyAMA0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sda1 rootwait &lt;span class="nv"&gt;rootdelay&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Comment out &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; and point to the new &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition in &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#/dev/mmcblk0p2  / ext4 relatime,errors=remount-ro,discard 0 1&lt;/span&gt;
/dev/sda1 / ext4 relatime,errors&lt;span class="o"&gt;=&lt;/span&gt;remount-ro &lt;span class="m"&gt;0&lt;/span&gt; 1
/dev/mmcblk0p1 /boot/firmware vfat defaults &lt;span class="m"&gt;0&lt;/span&gt; 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;tt class="docutils literal"&gt;rsync&lt;/tt&gt; to duplicate contents of &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; on the microSD &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt; to the &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition on the USB hard drive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get -y install rsync&lt;/span&gt;
&lt;span class="c"&gt;# rsync --exclude=firmware/* -axv / /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="luks-encryption"&gt;
&lt;h2&gt;3. LUKS encryption&lt;/h2&gt;
&lt;p&gt;Root is unencrypted to allow &lt;strong&gt;unattended boots&lt;/strong&gt; of the server (otherwise the Pi would hang waiting for a passphrase that never arrives). A LUKS-encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; is added with a &lt;strong&gt;randomly-generated key&lt;/strong&gt; and post-boot I log in and mount a LUKS-encrypted &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt; partition using a passphrase.&lt;/p&gt;
&lt;div class="section" id="storage"&gt;
&lt;h3&gt;3.1 Storage&lt;/h3&gt;
&lt;p&gt;Encrypt the partition, assign a passphrase, and format using filesystem &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get -y install cryptsetup&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup luksFormat /dev/sda3&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup luksOpen /dev/sda3 sda3_crypt&lt;/span&gt;
&lt;span class="c"&gt;# mkfs.ext4 -L storage /dev/mapper/sda3_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a mountpoint and mount the partition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkdir /media/sda3_crypt &amp;amp;&amp;amp; mount -t ext4 /dev/mapper/sda3_crypt /media/sda3_crypt/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# umount /media/sda3_crypt &amp;amp;&amp;amp; cryptsetup luksClose /dev/mapper/sda3_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swap"&gt;
&lt;h3&gt;3.2 Swap&lt;/h3&gt;
&lt;p&gt;Configure the secure wiping of the swap partition, auto-generation of a new random key, and swap activation at boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# echo &amp;quot;sda2_crypt /dev/sda2 /dev/urandom cipher=aes-xts-plain64,size=256,swap&amp;quot; &amp;gt;&amp;gt; /etc/crypttab&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;/dev/mapper/sda2_crypt none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reboot"&gt;
&lt;h2&gt;4. Reboot&lt;/h2&gt;
&lt;p&gt;Aaaand reboot!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log in and check the new filesystem layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        20G  646M   18G   4% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  340K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="static-address"&gt;
&lt;h2&gt;5. Static Address&lt;/h2&gt;
&lt;p&gt;Assign a Pi home server a &lt;strong&gt;static network address&lt;/strong&gt;. Sample &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; that disables &lt;tt class="docutils literal"&gt;dhcp&lt;/tt&gt;, sets ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;, and connects to a router (managing DNS) at &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;auto eth0
iface eth0 inet static
    address 192.168.1.88
    netmask 255.255.255.0
    gateway 192.168.1.1
    dns-nameservers 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.raspberrypi.org/forums/viewtopic.php?f=29&amp;amp;t=44177"&gt;Discussion thread (raspberrypi.org/forums)&lt;/a&gt; about moving root to external USB storage.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Raspberry Pi requires an SD card to boot and the bootloader expects certain config files to reside on a &lt;tt class="docutils literal"&gt;vfat&lt;/tt&gt; formatted partition. This particular Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-DATE.img&lt;/span&gt;&lt;/tt&gt; installs the necessary files in &lt;tt class="docutils literal"&gt;mmcblk0p1&lt;/tt&gt; and mounts this partition to &lt;tt class="docutils literal"&gt;/boot/firmware&lt;/tt&gt;. You can inspect the image partition layout, contents, and make modifications before installing to a microSD: &lt;a class="reference external" href="https://raspberrypi.stackexchange.com/questions/13137/how-can-i-mount-a-raspberry-pi-linux-distro-image"&gt;How can I mount a Raspberry Pi linux distro image?&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sat, 25 Jul 2015 18:25:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-25:raspberry-pi-usb-storage-v4.html</guid><category>raspberry pi</category><category>debian</category><category>linux</category><category>luks</category><category>crypto</category><category>network</category></item><item><title>Debian Jessie on Raspberry Pi 2</title><link>http://www.circuidipity.com/debian-jessie-raspberry-pi-2.html</link><description>&lt;p&gt;With the move to ARMv7 I am now capable of running the official ARM port of Debian (with Pi-friendly kernel+firmware) on my Raspberry Pi 2!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2.&lt;/p&gt;
&lt;p&gt;My setup:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;HDMI display + USB keyboard&lt;/li&gt;
&lt;li&gt;Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-20150705&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;32GB microSD card&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;Download the latest &lt;a class="reference external" href="https://images.collabora.co.uk/rpi2/"&gt;image and GPG signature&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.bmap
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz.asc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/verify-pgp-signature-gnupg.html"&gt;Verify the GPG signature&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-to-microsd"&gt;
&lt;h2&gt;1. Install to microSD&lt;/h2&gt;
&lt;p&gt;Unpack the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gzip -d jessie-rpi2-20150202.img.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In lieu of the usual (slower) &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; I use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bmap-tools&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-*.img.bmap&lt;/span&gt;&lt;/tt&gt; to write the image to microSD:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install bmap-tools
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo bmaptool copy --bmap jessie-rpi2-20150705.img.bmap jessie-rpi2-20150705.img /dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="boot-and-resize"&gt;
&lt;h2&gt;2. Boot and resize&lt;/h2&gt;
&lt;p&gt;Login as &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; with password &lt;tt class="docutils literal"&gt;debian&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Filesystem layout &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; on the microSD card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem      Size  Used Avail Use% Mounted on
/dev/root       2.8G  555M  2.1G  21% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image inflates into a 2.8GB partition; using only a fraction of available capacity. I use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to repartition the microSD to use all storage and &lt;tt class="docutils literal"&gt;resize2fs&lt;/tt&gt; to &lt;a class="reference external" href="http://www.circuidipity.com/resize-rootfs-raspberry-pi.html"&gt;expand rootfs into its new accomodations&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Alternative: &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-usb-storage-v4.html"&gt;Run a Raspberry Pi from USB storage&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="post-install"&gt;
&lt;h2&gt;3. Post-install&lt;/h2&gt;
&lt;p&gt;Configure:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a new root password: &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;default locale: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;timezone: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create 1GB swap file: &lt;tt class="docutils literal"&gt;dd &lt;span class="pre"&gt;if=/dev/zero&lt;/span&gt; &lt;span class="pre"&gt;of=/swap&lt;/span&gt; bs=1M count=1024 &amp;amp;&amp;amp; mkswap /swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable swap file at boot: &lt;tt class="docutils literal"&gt;echo &amp;quot;/swap none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;setup hardware random number generator: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;-y&lt;/span&gt; install &lt;span class="pre"&gt;rng-tools&lt;/span&gt; &amp;amp;&amp;amp; echo &lt;span class="pre"&gt;&amp;quot;bcm2708-rng&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;add new user: &lt;tt class="docutils literal"&gt;adduser USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;hostname: modify &lt;tt class="docutils literal"&gt;/etc/hostname&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt; and reboot&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="package-management"&gt;
&lt;h2&gt;4. Package management&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;deb http://httpredir.debian.org/debian jessie main contrib non-free
&lt;span class="c"&gt;#deb-src http://httpredir.debian.org/debian/ jessie main contrib non-free&lt;/span&gt;

deb http://security.debian.org/ jessie/updates main contrib non-free
&lt;span class="c"&gt;#deb-src http://security.debian.org/ jessie/updates main contrib non-free&lt;/span&gt;

deb http://httpredir.debian.org/debian/ jessie-updates main contrib non-free
&lt;span class="c"&gt;#deb-src http://httpredir.debian.org/debian/ jessie-updates main contrib non-free&lt;/span&gt;

deb &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;trusted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes&lt;span class="o"&gt;]&lt;/span&gt; https://repositories.collabora.co.uk/debian/ jessie rpi2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image provides a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flash-kernel&lt;/span&gt;&lt;/tt&gt; package customized for the Pi. Use &lt;strong&gt;apt-pinning&lt;/strong&gt; to &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/#comment-64b33335e8d852179704fb5dc218aa1e"&gt;continue using this custom package&lt;/a&gt; vs updates from official Debian repositories. Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/preferences.d/flash-kernel&lt;/span&gt;&lt;/tt&gt; with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Package: flash-kernel
Pin: origin repositories.collabora.co.uk
Pin-Priority: 900
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flash-kernel&lt;/span&gt;&lt;/tt&gt; is pinned:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-cache policy flash-kernel&lt;/span&gt;
flash-kernel:
  Installed: 3.35.co1+b1
  Candidate: 3.35.co1+b1
  Package pin: 3.35.co1+b1
  Version table:
 *** 3.35.co1+b1 900
        &lt;span class="m"&gt;500&lt;/span&gt; https://repositories.collabora.co.uk/debian/ jessie/rpi2 armhf Packages
        &lt;span class="m"&gt;100&lt;/span&gt; /var/lib/dpkg/status
     3.35 900
        &lt;span class="m"&gt;500&lt;/span&gt; http://httpredir.debian.org/debian/ jessie/main armhf Packages
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now is a good time to upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="remote-access"&gt;
&lt;h2&gt;5. Remote access&lt;/h2&gt;
&lt;p&gt;Generate new SSH keys on the Pi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# rm /etc/ssh/ssh_host_*key* &amp;amp;&amp;amp; dpkg-reconfigure openssh-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Secure remote access by &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;requiring clients to use SSH keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;/boot/config.txt&lt;/tt&gt; has been moved to &lt;tt class="docutils literal"&gt;/boot/firmware/config.txt&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sat, 25 Jul 2015 17:48:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-22:debian-jessie-raspberry-pi-2.html</guid><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>Resize rootfs on Raspberry Pi</title><link>http://www.circuidipity.com/resize-rootfs-raspberry-pi.html</link><description>&lt;p&gt;Resize a mounted partition to take full advantage of the storage capacity of a microSD card.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2. I install the image file to a 32GB microSD card, insert card into my Pi and reboot, log in and inspect the filesystem layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem      Size  Used Avail Use% Mounted on
/dev/root       2.8G  555M  2.1G  21% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image inflates into a 2.8GB partition; using only a fraction of available capacity. I will use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to repartition the microSD to use all storage and &lt;tt class="docutils literal"&gt;resize2fs&lt;/tt&gt; to expand &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; into its new accomodations!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repartition"&gt;
&lt;h2&gt;0. Repartition&lt;/h2&gt;
&lt;p&gt;Repartitioning the mounted filesytem using &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; on the Pi involves:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;delete the current &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; partition containing &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create a new partition &lt;strong&gt;beginning at the same sector as the old partition&lt;/strong&gt; that uses all remaining space&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;mmcblk0p1&lt;/tt&gt; - containing &lt;tt class="docutils literal"&gt;/boot/firmware&lt;/tt&gt; - remains untouched&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Ensure the start sector remains identical (example: mine below is &lt;tt class="docutils literal"&gt;249856&lt;/tt&gt; on the old and new versions of &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; or there is a high probability the operation will fail and all data lost.&lt;/p&gt;
&lt;p&gt;A sample run-through on my own microSD:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/mmcblk0&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.25.2&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/mmcblk0: 29.7 GiB, &lt;span class="m"&gt;31914983424&lt;/span&gt; bytes, &lt;span class="m"&gt;62333952&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0xc96ffe28

Device         Boot  Start     End Sectors  Size Id Type
/dev/mmcblk0p1        &lt;span class="m"&gt;2048&lt;/span&gt;  &lt;span class="m"&gt;249855&lt;/span&gt;  &lt;span class="m"&gt;247808&lt;/span&gt;  121M  e W95 FAT16 &lt;span class="o"&gt;(&lt;/span&gt;LBA&lt;span class="o"&gt;)&lt;/span&gt;
/dev/mmcblk0p2      &lt;span class="m"&gt;249856&lt;/span&gt; &lt;span class="m"&gt;6291455&lt;/span&gt; &lt;span class="m"&gt;6041600&lt;/span&gt;  2.9G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1,2, default 2&lt;span class="o"&gt;)&lt;/span&gt;:

Partition &lt;span class="m"&gt;2&lt;/span&gt; has been deleted.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;   &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
   e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;:

Using default response p.
Partition number &lt;span class="o"&gt;(&lt;/span&gt;2-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;249856-62333951, default 249856&lt;span class="o"&gt;)&lt;/span&gt;: 249856
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;249856-62333951, default 62333951&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 29.6 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/mmcblk0: 29.7 GiB, &lt;span class="m"&gt;31914983424&lt;/span&gt; bytes, &lt;span class="m"&gt;62333952&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0xc96ffe28

Device         Boot  Start      End  Sectors  Size Id Type
/dev/mmcblk0p1        &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;249855&lt;/span&gt;   &lt;span class="m"&gt;247808&lt;/span&gt;  121M  e W95 FAT16 &lt;span class="o"&gt;(&lt;/span&gt;LBA&lt;span class="o"&gt;)&lt;/span&gt;
/dev/mmcblk0p2      &lt;span class="m"&gt;249856&lt;/span&gt; &lt;span class="m"&gt;62333951&lt;/span&gt; &lt;span class="m"&gt;62084096&lt;/span&gt; 29.6G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... aaaand reboot!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resize"&gt;
&lt;h2&gt;1. Resize&lt;/h2&gt;
&lt;p&gt;Expand &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; to use the new capacity:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# resize2fs /dev/mmcblk0p2&lt;/span&gt;
resize2fs 1.42.12 &lt;span class="o"&gt;(&lt;/span&gt;29-Aug-2014&lt;span class="o"&gt;)&lt;/span&gt;
Filesystem at /dev/mmcblk0p2 is mounted on /&lt;span class="p"&gt;;&lt;/span&gt; on-line resizing required
&lt;span class="nv"&gt;old_desc_blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1, &lt;span class="nv"&gt;new_desc_blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2
The filesystem on /dev/mmcblk0p2 is now &lt;span class="m"&gt;7760512&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;4k&lt;span class="o"&gt;)&lt;/span&gt; blocks long.

&lt;span class="c"&gt;# df -h&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        30G  561M   28G   2% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://raspberrypi.stackexchange.com/questions/499/how-can-i-resize-my-root-partition"&gt;https://raspberrypi.stackexchange.com/questions/499/how-can-i-resize-my-root-partition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 21 Jul 2015 17:19:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-21:resize-rootfs-raspberry-pi.html</guid><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>1000 cool bits</title><link>http://www.circuidipity.com/20150720.html</link><description>&lt;div class="section" id="id1"&gt;
&lt;h2&gt;0001&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Iceweasel&lt;/tt&gt; alerts current flash was out-of-date and insecure -- Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flashplugin-nonfree&lt;/span&gt;&lt;/tt&gt; package does not auto-update.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Run update:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-flashplugin-nonfree --install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;0010&lt;/h2&gt;
&lt;p&gt;Simple method to make source compiles into &lt;tt class="docutils literal"&gt;*.deb&lt;/tt&gt; packages -- Use &lt;tt class="docutils literal"&gt;checkinstall&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install checkinstall
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and &lt;tt class="docutils literal"&gt;checkinstall&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./configure
&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo checkinstall make install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;0011&lt;/h2&gt;
&lt;p&gt;PDF links opening in Chrome vs default browser Firefox -- Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-www-browser&lt;/span&gt;&lt;/tt&gt; checked before &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x-www-browser&lt;/span&gt;&lt;/tt&gt;. Setting only the second option is not enough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Configure both options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-alternatives --config gnome-www-browser
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-alternatives --config x-www-browser
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;0100&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dpkg&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-file&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;list files owned by PACKAGE: &lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;-L&lt;/span&gt; PACKAGE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;find which package owns FILE: &lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;-S&lt;/span&gt; /etc/FILE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;find which package owns FILE (even if not installed):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install apt-file
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-file update
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-file search /etc/FILE
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;0101&lt;/h2&gt;
&lt;p&gt;Swappiness -- Preference of the kernel to move processes out of physical memory to the swap partition. Range is 0-100, default is set to 60 and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;check current: &lt;tt class="docutils literal"&gt;cat /proc/sys/vm/swappiness&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;temporary change: &lt;tt class="docutils literal"&gt;sudo sysctl vm.swappiness=1&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;permanent: create &lt;tt class="docutils literal"&gt;/etc/sysctl.d/local.conf&lt;/tt&gt; and set...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;0110&lt;/h2&gt;
&lt;p&gt;Clear the Bash cache of PATH to executables -- Originally installed &lt;tt class="docutils literal"&gt;glances&lt;/tt&gt; via &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/usr/bin/glances&lt;/tt&gt;. Removed then re-installed via &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/usr/local/bin/glances&lt;/tt&gt;. Command would show in my PATH but - without explicit PATH defined - would try to execute (missing) file in &lt;tt class="docutils literal"&gt;/usr/bin&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Clear cache using &lt;tt class="docutils literal"&gt;hash&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;glances
glances is hashed &lt;span class="o"&gt;(&lt;/span&gt;/usr/bin/glances&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt; -d glances
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;glances
glances is /usr/local/bin/glances
&lt;span class="nv"&gt;$ &lt;/span&gt;glances
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;0111&lt;/h2&gt;
&lt;p&gt;Test if system is 64bit (maybe add to a shell script):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;getconf LONG_BIT&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;64&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;64bit Detected&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;1000&lt;/h2&gt;
&lt;p&gt;Configure a static IP address in Debian's &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# The primary network interface&lt;/span&gt;
auto eth0
&lt;span class="c"&gt;#iface eth0 inet dhcp&lt;/span&gt;
iface eth0 inet static
    address 192.168.1.88    &lt;span class="c"&gt;# device ip&lt;/span&gt;
    netmask 255.255.255.0
    gateway 192.168.1.1     &lt;span class="c"&gt;# router ip&lt;/span&gt;
    dns-nameservers 192.168.1.1     &lt;span class="c"&gt;# or &amp;#39;8.8.8.8&amp;#39; for google dns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Mon, 20 Jul 2015 15:18:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-20:20150720.html</guid><category>bits</category></item><item><title>Verify a PGP signature with GnuPG</title><link>http://www.circuidipity.com/verify-pgp-signature-gnupg.html</link><description>&lt;p&gt;Using a &lt;strong&gt;PGP private/public keypair&lt;/strong&gt; to create a &lt;strong&gt;digital signature&lt;/strong&gt; for a file certifies its integrity. Adding a signature to software available for download heightens confidence that everything is OK!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;A developer signs a package with their private key and the receiver verifies the signature with the public key. If the package has been modified or corrupted in transmission the verification will fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GnuPG&lt;/strong&gt; is used to verify PGP signatures:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install gnupg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; I download a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Debian Jessie for Raspberry Pi 2&lt;/a&gt; image and its signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz.asc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import"&gt;
&lt;h2&gt;1. Import&lt;/h2&gt;
&lt;div class="section" id="method-0"&gt;
&lt;h3&gt;Method 0&lt;/h3&gt;
&lt;p&gt;If the location of the developer's public key is known, I can directly import the key into my keyring (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/pubring.gpg&lt;/span&gt;&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-keys 0xC2300F7B
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="method-1"&gt;
&lt;h3&gt;Method 1&lt;/h3&gt;
&lt;p&gt;Identify the public key used to generate the signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --verify jessie-rpi2-20150705.img.gz.asc
gpg: Signature made Sun &lt;span class="m"&gt;05&lt;/span&gt; Jul &lt;span class="m"&gt;2015&lt;/span&gt; 09:06:01 AM EDT using RSA key ID C2300F7B
gpg: Can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t check signature: public key not found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Public key is &lt;tt class="docutils literal"&gt;0xC2300F7B&lt;/tt&gt;. Run a key search &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and import:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --search 0xC2300F7B
gpg: keyring &lt;span class="sb"&gt;`&lt;/span&gt;/home/dwa/.gnupg/secring.gpg&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; created
gpg: searching &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0xC2300F7B&amp;quot;&lt;/span&gt; from hkp server keys.gnupg.net
&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;     Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;
        Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;
        Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;
            &lt;span class="m"&gt;4096&lt;/span&gt; bit RSA key C2300F7B, created: 2014-04-25
Keys 1-1 of &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0xC2300F7B&amp;quot;&lt;/span&gt;.  Enter number&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, N&lt;span class="o"&gt;)&lt;/span&gt;ext, or Q&lt;span class="o"&gt;)&lt;/span&gt;uit &amp;gt; 1
gpg: requesting key C2300F7B from hkp server keys.gnupg.net
gpg: key C2300F7B: public key &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt; imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 1
gpg:               imported: &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;RSA: 1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verify"&gt;
&lt;h2&gt;2. Verify&lt;/h2&gt;
&lt;p&gt;List keys in my keyring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --list-keys
/home/dwa/.gnupg/pubring.gpg
----------------------------
pub   4096R/C2300F7B 2014-04-25
uid                  Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;
uid                  Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;
uid                  Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;
sub   4096R/92545E8E 2014-04-25
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify package signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --verify jessie-rpi2-20150705.img.gz.asc jessie-rpi2-20150705.img.gz
gpg: Signature made Sun &lt;span class="m"&gt;05&lt;/span&gt; Jul &lt;span class="m"&gt;2015&lt;/span&gt; 09:06:01 AM EDT using RSA key ID C2300F7B
gpg: Good signature from &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: &lt;span class="m"&gt;2870&lt;/span&gt; A31B EA9D BCF2 &lt;span class="m"&gt;7472&lt;/span&gt;  &lt;span class="m"&gt;3108&lt;/span&gt; C274 DB64 C230 0F7B
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The warning about &lt;strong&gt;key is not certified with a trusted signature&lt;/strong&gt; means GnuPG verified that key made that signature but can't guarantee that key really belongs to the developer. It's up to me to decide how much confidence to place in the authenticity of the key.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Auto-generated &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/gpg.conf&lt;/span&gt;&lt;/tt&gt; defaults to searching &lt;tt class="docutils literal"&gt;keyserver &lt;span class="pre"&gt;hkp://keys.gnupg.net&lt;/span&gt;&lt;/tt&gt; which redirects to the &lt;a class="reference external" href="https://sks-keyservers.net/"&gt;SKS Keyservers pool&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sun, 19 Jul 2015 11:33:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-19:verify-pgp-signature-gnupg.html</guid><category>crypto</category><category>debian</category><category>linux</category></item></channel></rss>