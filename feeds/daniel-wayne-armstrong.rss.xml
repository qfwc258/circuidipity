<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Circuidipity</title><link>http://www.circuidipity.com/</link><description></description><atom:link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 24 Sep 2015 13:58:00 -0400</lastBuildDate><item><title>Create a self-signed SSL certificate</title><link>http://www.circuidipity.com/self-signed-ssl-certificate.html</link><description>&lt;p&gt;Secure web access to services hosted on a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi home server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What's up:&lt;/strong&gt; I am running &lt;a class="reference external" href="http://www.circuidipity.com/ttrss.html"&gt;Tiny Tiny RSS&lt;/a&gt; (ttrss) and &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;Nginx&lt;/a&gt; on a Debian-powered Pi and want to divert HTTP traffic from port 80 to HTTPS login and access news feeds on port 443. Rather than obtain an SSL certificate from a certificate authority (CA) its a simple matter to create one for personal use.&lt;/p&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;openssl&lt;/tt&gt; and generate a certificate for Nginx:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssl
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/nginx/ssl
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo openssl req -x509 -nodes -days &lt;span class="m"&gt;365&lt;/span&gt; -newkey rsa:2048 -keyout /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a new server block in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-available&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
    listen 80&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;## listen for ipv4; this line is default and implied&lt;/span&gt;
    server_name rss.myraspberrypi.ca&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;## redirect all non-https traffic to https&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
    listen &lt;span class="m"&gt;443&lt;/span&gt; ssl&lt;span class="p"&gt;;&lt;/span&gt;
    server_name rss.myraspberrypi.ca&lt;span class="p"&gt;;&lt;/span&gt;
    ssl_certificate /etc/nginx/ssl/server.crt&lt;span class="p"&gt;;&lt;/span&gt;
    ssl_certificate_key /etc/nginx/ssl/server.key&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Activate the block by creating a symlink in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-enabled&lt;/span&gt;&lt;/tt&gt; and restart server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl restart nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure &lt;a class="reference external" href="http://www.circuidipity.com/20141006.html"&gt;port forwarding on the router&lt;/a&gt; and (optional) &lt;a class="reference external" href="https://wiki.gandi.net/en/dns/zone/subdomain"&gt;setup a subdomain&lt;/a&gt; with a hosting/domain provider.&lt;/p&gt;
&lt;p&gt;Note the first time navigating to the new HTTPS address the (Firefox) browser warns &amp;quot;This Connection is Untrusted&amp;quot; (which is to be expected since its a self-signed certificate vs CA verification).&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04"&gt;Create an SSL certificate on Nginx for Ubuntu&lt;/a&gt;; &lt;a class="reference external" href="https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom"&gt;Rewrite HTTP requests to HTTPS&lt;/a&gt;; &lt;a class="reference external" href="http://nginx.org/en/docs/http/server_names.html"&gt;Nginx server_names&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 27 Aug 2015 19:25:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-27:self-signed-ssl-certificate.html</guid><category>network</category><category>debian</category><category>linux</category></item><item><title>Install CyanogenMod on Nexus 4</title><link>http://www.circuidipity.com/install-cyanogenmod-nexus-4.html</link><description>&lt;p&gt;Replace stock Android with CyanogenMod on the Nexus 4 using Linux.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Thanks to a &lt;strong&gt;very generous friend&lt;/strong&gt; who upgraded to a new smartphone I now have her old Google Nexus 4. I have dabbled with alternative Android firmwares in the past, and was inspired to give CyaonogenMod a go on this phone after reading &lt;a class="reference external" href="https://lwn.net/Articles/602521/"&gt;Android without the mothership [LWN.net]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;I install CyanogenMod from a host running Debian. Download &lt;tt class="docutils literal"&gt;adb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;fastboot&lt;/tt&gt; install tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install android-tools-adb android-tools-fastboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nexus 4 device is code-named &lt;tt class="docutils literal"&gt;mako&lt;/tt&gt;. Download:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a recovery image (TWRP) - &lt;a class="reference external" href="https://twrp.me/devices/lgnexus4.html"&gt;https://twrp.me/devices/lgnexus4.html&lt;/a&gt; (&lt;a class="reference external" href="https://dl.twrp.me/mako/"&gt;latest is 2.8.7.0&lt;/a&gt; as of 7/29)&lt;/li&gt;
&lt;li&gt;the Cyanogenmod ROM nightly build &lt;a class="reference external" href="https://download.cyanogenmod.org/?device=mako&amp;amp;type="&gt;specific to this device&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-options"&gt;
&lt;h2&gt;1. Developer Options&lt;/h2&gt;
&lt;p&gt;On the Nexus I enable developer options by navigating to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Settings-&amp;gt;About&lt;/span&gt; phone&lt;/tt&gt;, click to open and make +7 taps on &lt;strong&gt;Build&lt;/strong&gt; number. Displays &lt;tt class="docutils literal"&gt;You are now a developer&lt;/tt&gt;. Return to settings and &lt;tt class="docutils literal"&gt;Developer Options&lt;/tt&gt; is now visible. Click to open and activate &lt;tt class="docutils literal"&gt;USB debugging&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="connect-device"&gt;
&lt;h2&gt;2. Connect device&lt;/h2&gt;
&lt;p&gt;Connect phone to host via USB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsusb &lt;span class="p"&gt;|&lt;/span&gt; grep -i nexus
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 003: ID 18d1:4ee2 Google Inc. Nexus &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;debug&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;adb devices -l
* daemon not running. starting it now on port &lt;span class="m"&gt;5037&lt;/span&gt; *
* daemon started successfully *
List of devices attached
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;       offline usb:1-12
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm &lt;tt class="docutils literal"&gt;Allow usb debugging&lt;/tt&gt; in pop-up on the phone. Re-run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;adb devices -l
List of devices attached
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;       device usb:1-12 product:occam model:Nexus_4 device:mako
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="unlock-bootloader"&gt;
&lt;h2&gt;3. Unlock bootloader&lt;/h2&gt;
&lt;p&gt;Boot the device into &lt;strong&gt;fastboot&lt;/strong&gt; mode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;adb reboot bootloader
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once device is in fastboot mode, verify host sees device and unlock:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fastboot devices -l
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;       fastboot usb:1-12
&lt;span class="nv"&gt;$ &lt;/span&gt;fastboot oem unlock
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-twrp"&gt;
&lt;h2&gt;4. Install TWRP&lt;/h2&gt;
&lt;p&gt;While in fastboot mode flash the TWRP recovery image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fastboot flash recovery twrp-VERSION-mako.img
sending &lt;span class="s1"&gt;&amp;#39;recovery&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;9028&lt;/span&gt; KB&lt;span class="o"&gt;)&lt;/span&gt;...
OKAY &lt;span class="o"&gt;[&lt;/span&gt;  0.287s&lt;span class="o"&gt;]&lt;/span&gt;
writing &lt;span class="s1"&gt;&amp;#39;recovery&amp;#39;&lt;/span&gt;...
OKAY &lt;span class="o"&gt;[&lt;/span&gt;  0.501s&lt;span class="o"&gt;]&lt;/span&gt;
finished. total &lt;span class="nb"&gt;time&lt;/span&gt;: 0.787s
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot the bootloader:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fastboot reboot-bootloader
rebooting into bootloader...
OKAY &lt;span class="o"&gt;[&lt;/span&gt;  0.001s&lt;span class="o"&gt;]&lt;/span&gt;
finished. total &lt;span class="nb"&gt;time&lt;/span&gt;: 0.001s
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the device volume keys to navigate to &lt;strong&gt;Recovery&lt;/strong&gt; mode and power key to select. TWRP recovery starts. Tap &lt;strong&gt;Wipe&lt;/strong&gt; and swipe to start &lt;strong&gt;Factory Reset&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-cyanogenmod"&gt;
&lt;h2&gt;5. Install CyanogenMod&lt;/h2&gt;
&lt;p&gt;Copy the CyanogenMod distribution zip file into device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;adb push cm-12.1-VERSION-NIGHTLY-mako.zip /sdcard
&lt;span class="m"&gt;3753&lt;/span&gt; KB/s &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;263171832&lt;/span&gt; bytes in 68.465s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Return to TWRP main menu and tap &lt;strong&gt;Install&lt;/strong&gt;. Search in file system for the freshly-installed zip and tap to select. Tap checkbox Zip file signature verification and swipe to confirm flash. The message &lt;tt class="docutils literal"&gt;Successfull&lt;/tt&gt; should appear. Tap &lt;tt class="docutils literal"&gt;Reboot System&lt;/tt&gt; and device boots into CyanogenMod. Yes!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="f-droid"&gt;
&lt;h2&gt;6. F-Droid&lt;/h2&gt;
&lt;p&gt;As a replacement for the non-free Google Play Store app I use the &lt;a class="reference external" href="https://f-droid.org/about/"&gt;F-Droid&lt;/a&gt; free software app repository:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;on the phone navigate to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Settings-&amp;gt;Security-&amp;gt;Unknown&lt;/span&gt; sources&lt;/tt&gt; and tap to allow&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://f-droid.org/FDroid.apk"&gt;download the F-Droid app&lt;/a&gt; to host and install the &lt;tt class="docutils literal"&gt;apk&lt;/tt&gt; to phone using &lt;a class="reference external" href="https://developer.android.com/tools/help/adb.html#move"&gt;adb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;adb install /path/to/FDroid.apk
&lt;span class="m"&gt;4373&lt;/span&gt; KB/s &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3942326&lt;/span&gt; bytes in 0.880s&lt;span class="o"&gt;)&lt;/span&gt;
        pkg: /data/local/tmp/FDroid.apk
Success
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Two apps I like and use daily are &lt;a class="reference external" href="https://f-droid.org/repository/browse/?fdfilter=fbreader&amp;amp;fdid=org.geometerplus.zlibrary.ui.android"&gt;fbreader&lt;/a&gt; for ebooks and &lt;a class="reference external" href="https://f-droid.org/repository/browse/?fdfilter=podcast&amp;amp;fdid=de.danoeh.antennapod"&gt;AntennaPod&lt;/a&gt; for downloading and listening to podcasts.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 21 Aug 2015 12:26:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-19:install-cyanogenmod-nexus-4.html</guid><category>android</category><category>debian</category><category>linux</category></item><item><title>I would rather be ashes than dust</title><link>http://www.circuidipity.com/rather-ashes-than-dust.html</link><description>&lt;img alt="Soyuz night launch" class="align-right" src="images/soyuz-at-night-2.png" /&gt;
&lt;p&gt;&lt;strong&gt;Jack London (1876-1916):&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I would rather be ashes than dust;&lt;/div&gt;
&lt;div class="line"&gt;I would rather that my spark should&lt;/div&gt;
&lt;div class="line"&gt;burn out in a brilliant blaze than it&lt;/div&gt;
&lt;div class="line"&gt;should be stifled by dry-rot; I would&lt;/div&gt;
&lt;div class="line"&gt;rather be in a superb meteor; every&lt;/div&gt;
&lt;div class="line"&gt;atom of me in a magnificent glow&lt;/div&gt;
&lt;div class="line"&gt;than in a sleepy and permanent&lt;/div&gt;
&lt;div class="line"&gt;planet; the proper function of man is&lt;/div&gt;
&lt;div class="line"&gt;to live, not to exist; I shall not waste&lt;/div&gt;
&lt;div class="line"&gt;my days in trying to prolong them;&lt;/div&gt;
&lt;div class="line"&gt;I shall USE my time.&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 13 Aug 2015 15:12:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-13:rather-ashes-than-dust.html</guid><category>quotes</category></item><item><title>Incremental backups</title><link>http://www.circuidipity.com/incremental-backups-rsnapshot.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #3 .:&lt;/a&gt; Make incremental and automatic backups of a home folder using &lt;strong&gt;rsnapshot + cron&lt;/strong&gt; (and manual backups via &lt;strong&gt;public transit&lt;/strong&gt;).&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Backup strategy &lt;strong&gt;Version 0&lt;/strong&gt; for my home folder was &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;. That is, I would simply make a periodic, manual sync of files using &lt;strong&gt;rsync&lt;/strong&gt; from my primary computer to a &lt;strong&gt;portable&lt;/strong&gt; encrypted &lt;a class="reference external" href="http://www.circuidipity.com/encrypt-external-drive.html"&gt;USB hard drive&lt;/a&gt;. Then ride the &lt;strong&gt;subway&lt;/strong&gt; to a family/friend's place and swap drives (offsite backup).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Version 1&lt;/strong&gt; expanded to &lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;Raspberry Pi&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;. One of the advantages of setting up a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi home server&lt;/a&gt; is providing a 24/7 uptime location to automatically (using &lt;strong&gt;cron&lt;/strong&gt;) mirror my laptop's home folder over the local area network (LAN).&lt;/p&gt;
&lt;p&gt;These backups are &lt;strong&gt;snapshots&lt;/strong&gt; of home at a particular date. Pi server has a backup of 24 hours or less, the USB drive has another snapshot a few weeks old, the offsite another snapshot from a month ago. But there is no ordered progression of backups from Day 2 to Day 3, Week 4, Month 5, etc. One alternative is to every day stash an entire backup of my home folder but its a sub-optimal use of resources and would quickly fill a hard drive.&lt;/p&gt;
&lt;p&gt;A much better solution is to use &lt;a class="reference external" href="http://rsnapshot.org/"&gt;rsnapshot&lt;/a&gt;  to make &lt;strong&gt;incremental backups&lt;/strong&gt; and my backup strategy &lt;strong&gt;Version 2&lt;/strong&gt; now incorporates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsnapshot&lt;/strong&gt; + &lt;strong&gt;cron&lt;/strong&gt; + &lt;strong&gt;rsync&lt;/strong&gt; + &lt;strong&gt;Raspberry Pi&lt;/strong&gt; + &lt;strong&gt;portable&lt;/strong&gt; + &lt;strong&gt;subway&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;nightly a cron job runs &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; to sync &lt;tt class="docutils literal"&gt;/home/&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/my/backup/location/daily.0/&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;daily.0&lt;/tt&gt; increments to &lt;tt class="docutils literal"&gt;daily.1&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;daily.1&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;daily.2&lt;/tt&gt;, etc. (retention set to 7 days)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--hard-links&lt;/span&gt;&lt;/tt&gt; is how &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; performs its minimal-storage-magic... if a file remains unchanged in the next backup a hard link is created so subsequent backups only contain modified files and links;&lt;/li&gt;
&lt;li&gt;in the wee morning hours another cron job syncs &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; to Pi server;&lt;/li&gt;
&lt;li&gt;every Saturday &lt;tt class="docutils literal"&gt;daily.6&lt;/tt&gt; rotates to &lt;tt class="docutils literal"&gt;weekly.0&lt;/tt&gt; (and &lt;tt class="docutils literal"&gt;weekly.0&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;weekly.1&lt;/tt&gt; ... with 4 week retention);&lt;/li&gt;
&lt;li&gt;on the 1st of the month &lt;tt class="docutils literal"&gt;weekly.3&lt;/tt&gt; rotates to &lt;tt class="docutils literal"&gt;month.0&lt;/tt&gt; (12 month retention);&lt;/li&gt;
&lt;li&gt;every week or so I sync &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; to the USB drive;&lt;/li&gt;
&lt;li&gt;every month or so I ride the subway to offsite storage and swap drives&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;0. Rsnapshot&lt;/h2&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt;, make a directory to store backups, and make a copy of the default config file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install rsnapshot
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir /my/backup/location
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /etc/rsnapshot.conf /etc/rsnapshot.conf.default
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/rsnapshot.conf&lt;/tt&gt; (important to separate fields with &lt;strong&gt;TABS&lt;/strong&gt; not spaces). Example of a few tweaks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;snapshot_root   /my/backup/location

cmd_cp          /bin/cp
cmd_rm          /bin/rm
cmd_rsync       /usr/bin/rsync
cmd_du          /usr/bin/du
cmd_rsnapshot_diff      /usr/bin/rsnapshot-diff

retain  daily   7
retain  weekly  4
retain  monthly 12

exclude_file    /home/USER/.rsyncExclude  &lt;span class="c"&gt;# ...and create this file with list of things to exclude from backup&lt;/span&gt;

link_dest       1

sync_first      &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# allows better recovery in the event that rsnapshot is interrupted (see: ``man rsnapshot``)&lt;/span&gt;

&lt;span class="c"&gt;# LOCALHOST&lt;/span&gt;
backup  /home/          localhost/
backup  /etc/           localhost/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check config syntax and run backup test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot configtest
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot -t sync
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK go ahead and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsnapshot sync &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo rsnapshot daily &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsnapshot du
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Automate backups by running (as root user) &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; and create a job for &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt;. Sample job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; * * *     /usr/bin/rsnapshot sync &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; /usr/bin/rsnapshot daily
&lt;span class="m"&gt;40&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; * * &lt;span class="m"&gt;6&lt;/span&gt;     /usr/bin/rsnapshot weekly
&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; * *     /usr/bin/rsnapshot monthly
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="backup-the-backup"&gt;
&lt;h2&gt;1. Backup the backup&lt;/h2&gt;
&lt;p&gt;Rsnapshot operates as a &lt;strong&gt;pull&lt;/strong&gt; program: it pulls in backups from local and remote devices. Instead of juggling access permissions to allow the rsnapshot server to talk with other devices I decided to limit &lt;tt class="docutils literal"&gt;rsnapshot&lt;/tt&gt; to making backups on &lt;tt class="docutils literal"&gt;localhost&lt;/tt&gt; and use &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;my already-configured SSH key setup&lt;/a&gt; to &lt;strong&gt;push&lt;/strong&gt; a snapshot of the backup to my Raspberry Pi for remote storage.&lt;/p&gt;
&lt;div class="section" id="on-the-pi"&gt;
&lt;h3&gt;1.1 On the Pi&lt;/h3&gt;
&lt;p&gt;Create a directory to store the backup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir /path/to/backup
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-localhost"&gt;
&lt;h3&gt;1.2 On localhost&lt;/h3&gt;
&lt;p&gt;Set the ip address and hostname of the Pi server in &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;192.168.1.88    raspberry.server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test synching &lt;tt class="docutils literal"&gt;/my/backup/location/&lt;/tt&gt; on &lt;tt class="docutils literal"&gt;localhost&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspberry.server:/path/to/backup/&lt;/span&gt;&lt;/tt&gt; with the &lt;tt class="docutils literal"&gt;rsync &lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; option (I exclude &lt;tt class="docutils literal"&gt;/etc/&lt;/tt&gt; from the backup):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rsync --dry-run --archive --hard-links --numeric-ids --delete --exclude&lt;span class="o"&gt;=&lt;/span&gt;etc/ --verbose /my/backup/location/ raspberry.server:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK drop &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; and re-run the command to make a proper backup.&lt;/p&gt;
&lt;p&gt;I use &lt;tt class="docutils literal"&gt;keychain&lt;/tt&gt; to manage &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH keys for password-less logins to the Pi&lt;/a&gt;. Create a &lt;tt class="docutils literal"&gt;backupSnap.sh&lt;/tt&gt; shell script and place in &lt;tt class="docutils literal"&gt;~/bin&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
. &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/.keychain/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-sh
rsync --archive --hard-links --numeric-ids --delete --exclude&lt;span class="o"&gt;=&lt;/span&gt;etc/ /my/backup/location/ &lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Automate the backups by creating a cron job (example that runs daily at 04:50):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; * * *  /home/USERNAME/bin/backupSnap.sh raspberry.server:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="external-drive-and-offsite-storage"&gt;
&lt;h2&gt;2. External drive and offsite storage&lt;/h2&gt;
&lt;p&gt;I connect my USB drive and sync the backup to the device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/home/USERNAME/bin/backupSnap.sh /media/USB/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and take my hard drive for &lt;a class="reference external" href="http://ttc.ca/Routes/General_Information/Maps/index.jsp"&gt;a ride on the subway&lt;/a&gt; to say hello to my offsite storage!&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 12 Aug 2015 01:27:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-12:incremental-backups-rsnapshot.html</guid><category>network</category><category>ssh</category><category>crypto</category><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>Run remote X applications on a local display</title><link>http://www.circuidipity.com/x11-forwarding-ssh.html</link><description>&lt;p&gt;Run remote X applications on a local display with X11 forwarding over SSH.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I give my &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook's smallish amount of RAM&lt;/a&gt; a bit of a break by enlisting other machines on my home network to run X apps. Once &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH is properly configured&lt;/a&gt; it is easy to use X11 forwarding to have apps running on the server show up on the client's local display.&lt;/p&gt;
&lt;div class="section" id="on-the-server"&gt;
&lt;h3&gt;On the server&lt;/h3&gt;
&lt;p&gt;Activate X11 forwarding on the OpenSSH server by modifying &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;X11Forwarding yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl restart sshd.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-client"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;p&gt;X11 forwarding options can be configured system-wide in &lt;tt class="docutils literal"&gt;/etc/ssh/ssh_config&lt;/tt&gt; or per-user in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; or simply forward X on a connection-by-connection basis at login with the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-X&lt;/span&gt;&lt;/tt&gt; option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -X remote.host
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some apps might require the &lt;tt class="docutils literal"&gt;ForwardX11Trusted&lt;/tt&gt; option to allow the full set of X functions from a &lt;strong&gt;trusted&lt;/strong&gt; remote server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -Y remote.host
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; An intruder on the SSH server will be able to capture everything on the local screen and every keystroke with &lt;tt class="docutils literal"&gt;ForwardX11Trusted&lt;/tt&gt; enabled.&lt;/p&gt;
&lt;p&gt;If SSH has properly configured X11 forwarding it sets &lt;tt class="docutils literal"&gt;$DISPLAY&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$DISPLAY&lt;/span&gt;
localhost:10.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch an X app on the server and it opens on the local display:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;urxvt &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logging into a remote host just to run a single app can be overkill. Run one-off commands with the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; option which backgrounds the SSH client before running the app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -fX remote.host urxvt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One interesting use I discovered for X11 forwarding is running the &lt;tt class="docutils literal"&gt;rhythmbox&lt;/tt&gt; music player. A limitation of X11 forwarding is that sound is not transmitted to the client's audio hardware. Turns out that is a &lt;strong&gt;feature&lt;/strong&gt; on my home network setup because my speakers are connected to the server. I launch &lt;tt class="docutils literal"&gt;rhythmbox&lt;/tt&gt; on the server, display and &lt;a class="reference external" href="http://www.circuidipity.com/thinkpad-usb-keyboard-trackpoint.html"&gt;control the player&lt;/a&gt; on the client, and the &lt;a class="reference external" href="https://www.youtube.com/watch?v=mZDYJYqcYK4"&gt;good and funky sounds&lt;/a&gt; issue forth from the server!&lt;/p&gt;
&lt;p&gt;I create the &lt;tt class="docutils literal"&gt;Jukebox&lt;/tt&gt; alias in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_aliases&lt;/span&gt;&lt;/tt&gt; to X11 forward the player as a one-off command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;Jukebox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh -fX remote.host rhythmbox&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy Hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 11 Aug 2015 15:43:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-11:x11-forwarding-ssh.html</guid><category>ssh</category><category>crypto</category><category>network</category><category>graphics</category><category>linux</category></item><item><title>Chromebook liftoff and splashdown</title><link>http://www.circuidipity.com/chromebook-liftoff-splashdown.html</link><description>&lt;p&gt;Create shell scripts to configure a Debian-powered Chromebook when it leaves and returns home.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;After spending a few months on a used desktop I am back on &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook&lt;/a&gt; as my primary computer. I am exploring the idea of taking a cheap(er) and cheerful device like a Chromebook - replacing Chrome OS with full-featured Linux - as a starting point and add/subtract layers of capabilities depending on location and circumstance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outward-bound"&gt;
&lt;h2&gt;Outward bound...&lt;/h2&gt;
&lt;p&gt;I created the &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/liftoff"&gt;liftoff&lt;/a&gt; script to prepare Chromebook before leaving home that syncs a few working directories to a &lt;a class="reference external" href="http://www.circuidipity.com/20141031.html"&gt;USB stick for extra offline storage&lt;/a&gt;. Online access makes available the services of a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi home server&lt;/a&gt; via SSH.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="and-return-home"&gt;
&lt;h2&gt;... and return home&lt;/h2&gt;
&lt;p&gt;Running &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/splashdown"&gt;splashdown&lt;/a&gt; folds the Chromebook back into the home network:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;contents of USB stick are synced with (former desktop converted to headless) server&lt;/li&gt;
&lt;li&gt;1TB hard drive on server made available to Chromebook using &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;SSHFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chromebook hardware is augmented by:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.circuidipity.com/thinkpad-usb-keyboard-trackpoint.html"&gt;ThinkPad USB keyboard&lt;/a&gt; with built-in Trackpoint and 3-button mouse&lt;/li&gt;
&lt;li&gt;external 28&amp;quot; display configured for &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dldsply"&gt;dual-desktop&lt;/a&gt; mode running &lt;a class="reference external" href="http://www.circuidipity.com/i3-tiling-window-manager.html"&gt;i3 window manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add server's 8GB RAM into the mix by running remote X apps on local display with X11 forwarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After 18 months of light-now-daily use I am very happy with my Chromebook. Free software makes modest hardware go a long way.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Mon, 10 Aug 2015 15:12:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-10:chromebook-liftoff-splashdown.html</guid><category>chromebook</category><category>shell</category><category>programming</category><category>debian</category><category>linux</category></item><item><title>Writing systemd service files</title><link>http://www.circuidipity.com/writing-systemd-service-files.html</link><description>&lt;p&gt;Allow &lt;strong&gt;systemd&lt;/strong&gt; and its &lt;tt class="docutils literal"&gt;systemctl&lt;/tt&gt; command to start, stop, and report the status of a daemon by creating a &lt;strong&gt;service file&lt;/strong&gt; in &lt;tt class="docutils literal"&gt;/etc/systemd/system&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Setup the &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-ram-irqbalance.html"&gt;irqbalance daemon I installed on my Raspberry Pi&lt;/a&gt; for systemd control by creating &lt;tt class="docutils literal"&gt;/etc/systemd/system/irqbalance.service&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Daemon to distribute hardware interrupts across multi-CPUs

&lt;span class="o"&gt;[&lt;/span&gt;Service&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forking
&lt;span class="c"&gt;# man systemd.service: &amp;quot;If set to forking... it is recommended to also use the&lt;/span&gt;
&lt;span class="c"&gt;# PIDFile= option, so that systemd can identify the main process of the daemon.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PIDFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/irqbalance.pid
&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin/irqbalance --pid&lt;span class="o"&gt;=&lt;/span&gt;/var/run/irqbalance.pid

&lt;span class="o"&gt;[&lt;/span&gt;Install&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set the new service to be auto-started at boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl daemon-reload &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;irqbalance.service
Created symlink from /etc/systemd/system/multi-user.target.wants/irqbalance.service to /etc/systemd/system/irqbalance.service.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch daemon and inspect running service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl start irqbalance.service &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl status irqbalance
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Systemd#Writing_unit_files"&gt;Writing systemd unit files&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 04 Aug 2015 16:28:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-08-04:writing-systemd-service-files.html</guid><category>linux</category></item><item><title>Raspberry Pi RAM gobbled up by irqbalance</title><link>http://www.circuidipity.com/raspberry-pi-ram-irqbalance.html</link><description>&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; After a few days uptime my Pi sees hundreds of MB gobbled up by the &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt; daemon (which balances interrupts across multiple CPUs). Package version is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;1.0.6-3&lt;/span&gt;&lt;/tt&gt; on Debian &lt;tt class="docutils literal"&gt;jessie/armhf&lt;/tt&gt; and its a &lt;a class="reference external" href="https://bugs.launchpad.net/ubuntu/+source/irqbalance/+bug/1247107"&gt;known bug&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; &lt;strong&gt;0)&lt;/strong&gt; Restart &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt; in nightly cron job, or &lt;strong&gt;1)&lt;/strong&gt; Compile and install a newer, patched version (my choice).&lt;/p&gt;
&lt;p&gt;Remove buggy &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo systemctl stop irqbalance
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get --purge remove irqbalance
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install development tools on the Pi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential autogen automake libtool pkg-config checkinstall
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/Irqbalance/irqbalance"&gt;Download source&lt;/a&gt; and unpack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://github.com/Irqbalance/irqbalance/archive/v1.0.9.tar.gz &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar xvzf v1.0.9.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Checkinstall&lt;/strong&gt; is an easy way to make Debian packages for personal use. Compile and (check)install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;irqbalance-1.0.9
&lt;span class="nv"&gt;$ &lt;/span&gt;/autogen.sh
&lt;span class="nv"&gt;$ &lt;/span&gt;./configure
&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo checkinstall make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start new &lt;tt class="docutils literal"&gt;irqbalance&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo /usr/local/sbin/irqbalance &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optional: Configure the daemon for &lt;a class="reference external" href="http://www.circuidipity.com/writing-systemd-service-files.html"&gt;systemd control and auto-start at boot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have been running the daemon for a few days now and it stays around 0.6% memory usage vs &lt;strong&gt;20%&lt;/strong&gt; (and growing) of the previous packaged version.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 04 Aug 2015 16:34:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-30:raspberry-pi-ram-irqbalance.html</guid><category>raspberry pi</category><category>debian</category><category>linux</category></item><item><title>Run a Raspberry Pi from USB storage v4.0</title><link>http://www.circuidipity.com/raspberry-pi-usb-storage-v4.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #0 .:&lt;/a&gt; I am exploring the use of my Pi as &lt;strong&gt;24/7 uptime home server&lt;/strong&gt;. Hard drives offer a more robust storage media than a Pi's default choice of microSD cards and that is what I decide to use. &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; I put my plan in motion using &lt;strong&gt;Debian&lt;/strong&gt; and move &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; from a microSD to a powered 1TB USB 3.5&amp;quot; hard drive with encrypted storage.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Current setup:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;HDMI display + USB keyboard (initial setup)&lt;/li&gt;
&lt;li&gt;USB hard drive with 3 partitions: &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;, encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-20150705&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;4GB microSD card (initial setup and &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Previous versions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;v3.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage-using-raspbian.html"&gt;Pi 2 Model B + Raspbian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v2.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage.html"&gt;Pi 2 Model B + Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v1.0 - &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Pi Model B + Raspbian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="debian"&gt;
&lt;h2&gt;0. Debian&lt;/h2&gt;
&lt;p&gt;With the move to ARMv7 the Pi 2 is now capable of running the official Debian &lt;strong&gt;armhf&lt;/strong&gt; port. Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2.&lt;/p&gt;
&lt;p&gt;Start here: &lt;a class="reference external" href="http://www.circuidipity.com/debian-jessie-raspberry-pi-2.html"&gt;Install and configure Jessie on a microSD&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;1. Partition&lt;/h2&gt;
&lt;p&gt;I connect the USB drive to Pi and confirm detection:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# lsblk&lt;/span&gt;
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda           8:0    &lt;span class="m"&gt;0&lt;/span&gt; 931.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
└─sda1        8:1    &lt;span class="m"&gt;0&lt;/span&gt; 931.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
mmcblk0     179:0    &lt;span class="m"&gt;0&lt;/span&gt;   7.6G  &lt;span class="m"&gt;0&lt;/span&gt; disk
├─mmcblk0p1 179:1    &lt;span class="m"&gt;0&lt;/span&gt;   121M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot/firmware
└─mmcblk0p2 179:2    &lt;span class="m"&gt;0&lt;/span&gt;   2.9G  &lt;span class="m"&gt;0&lt;/span&gt; part /
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Device is &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt; with a single &lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt; partition. Use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to create 3 new partitions on the USB drive:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 20GB - future &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;sda2 - 2GB - future encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;sda3 - remaining space - future encrypted &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample walk-through:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/sda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.25.2&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot Start        End    Sectors   Size Id Type
/dev/sda1        &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;1953525167&lt;/span&gt; &lt;span class="m"&gt;1953523120&lt;/span&gt; 931.5G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Selected partition 1
Partition &lt;span class="m"&gt;1&lt;/span&gt; has been deleted.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;4&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-4, default 1&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 2048&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;: +20G

Created a new partition &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size &lt;span class="m"&gt;20&lt;/span&gt; GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;2-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 41945088&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;: +1G

Created a new partition &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size &lt;span class="m"&gt;1&lt;/span&gt; GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;2&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;3,4, default 3&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;44042240-1953525167, default 44042240&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44042240-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;3&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 910.5 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot    Start        End    Sectors   Size Id Type
/dev/sda1           &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;41945087&lt;/span&gt;   &lt;span class="m"&gt;41943040&lt;/span&gt;    20G &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/sda2       &lt;span class="m"&gt;41945088&lt;/span&gt;   &lt;span class="m"&gt;44042239&lt;/span&gt;    &lt;span class="m"&gt;2097152&lt;/span&gt;     1G &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/sda3       &lt;span class="m"&gt;44042240&lt;/span&gt; &lt;span class="m"&gt;1953525167&lt;/span&gt; &lt;span class="m"&gt;1909482928&lt;/span&gt; 910.5G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Syncing disks.

&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="root"&gt;
&lt;h2&gt;2. Root&lt;/h2&gt;
&lt;p&gt;Format the future &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition using filesystem &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt; and mount:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mke2fs -t ext4 -L rootfs /dev/sda1&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/sda1 /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify options in &lt;tt class="docutils literal"&gt;/boot/firmware/cmdline.txt&lt;/tt&gt; to point the bootloader to &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; filesystem on the USB device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Original:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ttyAMA0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p2 rootwait net.ifnames&lt;span class="o"&gt;=&lt;/span&gt;1

Modified:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ttyAMA0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sda1 rootwait &lt;span class="nv"&gt;rootdelay&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Comment out &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; and point to the new &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition in &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#/dev/mmcblk0p2  / ext4 relatime,errors=remount-ro,discard 0 1&lt;/span&gt;
/dev/sda1 / ext4 relatime,errors&lt;span class="o"&gt;=&lt;/span&gt;remount-ro &lt;span class="m"&gt;0&lt;/span&gt; 1
/dev/mmcblk0p1 /boot/firmware vfat defaults &lt;span class="m"&gt;0&lt;/span&gt; 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;tt class="docutils literal"&gt;rsync&lt;/tt&gt; to duplicate contents of &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; on the microSD &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt; to the &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition on the USB hard drive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get -y install rsync&lt;/span&gt;
&lt;span class="c"&gt;# rsync --exclude=firmware/* -axv / /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="luks-encryption"&gt;
&lt;h2&gt;3. LUKS encryption&lt;/h2&gt;
&lt;p&gt;Root is unencrypted to allow &lt;strong&gt;unattended boots&lt;/strong&gt; of the server (otherwise the Pi would hang waiting for a passphrase that never arrives). A LUKS-encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; is added with a &lt;strong&gt;randomly-generated key&lt;/strong&gt; and post-boot I log in and mount a LUKS-encrypted &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt; partition using a passphrase.&lt;/p&gt;
&lt;div class="section" id="storage"&gt;
&lt;h3&gt;3.1 Storage&lt;/h3&gt;
&lt;p&gt;Encrypt the partition, assign a passphrase, and format using filesystem &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get -y install cryptsetup&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup luksFormat /dev/sda3&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup luksOpen /dev/sda3 sda3_crypt&lt;/span&gt;
&lt;span class="c"&gt;# mkfs.ext4 -L storage /dev/mapper/sda3_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a mountpoint and mount the partition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkdir /media/sda3_crypt &amp;amp;&amp;amp; mount -t ext4 /dev/mapper/sda3_crypt /media/sda3_crypt/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmounting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# umount /media/sda3_crypt &amp;amp;&amp;amp; cryptsetup luksClose /dev/mapper/sda3_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swap"&gt;
&lt;h3&gt;3.2 Swap&lt;/h3&gt;
&lt;p&gt;Configure the secure wiping of the swap partition, auto-generation of a new random key, and swap activation at boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# echo &amp;quot;sda2_crypt /dev/sda2 /dev/urandom cipher=aes-xts-plain64,size=256,swap&amp;quot; &amp;gt;&amp;gt; /etc/crypttab&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;/dev/mapper/sda2_crypt none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reboot"&gt;
&lt;h2&gt;4. Reboot&lt;/h2&gt;
&lt;p&gt;Aaaand reboot!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log in and check the new filesystem layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        20G  646M   18G   4% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  340K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="static-address"&gt;
&lt;h2&gt;5. Static Address&lt;/h2&gt;
&lt;p&gt;Assign a Pi home server a &lt;strong&gt;static network address&lt;/strong&gt;. Sample &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; that disables &lt;tt class="docutils literal"&gt;dhcp&lt;/tt&gt;, sets ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;, and connects to a router (managing DNS) at &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;auto eth0
iface eth0 inet static
    address 192.168.1.88
    netmask 255.255.255.0
    gateway 192.168.1.1
    dns-nameservers 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.raspberrypi.org/forums/viewtopic.php?f=29&amp;amp;t=44177"&gt;Discussion thread (raspberrypi.org/forums)&lt;/a&gt; about moving root to external USB storage.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Raspberry Pi requires an SD card to boot and the bootloader expects certain config files to reside on a &lt;tt class="docutils literal"&gt;vfat&lt;/tt&gt; formatted partition. This particular Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-DATE.img&lt;/span&gt;&lt;/tt&gt; installs the necessary files in &lt;tt class="docutils literal"&gt;mmcblk0p1&lt;/tt&gt; and mounts this partition to &lt;tt class="docutils literal"&gt;/boot/firmware&lt;/tt&gt;. You can inspect the image partition layout, contents, and make modifications before installing to a microSD: &lt;a class="reference external" href="https://raspberrypi.stackexchange.com/questions/13137/how-can-i-mount-a-raspberry-pi-linux-distro-image"&gt;How can I mount a Raspberry Pi linux distro image?&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sat, 25 Jul 2015 18:25:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-25:raspberry-pi-usb-storage-v4.html</guid><category>raspberry pi</category><category>debian</category><category>linux</category><category>luks</category><category>crypto</category><category>network</category></item><item><title>Debian Jessie on Raspberry Pi 2</title><link>http://www.circuidipity.com/debian-jessie-raspberry-pi-2.html</link><description>&lt;p&gt;With the move to ARMv7 I am now capable of running the official ARM port of Debian (with Pi-friendly kernel+firmware) on my Raspberry Pi 2!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2.&lt;/p&gt;
&lt;p&gt;My setup:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;HDMI display + USB keyboard&lt;/li&gt;
&lt;li&gt;Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-20150705&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;32GB microSD card&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;Download the latest &lt;a class="reference external" href="https://images.collabora.co.uk/rpi2/"&gt;image and GPG signature&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.bmap
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz.asc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/verify-pgp-signature-gnupg.html"&gt;Verify the GPG signature&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-to-microsd"&gt;
&lt;h2&gt;1. Install to microSD&lt;/h2&gt;
&lt;p&gt;Unpack the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gzip -d jessie-rpi2-20150202.img.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In lieu of the usual (slower) &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; I use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bmap-tools&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;jessie-rpi2-*.img.bmap&lt;/span&gt;&lt;/tt&gt; to write the image to microSD:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install bmap-tools
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo bmaptool copy --bmap jessie-rpi2-20150705.img.bmap jessie-rpi2-20150705.img /dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="boot-and-resize"&gt;
&lt;h2&gt;2. Boot and resize&lt;/h2&gt;
&lt;p&gt;Login as &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; with password &lt;tt class="docutils literal"&gt;debian&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Filesystem layout &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; on the microSD card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem      Size  Used Avail Use% Mounted on
/dev/root       2.8G  555M  2.1G  21% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image inflates into a 2.8GB partition; using only a fraction of available capacity. I use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to repartition the microSD to use all storage and &lt;tt class="docutils literal"&gt;resize2fs&lt;/tt&gt; to &lt;a class="reference external" href="http://www.circuidipity.com/resize-rootfs-raspberry-pi.html"&gt;expand rootfs into its new accomodations&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Alternative: &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-usb-storage-v4.html"&gt;Run a Raspberry Pi from USB storage&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="post-install"&gt;
&lt;h2&gt;3. Post-install&lt;/h2&gt;
&lt;p&gt;Configure:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a new root password: &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;default locale: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;timezone: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create 1GB swap file: &lt;tt class="docutils literal"&gt;dd &lt;span class="pre"&gt;if=/dev/zero&lt;/span&gt; &lt;span class="pre"&gt;of=/swap&lt;/span&gt; bs=1M count=1024 &amp;amp;&amp;amp; mkswap /swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable swap file at boot: &lt;tt class="docutils literal"&gt;echo &amp;quot;/swap none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;setup hardware random number generator: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;-y&lt;/span&gt; install &lt;span class="pre"&gt;rng-tools&lt;/span&gt; &amp;amp;&amp;amp; echo &lt;span class="pre"&gt;&amp;quot;bcm2708-rng&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;add new user: &lt;tt class="docutils literal"&gt;adduser USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;hostname: modify &lt;tt class="docutils literal"&gt;/etc/hostname&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt; and reboot&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="package-management"&gt;
&lt;h2&gt;4. Package management&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;deb http://httpredir.debian.org/debian jessie main contrib non-free
&lt;span class="c"&gt;#deb-src http://httpredir.debian.org/debian/ jessie main contrib non-free&lt;/span&gt;

deb http://security.debian.org/ jessie/updates main contrib non-free
&lt;span class="c"&gt;#deb-src http://security.debian.org/ jessie/updates main contrib non-free&lt;/span&gt;

deb http://httpredir.debian.org/debian/ jessie-updates main contrib non-free
&lt;span class="c"&gt;#deb-src http://httpredir.debian.org/debian/ jessie-updates main contrib non-free&lt;/span&gt;

deb &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;trusted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes&lt;span class="o"&gt;]&lt;/span&gt; https://repositories.collabora.co.uk/debian/ jessie rpi2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image provides a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flash-kernel&lt;/span&gt;&lt;/tt&gt; package customized for the Pi. Use &lt;strong&gt;apt-pinning&lt;/strong&gt; to &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/#comment-64b33335e8d852179704fb5dc218aa1e"&gt;continue using this custom package&lt;/a&gt; vs updates from official Debian repositories. Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/preferences.d/flash-kernel&lt;/span&gt;&lt;/tt&gt; with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Package: flash-kernel
Pin: origin repositories.collabora.co.uk
Pin-Priority: 900
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flash-kernel&lt;/span&gt;&lt;/tt&gt; is pinned:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-cache policy flash-kernel&lt;/span&gt;
flash-kernel:
  Installed: 3.35.co1+b1
  Candidate: 3.35.co1+b1
  Package pin: 3.35.co1+b1
  Version table:
 *** 3.35.co1+b1 900
        &lt;span class="m"&gt;500&lt;/span&gt; https://repositories.collabora.co.uk/debian/ jessie/rpi2 armhf Packages
        &lt;span class="m"&gt;100&lt;/span&gt; /var/lib/dpkg/status
     3.35 900
        &lt;span class="m"&gt;500&lt;/span&gt; http://httpredir.debian.org/debian/ jessie/main armhf Packages
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now is a good time to upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="remote-access"&gt;
&lt;h2&gt;5. Remote access&lt;/h2&gt;
&lt;p&gt;Generate new SSH keys on the Pi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# rm /etc/ssh/ssh_host_*key* &amp;amp;&amp;amp; dpkg-reconfigure openssh-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Secure remote access by &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;requiring clients to use SSH keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;/boot/config.txt&lt;/tt&gt; has been moved to &lt;tt class="docutils literal"&gt;/boot/firmware/config.txt&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sat, 25 Jul 2015 17:48:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-22:debian-jessie-raspberry-pi-2.html</guid><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>Resize rootfs on Raspberry Pi</title><link>http://www.circuidipity.com/resize-rootfs-raspberry-pi.html</link><description>&lt;p&gt;Resize a mounted partition to take full advantage of the storage capacity of a microSD card.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Debian developer Sjoerd Simons has created a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Jessie minimal image&lt;/a&gt; with an updated 3.18 Linux kernel and firmware suitable for Pi 2. I install the image file to a 32GB microSD card, insert card into my Pi and reboot, log in and inspect the filesystem layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Filesystem      Size  Used Avail Use% Mounted on
/dev/root       2.8G  555M  2.1G  21% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install image inflates into a 2.8GB partition; using only a fraction of available capacity. I will use &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; to repartition the microSD to use all storage and &lt;tt class="docutils literal"&gt;resize2fs&lt;/tt&gt; to expand &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; into its new accomodations!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repartition"&gt;
&lt;h2&gt;0. Repartition&lt;/h2&gt;
&lt;p&gt;Repartitioning the mounted filesytem using &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt; on the Pi involves:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;delete the current &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; partition containing &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create a new partition &lt;strong&gt;beginning at the same sector as the old partition&lt;/strong&gt; that uses all remaining space&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;mmcblk0p1&lt;/tt&gt; - containing &lt;tt class="docutils literal"&gt;/boot/firmware&lt;/tt&gt; - remains untouched&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Ensure the start sector remains identical (example: mine below is &lt;tt class="docutils literal"&gt;249856&lt;/tt&gt; on the old and new versions of &lt;tt class="docutils literal"&gt;mmcblk0p2&lt;/tt&gt; or there is a high probability the operation will fail and all data lost.&lt;/p&gt;
&lt;p&gt;A sample run-through on my own microSD:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/mmcblk0&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.25.2&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/mmcblk0: 29.7 GiB, &lt;span class="m"&gt;31914983424&lt;/span&gt; bytes, &lt;span class="m"&gt;62333952&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0xc96ffe28

Device         Boot  Start     End Sectors  Size Id Type
/dev/mmcblk0p1        &lt;span class="m"&gt;2048&lt;/span&gt;  &lt;span class="m"&gt;249855&lt;/span&gt;  &lt;span class="m"&gt;247808&lt;/span&gt;  121M  e W95 FAT16 &lt;span class="o"&gt;(&lt;/span&gt;LBA&lt;span class="o"&gt;)&lt;/span&gt;
/dev/mmcblk0p2      &lt;span class="m"&gt;249856&lt;/span&gt; &lt;span class="m"&gt;6291455&lt;/span&gt; &lt;span class="m"&gt;6041600&lt;/span&gt;  2.9G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: d
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1,2, default 2&lt;span class="o"&gt;)&lt;/span&gt;:

Partition &lt;span class="m"&gt;2&lt;/span&gt; has been deleted.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;   &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
   e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;:

Using default response p.
Partition number &lt;span class="o"&gt;(&lt;/span&gt;2-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;249856-62333951, default 249856&lt;span class="o"&gt;)&lt;/span&gt;: 249856
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;249856-62333951, default 62333951&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 29.6 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/mmcblk0: 29.7 GiB, &lt;span class="m"&gt;31914983424&lt;/span&gt; bytes, &lt;span class="m"&gt;62333952&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0xc96ffe28

Device         Boot  Start      End  Sectors  Size Id Type
/dev/mmcblk0p1        &lt;span class="m"&gt;2048&lt;/span&gt;   &lt;span class="m"&gt;249855&lt;/span&gt;   &lt;span class="m"&gt;247808&lt;/span&gt;  121M  e W95 FAT16 &lt;span class="o"&gt;(&lt;/span&gt;LBA&lt;span class="o"&gt;)&lt;/span&gt;
/dev/mmcblk0p2      &lt;span class="m"&gt;249856&lt;/span&gt; &lt;span class="m"&gt;62333951&lt;/span&gt; &lt;span class="m"&gt;62084096&lt;/span&gt; 29.6G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... aaaand reboot!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resize"&gt;
&lt;h2&gt;1. Resize&lt;/h2&gt;
&lt;p&gt;Expand &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; to use the new capacity:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# resize2fs /dev/mmcblk0p2&lt;/span&gt;
resize2fs 1.42.12 &lt;span class="o"&gt;(&lt;/span&gt;29-Aug-2014&lt;span class="o"&gt;)&lt;/span&gt;
Filesystem at /dev/mmcblk0p2 is mounted on /&lt;span class="p"&gt;;&lt;/span&gt; on-line resizing required
&lt;span class="nv"&gt;old_desc_blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1, &lt;span class="nv"&gt;new_desc_blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2
The filesystem on /dev/mmcblk0p2 is now &lt;span class="m"&gt;7760512&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;4k&lt;span class="o"&gt;)&lt;/span&gt; blocks long.

&lt;span class="c"&gt;# df -h&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        30G  561M   28G   2% /
devtmpfs        459M     &lt;span class="m"&gt;0&lt;/span&gt;  459M   0% /dev
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /dev/shm
tmpfs           463M  312K  463M   1% /run
tmpfs           5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
tmpfs           463M     &lt;span class="m"&gt;0&lt;/span&gt;  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1  121M  9.7M  112M   9% /boot/firmware
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://raspberrypi.stackexchange.com/questions/499/how-can-i-resize-my-root-partition"&gt;https://raspberrypi.stackexchange.com/questions/499/how-can-i-resize-my-root-partition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 21 Jul 2015 17:19:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-21:resize-rootfs-raspberry-pi.html</guid><category>debian</category><category>linux</category><category>raspberry pi</category></item><item><title>1000 cool bits</title><link>http://www.circuidipity.com/20150720.html</link><description>&lt;div class="section" id="id1"&gt;
&lt;h2&gt;0001&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Iceweasel&lt;/tt&gt; alerts current flash was out-of-date and insecure -- Debian &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;flashplugin-nonfree&lt;/span&gt;&lt;/tt&gt; package does not auto-update.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Run update:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-flashplugin-nonfree --install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;0010&lt;/h2&gt;
&lt;p&gt;Simple method to make source compiles into &lt;tt class="docutils literal"&gt;*.deb&lt;/tt&gt; packages -- Use &lt;tt class="docutils literal"&gt;checkinstall&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install checkinstall
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and &lt;tt class="docutils literal"&gt;checkinstall&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./configure
&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo checkinstall make install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;0011&lt;/h2&gt;
&lt;p&gt;PDF links opening in Chrome vs default browser Firefox -- Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gnome-www-browser&lt;/span&gt;&lt;/tt&gt; checked before &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;x-www-browser&lt;/span&gt;&lt;/tt&gt;. Setting only the second option is not enough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Configure both options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-alternatives --config gnome-www-browser
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-alternatives --config x-www-browser
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;0100&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;dpkg&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-file&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;list files owned by PACKAGE: &lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;-L&lt;/span&gt; PACKAGE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;find which package owns FILE: &lt;tt class="docutils literal"&gt;dpkg &lt;span class="pre"&gt;-S&lt;/span&gt; /etc/FILE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;find which package owns FILE (even if not installed):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install apt-file
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-file update
&lt;span class="nv"&gt;$ &lt;/span&gt;apt-file search /etc/FILE
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;0101&lt;/h2&gt;
&lt;p&gt;Swappiness -- Preference of the kernel to move processes out of physical memory to the swap partition. Range is 0-100, default is set to 60 and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;check current: &lt;tt class="docutils literal"&gt;cat /proc/sys/vm/swappiness&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;temporary change: &lt;tt class="docutils literal"&gt;sudo sysctl vm.swappiness=1&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;permanent: create &lt;tt class="docutils literal"&gt;/etc/sysctl.d/local.conf&lt;/tt&gt; and set...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;0110&lt;/h2&gt;
&lt;p&gt;Clear the Bash cache of PATH to executables -- Originally installed &lt;tt class="docutils literal"&gt;glances&lt;/tt&gt; via &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/usr/bin/glances&lt;/tt&gt;. Removed then re-installed via &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;/usr/local/bin/glances&lt;/tt&gt;. Command would show in my PATH but - without explicit PATH defined - would try to execute (missing) file in &lt;tt class="docutils literal"&gt;/usr/bin&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix&lt;/strong&gt; Clear cache using &lt;tt class="docutils literal"&gt;hash&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;glances
glances is hashed &lt;span class="o"&gt;(&lt;/span&gt;/usr/bin/glances&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt; -d glances
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;glances
glances is /usr/local/bin/glances
&lt;span class="nv"&gt;$ &lt;/span&gt;glances
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;0111&lt;/h2&gt;
&lt;p&gt;Test if system is 64bit (maybe add to a shell script):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;getconf LONG_BIT&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;64&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;64bit Detected&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;1000&lt;/h2&gt;
&lt;p&gt;Configure a static IP address in Debian's &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# The primary network interface&lt;/span&gt;
auto eth0
&lt;span class="c"&gt;#iface eth0 inet dhcp&lt;/span&gt;
iface eth0 inet static
    address 192.168.1.88    &lt;span class="c"&gt;# device ip&lt;/span&gt;
    netmask 255.255.255.0
    gateway 192.168.1.1     &lt;span class="c"&gt;# router ip&lt;/span&gt;
    dns-nameservers 192.168.1.1     &lt;span class="c"&gt;# or &amp;#39;8.8.8.8&amp;#39; for google dns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Mon, 20 Jul 2015 15:18:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-20:20150720.html</guid><category>bits</category></item><item><title>Verify a PGP signature with GnuPG</title><link>http://www.circuidipity.com/verify-pgp-signature-gnupg.html</link><description>&lt;p&gt;Using a &lt;strong&gt;PGP private/public keypair&lt;/strong&gt; to create a &lt;strong&gt;digital signature&lt;/strong&gt; for a file certifies its integrity. Adding a signature to software available for download heightens confidence that everything is OK!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;A developer signs a package with their private key and the receiver verifies the signature with the public key. If the package has been modified or corrupted in transmission the verification will fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GnuPG&lt;/strong&gt; is used to verify PGP signatures:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install gnupg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; I download a &lt;a class="reference external" href="http://sjoerd.luon.net/posts/2015/02/debian-jessie-on-rpi2/"&gt;Debian Jessie for Raspberry Pi 2&lt;/a&gt; image and its signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://images.collabora.co.uk/rpi2/jessie-rpi2-20150705.img.gz.asc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import"&gt;
&lt;h2&gt;1. Import&lt;/h2&gt;
&lt;div class="section" id="method-0"&gt;
&lt;h3&gt;Method 0&lt;/h3&gt;
&lt;p&gt;If the location of the developer's public key is known, I can directly import the key into my keyring (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/pubring.gpg&lt;/span&gt;&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-keys 0xC2300F7B
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="method-1"&gt;
&lt;h3&gt;Method 1&lt;/h3&gt;
&lt;p&gt;Identify the public key used to generate the signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --verify jessie-rpi2-20150705.img.gz.asc
gpg: Signature made Sun &lt;span class="m"&gt;05&lt;/span&gt; Jul &lt;span class="m"&gt;2015&lt;/span&gt; 09:06:01 AM EDT using RSA key ID C2300F7B
gpg: Can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t check signature: public key not found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Public key is &lt;tt class="docutils literal"&gt;0xC2300F7B&lt;/tt&gt;. Run a key search &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and import:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --search 0xC2300F7B
gpg: keyring &lt;span class="sb"&gt;`&lt;/span&gt;/home/dwa/.gnupg/secring.gpg&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; created
gpg: searching &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0xC2300F7B&amp;quot;&lt;/span&gt; from hkp server keys.gnupg.net
&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;     Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;
        Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;
        Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;
            &lt;span class="m"&gt;4096&lt;/span&gt; bit RSA key C2300F7B, created: 2014-04-25
Keys 1-1 of &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0xC2300F7B&amp;quot;&lt;/span&gt;.  Enter number&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, N&lt;span class="o"&gt;)&lt;/span&gt;ext, or Q&lt;span class="o"&gt;)&lt;/span&gt;uit &amp;gt; 1
gpg: requesting key C2300F7B from hkp server keys.gnupg.net
gpg: key C2300F7B: public key &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt; imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 1
gpg:               imported: &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;RSA: 1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verify"&gt;
&lt;h2&gt;2. Verify&lt;/h2&gt;
&lt;p&gt;List keys in my keyring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --list-keys
/home/dwa/.gnupg/pubring.gpg
----------------------------
pub   4096R/C2300F7B 2014-04-25
uid                  Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;
uid                  Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;
uid                  Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;
sub   4096R/92545E8E 2014-04-25
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify package signature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --verify jessie-rpi2-20150705.img.gz.asc jessie-rpi2-20150705.img.gz
gpg: Signature made Sun &lt;span class="m"&gt;05&lt;/span&gt; Jul &lt;span class="m"&gt;2015&lt;/span&gt; 09:06:01 AM EDT using RSA key ID C2300F7B
gpg: Good signature from &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;Sjoerd Simons &amp;lt;sjoerd@debian.org&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;Antonius Gerardus Johannes Simons &amp;lt;sjoerd@luon.net&amp;gt;&amp;quot;&lt;/span&gt;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: &lt;span class="m"&gt;2870&lt;/span&gt; A31B EA9D BCF2 &lt;span class="m"&gt;7472&lt;/span&gt;  &lt;span class="m"&gt;3108&lt;/span&gt; C274 DB64 C230 0F7B
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The warning about &lt;strong&gt;key is not certified with a trusted signature&lt;/strong&gt; means GnuPG verified that key made that signature but can't guarantee that key really belongs to the developer. It's up to me to decide how much confidence to place in the authenticity of the key.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Auto-generated &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/gpg.conf&lt;/span&gt;&lt;/tt&gt; defaults to searching &lt;tt class="docutils literal"&gt;keyserver &lt;span class="pre"&gt;hkp://keys.gnupg.net&lt;/span&gt;&lt;/tt&gt; which redirects to the &lt;a class="reference external" href="https://sks-keyservers.net/"&gt;SKS Keyservers pool&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sun, 19 Jul 2015 11:33:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-19:verify-pgp-signature-gnupg.html</guid><category>crypto</category><category>debian</category><category>linux</category></item><item><title>Lightweight and a delight: i3 tiling window manager</title><link>http://www.circuidipity.com/i3-tiling-window-manager.html</link><description>&lt;p&gt;As a former &lt;strong&gt;Fluxbox&lt;/strong&gt; and &lt;strong&gt;Openbox&lt;/strong&gt; user I can understand the love for a lightweight, minimal window manager where I can &amp;quot;paint&amp;quot; my applications across the screen.&lt;/p&gt;
&lt;p&gt;Subsequently I wandered through &lt;strong&gt;Xfce&lt;/strong&gt; and &lt;strong&gt;LXDE&lt;/strong&gt; and all the way to the other end of the scale with Ubuntu's &lt;em&gt;all-in&lt;/em&gt; desktop environment &lt;strong&gt;Unity&lt;/strong&gt;. I was curious about &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tiling_window_manager"&gt;tiling window managers&lt;/a&gt; but never quite grokked the advantage from screenshots: seeing consoles arranged in a grid made me think &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; a better choice for &lt;em&gt;that&lt;/em&gt; task, and why would I want to watch a video in a reduced square in the corner of a screen?&lt;/p&gt;
&lt;p&gt;And then I tried &lt;a class="reference external" href="https://i3wm.org/"&gt;i3&lt;/a&gt; and realized I have found my new default desktop:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;startx&lt;/tt&gt; to X almost instantaneous on &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;loads sensible defaults and - thanks to the excellent &lt;a class="reference external" href="https://i3wm.org/docs/userguide.html"&gt;User's Guide&lt;/a&gt; - easy to customize via text files&lt;/li&gt;
&lt;li&gt;toggle between &lt;strong&gt;tiled&lt;/strong&gt;, &lt;strong&gt;tabbed&lt;/strong&gt; (my default), &lt;strong&gt;stacked&lt;/strong&gt;, and &lt;strong&gt;floating&lt;/strong&gt; mode (see User's Guide)&lt;/li&gt;
&lt;li&gt;even if you rarely use applications in a tiled arrangement, i3 handles maximized windows, desktops, and multiple displays extremely well via keyboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still want to use a mouse here-and-there? Hey, i3 is flexible and OK with that. Provides a statusbar, but you can swap it out for an &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/I3#i3bar_alternatives"&gt;alternative&lt;/a&gt; or run none at all.&lt;/p&gt;
&lt;p&gt;Starting out I find myself mostly happy with the &lt;a class="reference external" href="https://i3wm.org/docs/userguide.html#_default_keybindings"&gt;default keybindings&lt;/a&gt; and behaviour; making only a few adjustments and additions to my &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.i3/config&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.i3/config"&gt;.i3/config&lt;/a&gt; and statusbar (for Jessiebook) &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.i3status.conf.chromebook"&gt;.i3status.conf&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="auto-start-applications"&gt;
&lt;h2&gt;Auto-start applications&lt;/h2&gt;
&lt;p&gt;At launch I have configured i3 to run a script to detect/setup a second display if attached (using &lt;tt class="docutils literal"&gt;xrandr&lt;/tt&gt;), open a terminal, and run any extra commands as determined by &lt;tt class="docutils literal"&gt;$HOSTNAME&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Auto-start&lt;/span&gt;
exec_always --no-startup-id &lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/dldsply
&lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id &lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/startX
&lt;span class="c"&gt;# Start a terminal&lt;/span&gt;
&lt;span class="c"&gt;#bindsym $mod+Return exec i3-sensible-terminal&lt;/span&gt;
bindsym &lt;span class="nv"&gt;$mod&lt;/span&gt;+Return &lt;span class="nb"&gt;exec &lt;/span&gt;urxvt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xinitrc"&gt;.xinitrc&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dldsply"&gt;dldsply&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/startX"&gt;startX&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="containers"&gt;
&lt;h2&gt;Containers&lt;/h2&gt;
&lt;p&gt;Arrange containers (windows):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Layout mode for new containers&lt;/span&gt;
workspace_layout tabbed
&lt;span class="c"&gt;# Enable floating mode&lt;/span&gt;
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Remmina&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; floating &lt;span class="nb"&gt;enable&lt;/span&gt;
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Remmina&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; border normal
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VirtualBox&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; floating &lt;span class="nb"&gt;enable&lt;/span&gt;
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VirtualBox&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; border normal
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vlc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; floating &lt;span class="nb"&gt;enable&lt;/span&gt;
for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vlc&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; border normal
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="styling"&gt;
&lt;h2&gt;Styling&lt;/h2&gt;
&lt;p&gt;Fonts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;font pango:Terminus 11px
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Colours:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Colours&lt;/span&gt;
&lt;span class="c"&gt;# class                   border  backgrd text    indicator&lt;/span&gt;
client.focused            &lt;span class="c"&gt;#1793d0 #1793d0 #ffffff #2e9ef4&lt;/span&gt;
client.focused_inactive   &lt;span class="c"&gt;#333333 #333333 #ffffff #484e50&lt;/span&gt;
client.unfocused          &lt;span class="c"&gt;#2d2d2d #2d2d2d #ffffff #292d2e&lt;/span&gt;
client.urgent             &lt;span class="c"&gt;#2f343a #900000 #ffffff #900000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Applications:&lt;/p&gt;
&lt;p&gt;Use &lt;tt class="docutils literal"&gt;lxappearance&lt;/tt&gt; to setup the &lt;strong&gt;Clearlooks&lt;/strong&gt; theme and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;qtconfig-qt4&lt;/span&gt;&lt;/tt&gt; to configure QT apps to use the &lt;tt class="docutils literal"&gt;GTK+&lt;/tt&gt; default theme:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install gnome-themes-standard gtk2-engines lxappearance qt4-qtconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launcher:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bindsym &lt;span class="nv"&gt;$mod&lt;/span&gt;+d &lt;span class="nb"&gt;exec &lt;/span&gt;dmenu_run -fn &lt;span class="s1"&gt;&amp;#39;Terminus 11&amp;#39;&lt;/span&gt; -nb &lt;span class="s1"&gt;&amp;#39;#2d2d2d&amp;#39;&lt;/span&gt; -nf &lt;span class="s1"&gt;&amp;#39;#ffffff&amp;#39;&lt;/span&gt; -sb &lt;span class="s1"&gt;&amp;#39;#1793d0&amp;#39;&lt;/span&gt; -sf &lt;span class="s1"&gt;&amp;#39;#ffffff&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sound"&gt;
&lt;h2&gt;Sound&lt;/h2&gt;
&lt;p&gt;I use &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; and a standalone &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/paVolume"&gt;shell script&lt;/a&gt; to control PulseAudio volume levels and notifications.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.circuidipity.com/pavolume.html"&gt;paVolume&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="screenshots"&gt;
&lt;h2&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;Take screenshots using &lt;tt class="docutils literal"&gt;scrot&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;eog&lt;/tt&gt; displays images:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install scrot eog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keybindings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Screenshot&lt;/span&gt;
&lt;span class="c"&gt;# * desktop&lt;/span&gt;
bindsym --release Print &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id scrot &lt;span class="s1"&gt;&amp;#39;%Y-%m-%dT%H%M%S.png&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;mv $f ~/Downloads &amp;amp;&amp;amp; eog ~/Downloads/$f&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# * active Window&lt;/span&gt;
bindsym --release &lt;span class="nv"&gt;$mod&lt;/span&gt;+Print &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id scrot -d &lt;span class="m"&gt;4&lt;/span&gt; -u -z &lt;span class="s1"&gt;&amp;#39;%Y-%m-%dT%H%M%S.png&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;mv $f ~/Downloads &amp;amp;&amp;amp; eog ~/Downloads/$f&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# * selected area... (click and move mouse)&lt;/span&gt;
bindsym --release Shift+Print &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id scrot -s &lt;span class="s1"&gt;&amp;#39;%Y-%m-%dT%H%M%S.png&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;mv $f ~/Downloads &amp;amp;&amp;amp; eog ~/Downloads/$f&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="lockscreen-logout-suspend-reboot-shutdown"&gt;
&lt;h2&gt;LockScreen/Logout/Suspend/Reboot/Shutdown&lt;/h2&gt;
&lt;p&gt;Debian's i3 metapackage installs &lt;tt class="docutils literal"&gt;i3lock&lt;/tt&gt; to handle locking screens (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-i&lt;/span&gt; IMAGE.png&lt;/tt&gt; adds a lockscreen wallpaper) and &lt;tt class="docutils literal"&gt;systemctl&lt;/tt&gt; deals with system suspend/reboot/shutdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$Locker&lt;/span&gt; i3lock -i ~/.i3lock.png &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sleep 1
&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mode_system&lt;/span&gt; System &lt;span class="o"&gt;(&lt;/span&gt;l&lt;span class="o"&gt;)&lt;/span&gt; lock, &lt;span class="o"&gt;(&lt;/span&gt;e&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;logout&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;suspend&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;r&lt;span class="o"&gt;)&lt;/span&gt; reboot, &lt;span class="o"&gt;(&lt;/span&gt;Shift+s&lt;span class="o"&gt;)&lt;/span&gt; shutdown
mode &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$mode_system&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    bindsym l &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id &lt;span class="nv"&gt;$Locker&lt;/span&gt;, mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
    bindsym e &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id i3-msg &lt;span class="nb"&gt;exit&lt;/span&gt;, mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
    bindsym s &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id &lt;span class="nv"&gt;$Locker&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sync &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl &lt;span class="nb"&gt;suspend&lt;/span&gt;, mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
    bindsym r &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id systemctl reboot, mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
    bindsym Shift+s &lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id systemctl poweroff -i, mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;

    &lt;span class="c"&gt;# back to normal: Enter or Escape&lt;/span&gt;
    bindsym Return mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
    bindsym Escape mode &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
bindsym &lt;span class="nv"&gt;$mod&lt;/span&gt;+Pause mode &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$mode_system&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/I3#Shutdown.2C_reboot.2C_lock_screen"&gt;i3 shutdown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 17 Jul 2015 00:20:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-17:i3-tiling-window-manager.html</guid><category>i3</category><category>debian</category><category>linux</category></item><item><title>ThinkPad USB Keyboard with TrackPoint</title><link>http://www.circuidipity.com/thinkpad-usb-keyboard-trackpoint.html</link><description>&lt;p&gt;An external ThinkPad keyboard minus the ThinkPad with the classic TrackPoint + Left/Middle/Right mouse buttons. Its attached to my Debian desktop and I want to change the behaviour of a few keys.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Attach the keyboard:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsusb &lt;span class="p"&gt;|&lt;/span&gt; grep -i keyboard
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 002: ID 17ef:6009 Lenovo ThinkPad Keyboard with TrackPoint
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="caps-lock-and-xmodmap"&gt;
&lt;h2&gt;0. Caps_Lock and xmodmap&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; occupies a prime location and - seeing as I do not carry on many ALL CAPS conversations - the key can be repurposed for better use. I use &lt;tt class="docutils literal"&gt;xmodmap&lt;/tt&gt; to modify the keymap and transform the key into &lt;tt class="docutils literal"&gt;BackSpace&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Retrieve current keymap (and the &lt;tt class="docutils literal"&gt;keycode&lt;/tt&gt; for &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xmodmap -pke
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
keycode  &lt;span class="nv"&gt;66&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Caps_Lock NoSymbol Caps_Lock
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output for &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;xev&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;KeyPress event, serial 32, synthetic NO, window 0x1600001,
    root 0xb4, subw 0x0, &lt;span class="nb"&gt;time &lt;/span&gt;578277182, &lt;span class="o"&gt;(&lt;/span&gt;137,-6&lt;span class="o"&gt;)&lt;/span&gt;, root:&lt;span class="o"&gt;(&lt;/span&gt;781,12&lt;span class="o"&gt;)&lt;/span&gt;,
    state 0x0, keycode &lt;span class="m"&gt;66&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;keysym 0xffe5, Caps_Lock&lt;span class="o"&gt;)&lt;/span&gt;, same_screen YES,
    XLookupString gives &lt;span class="m"&gt;0&lt;/span&gt; bytes:
    XmbLookupString gives &lt;span class="m"&gt;0&lt;/span&gt; bytes:
     XFilterEvent returns: False
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Making &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; into &lt;tt class="docutils literal"&gt;BackSpace&lt;/tt&gt; is a 3-part process: &lt;strong&gt;remap&lt;/strong&gt; the key, remove the &lt;strong&gt;lock&lt;/strong&gt; on the key, and make it a &lt;strong&gt;repeating&lt;/strong&gt; key.&lt;/p&gt;
&lt;p&gt;Test a new key modification in the current Xsession:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xmodmap -e &lt;span class="s2"&gt;&amp;quot;keycode 66 = BackSpace&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; xmodmap -e &lt;span class="s2"&gt;&amp;quot;clear Lock&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; xset r 66
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the change sticky by adding the keymapping to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xmodmap&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;! Modify Caps_Lock into Backspace
keycode &lt;span class="nv"&gt;66&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; BackSpace
clear Lock
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xinitrc&lt;/span&gt;&lt;/tt&gt; to load keymap at &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;xmodmap ~/.xmodmap &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; xset r 66
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xmodmap"&gt;.xmodmap&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xinitrc"&gt;.xinitrc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="multimedia-keys-and-xbindkeys"&gt;
&lt;h2&gt;1. Multimedia keys and xbindkeys&lt;/h2&gt;
&lt;p&gt;This keyboard includes mediaplayer+volume keys. Create keyboard shortcuts for these multimedia keys by installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with &lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rhythmbox-plugins&lt;/span&gt;&lt;/tt&gt; - (optional) player controls&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys pulseaudio-utils rhythmbox-plugins
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rhythmbox-plugins&lt;/span&gt;&lt;/tt&gt; the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Fn+{Play,Pause,Previous,Next,Stop}&lt;/span&gt;&lt;/tt&gt; controls &amp;quot;just work&amp;quot; with the audio player. I use &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; to associate new functions to keys.&lt;/p&gt;
&lt;p&gt;Retrieve the &lt;tt class="docutils literal"&gt;keycodes&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;keysyms&lt;/tt&gt; of the volume keys:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xmodmap -pke &lt;span class="p"&gt;|&lt;/span&gt; egrep -i &lt;span class="s1"&gt;&amp;#39;volume|mute&amp;#39;&lt;/span&gt;
keycode &lt;span class="nv"&gt;121&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; XF86AudioMute NoSymbol XF86AudioMute
keycode &lt;span class="nv"&gt;122&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; XF86AudioLowerVolume NoSymbol XF86AudioLowerVolume
keycode &lt;span class="nv"&gt;123&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; XF86AudioRaiseVolume NoSymbol XF86AudioRaiseVolume
keycode &lt;span class="nv"&gt;198&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; XF86AudioMicMute NoSymbol XF86AudioMicMute
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I create a &lt;a class="reference external" href="http://www.circuidipity.com/pavolume.html"&gt;standalone script&lt;/a&gt; to control PulseAudio volume and associate the new command &lt;tt class="docutils literal"&gt;paVolume&lt;/tt&gt; and its options to volume keys in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Mute/lower/raise volume&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;paVolume -m&amp;quot;&lt;/span&gt;
XF86AudioMute
&lt;span class="s2"&gt;&amp;quot;paVolume -d&amp;quot;&lt;/span&gt;
XF86AudioLowerVolume
&lt;span class="s2"&gt;&amp;quot;paVolume -u&amp;quot;&lt;/span&gt;
XF86AudioRaiseVolume
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add command &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xinitrc&lt;/span&gt;&lt;/tt&gt; to load the new configuration at &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xbindkeysrc"&gt;.xbindkeysrc&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/paVolume"&gt;paVolume&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trackpoint"&gt;
&lt;h2&gt;2. TrackPoint&lt;/h2&gt;
&lt;p&gt;TrackPoint is auto-detected but slow. Customize pointer settings by installing &lt;tt class="docutils literal"&gt;xinput&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xinput
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Discover &lt;tt class="docutils literal"&gt;DEVICE &amp;lt;ID&amp;gt;&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;xinput list | grep pointer&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&amp;lt;ID&amp;gt; PROPERTIES&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;xinput &lt;span class="pre"&gt;list-props&lt;/span&gt; &amp;lt;ID&amp;gt;&lt;/tt&gt;. TrackPoint sensitivity is modified using the &lt;tt class="docutils literal"&gt;Device Accel Constant Deceleration&lt;/tt&gt; property:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xinput list &lt;span class="p"&gt;|&lt;/span&gt; grep pointer
⎡ Virtual core pointer                          &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;[&lt;/span&gt;master pointer  &lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)]&lt;/span&gt;
⎜   ↳ Virtual core XTEST pointer                &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;    &lt;span class="o"&gt;[&lt;/span&gt;slave  pointer  &lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)]&lt;/span&gt;
⎜   ↳ Lite-On Technology Corp. ThinkPad USB Keyboard with TrackPoint    &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;   &lt;span class="o"&gt;[&lt;/span&gt;slave  pointer  &lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)]&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;xinput list-props &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;Device Accel Constant Deceleration&amp;quot;&lt;/span&gt;
        Device Accel Constant Deceleration &lt;span class="o"&gt;(&lt;/span&gt;251&lt;span class="o"&gt;)&lt;/span&gt;:       1.000000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test a new setting with &lt;tt class="docutils literal"&gt;xinput &lt;span class="pre"&gt;set-prop&lt;/span&gt; ID &amp;quot;Device Accel Constant Deceleration&amp;quot; SETTING&lt;/tt&gt;. Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xinput &lt;span class="nb"&gt;set&lt;/span&gt;-prop &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Device Accel Constant Deceleration&amp;quot;&lt;/span&gt; 0.50
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the change sticky by adding the command to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xinitrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 15 Jul 2015 16:14:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-15:thinkpad-usb-keyboard-trackpoint.html</guid><category>debian</category><category>linux</category></item><item><title>Shell script: paVolume</title><link>http://www.circuidipity.com/pavolume.html</link><description>&lt;p&gt;My original intent was to manage sound on &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Jessiebook&lt;/a&gt; by binding the commands to the multimedia keys in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;. Instead &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; calls a standalone script I created to control PulseAudio volume (and thus useful beyond just &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt;): &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/paVolume"&gt;paVolume&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Script requirements: &lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt; (packaged in Debian), &lt;tt class="docutils literal"&gt;pamixer&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;volnoti&lt;/tt&gt; (GitHub).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pactl"&gt;
&lt;h2&gt;0. pactl&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt; controls a PulseAudio sound server and is included in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install pulseaudio-utils
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pamixer"&gt;
&lt;h2&gt;1. pamixer&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/cdemoulins/pamixer"&gt;pamixer&lt;/a&gt; is a PulseAudio console mixer. Compile dependencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential libpulse-dev libboost-program-options1.55.0 libboost-program-options-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download source and compile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://cdemoulins@github.com/cdemoulins/pamixer.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;pamixer
&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No &lt;tt class="docutils literal"&gt;make install&lt;/tt&gt;. Place the resulting &lt;tt class="docutils literal"&gt;pamixer&lt;/tt&gt; in PATH (I use &lt;tt class="docutils literal"&gt;~/bin&lt;/tt&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="volnoti"&gt;
&lt;h2&gt;2. volnoti&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/davidbrazdil/volnoti"&gt;volnoti&lt;/a&gt; is a lightweight volume notification. Compile dependencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install libdbus-glib-1-dev libgtk2.0-dev libgdk-pixbuf2.0-dev autoconf automake
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git://github.com/davidbrazdil/volnoti.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;volnoti
&lt;span class="nv"&gt;$ &lt;/span&gt;./prepare.sh
&lt;span class="nv"&gt;$ &lt;/span&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apply this fix &lt;a class="footnote-reference" href="#id5" id="id3"&gt;[1]&lt;/a&gt; to the source:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;src
&lt;span class="nv"&gt;$ &lt;/span&gt;rm value-client-stub.h &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make value-client-stub.h
&lt;span class="nv"&gt;$ &lt;/span&gt;rm value-daemon-stub.h &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make value-daemon-stub.h
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile source (and I use &lt;a class="reference external" href="https://packages.debian.org/jessie/checkinstall"&gt;checkinstall&lt;/a&gt; to make a &lt;tt class="docutils literal"&gt;deb&lt;/tt&gt; package and install):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo checkinstall make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start &lt;tt class="docutils literal"&gt;volnoti&lt;/tt&gt; daemon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;volnoti
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure daemon to auto-start at desktop launch (example: &lt;strong&gt;i3&lt;/strong&gt; - add to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.i3/config&lt;/span&gt;&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Auto-start applications&lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; --no-startup-id volnoti -t 2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;3. paVolume&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/paVolume"&gt;Script posted to GitHub&lt;/a&gt;. Download and place in PATH. Run &lt;tt class="docutils literal"&gt;paVolume &lt;span class="pre"&gt;-h&lt;/span&gt;&lt;/tt&gt; for options.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Ubuntu forums: &lt;a class="reference external" href="http://ubuntuforums.org/showthread.php?t=2215264&amp;amp;s=7aa2dfa8b89411472598e737c38f1475&amp;amp;p=12978792#post12978792"&gt;Error when using make &amp;quot;client.c:108:5: error: too many arguments to function&amp;quot;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 10 Jul 2015 00:12:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-10:pavolume.html</guid><category>debian</category><category>linux</category><category>shell</category><category>programming</category></item><item><title>Chromebook to Jessiebook</title><link>http://www.circuidipity.com/c720-chromebook-to-jessiebook.html</link><description>&lt;p&gt;Replace &lt;strong&gt;Chrome OS&lt;/strong&gt; permanently with &lt;strong&gt;Debian&lt;/strong&gt; on the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="jessiebook" class="align-right" src="images/jessiebook.png" style="width: 300px; height: 161px;" /&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Running a full-featured Linux on this little laptop is a delight: lightweight, several hours battery life, inexpensive, and snappy performance. I started with Debian, followed by &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu&lt;/a&gt;, &lt;a class="reference external" href="http://www.circuidipity.com/arch-install-encrypt.html"&gt;Arch&lt;/a&gt;, &lt;a class="reference external" href="http://www.circuidipity.com/c720-ubuntubook.html"&gt;Ubuntu&lt;/a&gt;, and have now returned to the latest Debian &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt; release.&lt;/p&gt;
&lt;p&gt;This device is available in a few different configurations. Mine is the non-touchscreen model &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C720-2848&lt;/span&gt;&lt;/tt&gt; with (non-expandable) 2GB RAM and a (user-replaceable) 16GB SSD.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recovery-image"&gt;
&lt;h2&gt;0. Recovery Image&lt;/h2&gt;
&lt;p&gt;Create a recovery image of Chrome OS (my C720 is model &lt;tt class="docutils literal"&gt;PEPPY &lt;span class="pre"&gt;C6A-N3C-A7O&lt;/span&gt;&lt;/tt&gt;) to enable restoring the Chromebook to its default configuration. &lt;a class="footnote-reference" href="#id13" id="id1"&gt;[1]&lt;/a&gt; This will require a spare USB stick of 2GB or better:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Log into the Chromebook and let it auto update, as there sometimes are firmware updates... check the updating status in the browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://help&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Insert the USB stick, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://imageburner&lt;/span&gt;&lt;/tt&gt; and follow the directions to generate a recovery image&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-install-media"&gt;
&lt;h2&gt;1. Prepare install media&lt;/h2&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="http://ftp.us.debian.org/debian/dists/stable/main/installer-amd64/current/images/netboot/mini.iso"&gt;64-bit minimal installer&lt;/a&gt; and &lt;a class="reference external" href="https://www.debian.org/releases/stable/amd64/ch04s03.html.en"&gt;flash the image&lt;/a&gt; to a USB stick. An alternative (my choice) is adding the image to a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt;. Using the minimal console installer (requires network connection) downloads all the latest packages during setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="seabios"&gt;
&lt;h2&gt;2. SeaBIOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.coreboot.org/SeaBIOS"&gt;SeaBIOS&lt;/a&gt; in combination with &lt;strong&gt;Coreboot&lt;/strong&gt; provides an open-source legacy BIOS that enables access to the MBR and the ability to install an alternative OS on the Chromebook. All this good stuff involves jumping through a few simple hoops and not trembling in fear at the &amp;quot;scary white screen&amp;quot; that pops up at power up stating that the boot loader detects something is &lt;strong&gt;very very wrong&lt;/strong&gt; with the Chromebook and helpfully suggests pressing the spacebar to begin recovery. &lt;strong&gt;Do not press the spacebar&lt;/strong&gt; or the Debian installation will be wiped from disk!&lt;/p&gt;
&lt;p&gt;There are 2 different methods for configuring SeaBIOS in preparation for installing Debian. First method uses a few simple commands in the Chrome OS shell to place the Chromebook into &lt;strong&gt;developer mode&lt;/strong&gt; and allow booting the USB install media and replacing Chrome OS with Debian. The drawback is that scary screen appears at every boot and you must press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; to boot to legacy-mode and onward to GRUB and Debian (and &lt;strong&gt;ignore&lt;/strong&gt; the helpful prompt to press spacebar and inadvertently begin the adventure of wiping clean the SSD).&lt;/p&gt;
&lt;p&gt;Second method involves setting new flags for the write-protected &lt;strong&gt;Google Binary Block&lt;/strong&gt; (GBB) in the device firmware. Delay at the boot screen can be reduced to a one second timeout and the legacy-mode BIOS set as the system default (no key combo required). Pressing the spacebar is disabled from doing any harm to Debian (the Chromebook just beeps). The drawback is that it involves the (very simple) removal of the device's bottom cover and the temporary removal of the &lt;strong&gt;write-protect screw&lt;/strong&gt; from the motherboard to permit flashing new flags to the GBB... and this may void the Chromebook's warranty (one of the case screws lies underneath a sticker declaring the warranty void if disturbed).&lt;/p&gt;
&lt;p&gt;Experimenting with alternate OS installs on the Chromebook I first employed the developer mode method followed by the write-protect screw removal. I prefer configuring the device to default to legacy-mode BIOS but I have employed both methods successfully and describe their respective steps below.&lt;/p&gt;
&lt;div class="section" id="write-protect-screw-method"&gt;
&lt;h3&gt;2.1 Write-Protect Screw Method&lt;/h3&gt;
&lt;p&gt;Disconnect power. Turn the Chromebook over facing bottom up and remove the 13 screws (not missing the one hidden under the warranty sticker). Gently pry the case off starting with the seam where the display connects to device. It comes away pretty easy.&lt;/p&gt;
&lt;p&gt;This is what you see:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="C720 annotated innards" src="images/c720-chromebook-annotated-innards.png" style="width: 800px; height: 558px;" /&gt;
&lt;p class="caption"&gt;[ Image: &lt;a class="footnote-reference" href="#id15" id="id3"&gt;[2]&lt;/a&gt; The battery lock screw is #6 and the write-protect screw is #7 ].&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; This will &lt;strong&gt;wipe out&lt;/strong&gt; whatever is installed on the SSD:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the write-protect screw&lt;/li&gt;
&lt;li&gt;Close back cover using only the battery lock screw to hold in place&lt;/li&gt;
&lt;li&gt;Re-connect power, boot Chromebook and wait until it displays:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Chrome OS is missing or damaged.
Please insert a recovery USB stick or SD card.
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Insert USB recovery media prepared in Step 0 and it will proceed to restore Chrome OS and reboot&lt;/li&gt;
&lt;li&gt;At default Chrome OS &amp;quot;Welcome!&amp;quot; screen open a terminal &lt;tt class="docutils literal"&gt;CTRL+ALT+F2&lt;/tt&gt; (Right-arrow)&lt;/li&gt;
&lt;li&gt;Login as &lt;tt class="docutils literal"&gt;chronos&lt;/tt&gt; (no password), then enter &lt;tt class="docutils literal"&gt;sudo su&lt;/tt&gt; for superuser access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set new GBB flags &lt;a class="footnote-reference" href="#id16" id="id4"&gt;[3]&lt;/a&gt; using the &lt;tt class="docutils literal"&gt;set_gbb_flags.sh&lt;/tt&gt; script in Chrome OS. Enable short &lt;strong&gt;developer mode&lt;/strong&gt; screen (1 second timeout) followed by &lt;strong&gt;default legacy mode&lt;/strong&gt; boot by using these flags:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GBB_FLAG_DEV_SCREEN_SHORT_DELAY 0×00000001
GBB_FLAG_FORCE_DEV_SWITCH_ON 0×00000008
GBB_FLAG_FORCE_DEV_BOOT_LEGACY 0×00000080
GBB_FLAG_DEFAULT_DEV_BOOT_LEGACY 0×00000400
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which adds up to running in the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/usr/share/vboot/bin/set_gbb_flags.sh 0x489
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shutdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# shutdown -h now&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and disconnect the power:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the bottom cover again and reinstall the write-lock screw to protect the BIOS&lt;/li&gt;
&lt;li&gt;Close cover and reinstall all the case screws&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Re-connect power, insert USB stick prepared in Step 1, and power up Chromebook. &lt;a class="footnote-reference" href="#id17" id="id5"&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-mode-method"&gt;
&lt;h3&gt;2.2 Developer Mode Method&lt;/h3&gt;
&lt;p&gt;The alternative to removing the write-protect screw above is to place the Chromebook into developer mode &lt;a class="footnote-reference" href="#id18" id="id6"&gt;[5]&lt;/a&gt; using the Chrome OS shell before booting the USB install media:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;With the Chromebook off... Hold down &lt;tt class="docutils literal"&gt;ESC+F3&lt;/tt&gt; (Refresh) keys and power on the device&lt;/li&gt;
&lt;li&gt;Invoke Recovery, and at the Recovery screen press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Device will prompt for confirmation, press &lt;tt class="docutils literal"&gt;ENTER&lt;/tt&gt; and the system reboots into developer mode&lt;/li&gt;
&lt;li&gt;Scary white boot screen appears and you need to press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt; to continue boot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enable the &lt;strong&gt;USB Boot&lt;/strong&gt; and &lt;strong&gt;Legacy BIOS&lt;/strong&gt; modes by opening the shell with &lt;tt class="docutils literal"&gt;Ctrl+Alt+T&lt;/tt&gt; and enter &lt;tt class="docutils literal"&gt;shell&lt;/tt&gt;. Set &lt;tt class="docutils literal"&gt;dev_boot_usb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dev_boot_legacy&lt;/tt&gt; to active:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_usb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert USB stick prepared in Step 1, reboot the Chromebook and press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; at the boot screen to enter legacy boot mode. &lt;a class="footnote-reference" href="#id19" id="id7"&gt;[6]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-debian"&gt;
&lt;h2&gt;3. Install Debian&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/minimal-debian.html"&gt;visual screenshot tour&lt;/a&gt; installing Debian &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt;. Due to Chromebook's small storage capacity, however, I use a different 3-partition layout:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt; configured as 300MB &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda2&lt;/tt&gt; configured as 2GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;random key&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda3&lt;/tt&gt; uses remaining space as LUKS encrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;passphrase&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="touchpad"&gt;
&lt;h2&gt;4. Touchpad&lt;/h2&gt;
&lt;p&gt;Debian &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt; installs Linux kernel 3.16 with backported support for Chromebook touchpad. Per-session modifications of touchpad settings can be made using &lt;tt class="docutils literal"&gt;synclient&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;synclient                 &lt;span class="c"&gt;# display current settings&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;synclient &lt;span class="nv"&gt;TapButton3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="c"&gt;# 3-finger tap = middle-click&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make any desired touchpad settings permanent by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/X11/xorg.conf.d/50-c720-touchpad.conf&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/X11/xorg.conf.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/50-c720-touchpad.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify to adjust timeouts, add tap-mouse actions (2-finger tap = right-click, 3-finger tap = middle-click), and 2-finger scrolling. &lt;a class="footnote-reference" href="#id20" id="id8"&gt;[7]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Section &lt;span class="s2"&gt;&amp;quot;InputClass&amp;quot;&lt;/span&gt;
    Identifier      &lt;span class="s2"&gt;&amp;quot;touchpad peppy cyapa&amp;quot;&lt;/span&gt;
    MatchIsTouchpad &lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;
    MatchDevicePath &lt;span class="s2"&gt;&amp;quot;/dev/input/event*&amp;quot;&lt;/span&gt;
    MatchProduct    &lt;span class="s2"&gt;&amp;quot;cyapa&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerLow&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerHigh&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertEdgeScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;HorizTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaRightEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;850&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaLeftEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton1&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton2&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton3&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;
EndSection
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/etc/X11/xorg.conf.d/50-c720-touchpad.conf"&gt;50-c720-touchpad.conf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ssd"&gt;
&lt;h2&gt;5. SSD&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Swappiness"&gt;Swappiness&lt;/a&gt; parameter controls the preference of the kernel to move processes out of physical memory to the swap partition. Range is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0-100&lt;/span&gt;&lt;/tt&gt;, default is set to &lt;tt class="docutils literal"&gt;60&lt;/tt&gt; and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use.&lt;/p&gt;
&lt;p&gt;Check current swappiness value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /proc/sys/vm/swappiness
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reduce SSD writes by setting a low value of &lt;tt class="docutils literal"&gt;vm.swappiness=1&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;/etc/sysctl.conf&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TRIM&lt;/strong&gt; optimizes SSD performance &lt;a class="footnote-reference" href="#id21" id="id9"&gt;[8]&lt;/a&gt; and is enabled by adding the &lt;tt class="docutils literal"&gt;discard&lt;/tt&gt; option to &lt;tt class="docutils literal"&gt;/etc/crypttab&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Example &lt;tt class="docutils literal"&gt;crypttab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sda2_crypt /dev/sda2 /dev/urandom &lt;span class="nv"&gt;cipher&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aes-xts-plain64,size&lt;span class="o"&gt;=&lt;/span&gt;256,discard,swap
sda3_crypt &lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;STRING&amp;gt; none luks,discard
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;&lt;/span&gt;
/dev/mapper/sda3_crypt /               ext4    noatime,discard,errors&lt;span class="o"&gt;=&lt;/span&gt;remount-ro &lt;span class="m"&gt;0&lt;/span&gt;       1
&lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;STRING&amp;gt; /boot                    ext4    noatime,discard         &lt;span class="m"&gt;0&lt;/span&gt;       2
/dev/mapper/sda2_crypt none            swap    sw,discard              &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/boot/initrd.img-*&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-initramfs -u -k all
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="suspend"&gt;
&lt;h2&gt;6. Suspend&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Suspend-and-resume generates a stream of errors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;1&lt;/span&gt; resume error -19
ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;2&lt;/span&gt; resume error -19
usb usb3-port1: over-current condition
usb usb3-port1: connect-debounce failed
usb usb3-port2: over-current condition
usb usb3-port2: connect-debounce failed
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and blocks Jessiebook from executing a proper restart/shutdown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; &lt;a class="footnote-reference" href="#id22" id="id10"&gt;[9]&lt;/a&gt; Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/systemd/system-sleep/ehci-pci.sh&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;/&lt;span class="nv"&gt;$2&lt;/span&gt; in
    pre/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Unbind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/unbind
    &lt;span class="p"&gt;;;&lt;/span&gt;
    post/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Bind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/bind
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the script executable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chmod &lt;span class="m"&gt;755&lt;/span&gt; /lib/systemd/system-sleep/ehci-pci.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure boot options in &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tpm_tis.force=1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update GRUB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/lib/systemd/system-sleep/ehci-pci.sh"&gt;ehci-pci.sh&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="keyboard-shortcuts"&gt;
&lt;h2&gt;7. Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;Top row on the keyboard with the shortcut icons (&lt;tt class="docutils literal"&gt;Brightness&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;Volume&lt;/tt&gt;, etc.) identify in Linux as &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the &lt;tt class="docutils literal"&gt;Search&lt;/tt&gt; key (in &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Create keyboard shortcuts by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbacklight&lt;/tt&gt; - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with &lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xvkbd&lt;/tt&gt; - send characters to another client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys xbacklight pulseaudio-utils xvkbd
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="direction-brightness-volume-page-keys"&gt;
&lt;h3&gt;7.1 Direction, Brightness, Volume, Page Keys&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys -k
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable function keys to modify sound and brightness settings by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# backward/forward&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Left&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F1

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Right&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F2

&lt;span class="c"&gt;# screenshots&lt;/span&gt;
&lt;span class="c"&gt;# desktop&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;scrot &amp;#39;%Y-%m-%dT%H%M%S.png&amp;#39; -e &amp;#39;mv &lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt; ~/Downloads &amp;amp;&amp;amp; eog ~/Downloads/&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
Alt + F4
&lt;span class="c"&gt;# active Window&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;scrot -d 4 -u -z &amp;#39;%Y-%m-%dT%H%M%S.png&amp;#39; -e &amp;#39;mv &lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt; ~/Downloads &amp;amp;&amp;amp; eog ~/Downloads/&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
Control + F4

&lt;span class="c"&gt;# backlight decrease/increase&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xbacklight -dec 10&amp;quot;&lt;/span&gt;
F6
&lt;span class="s2"&gt;&amp;quot;xbacklight -inc 10&amp;quot;&lt;/span&gt;
F7

&lt;span class="c"&gt;# volume mute/decrease/increase&lt;/span&gt;
&lt;span class="c"&gt;# paVolume - https://github.com/vonbrownie/homebin/blob/master/paVolume&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;paVolume -m&amp;quot;&lt;/span&gt;
F8
&lt;span class="s2"&gt;&amp;quot;paVolume -d&amp;quot;&lt;/span&gt;
F9
&lt;span class="s2"&gt;&amp;quot;paVolume -u&amp;quot;&lt;/span&gt;
F10

&lt;span class="c"&gt;# page up/down, home, end&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Up]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Up

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Down]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Down

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Home]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Left

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[End]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Right
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable new key shortcuts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Place &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xinitrc&lt;/span&gt;&lt;/tt&gt; to load configuration at &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt;. &lt;a class="footnote-reference" href="#id23" id="id11"&gt;[10]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xbindkeysrc"&gt;.xbindkeysrc&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/vonbrownie/dotfiles/blob/master/.xinitrc"&gt;.xinitrc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="power-key"&gt;
&lt;h3&gt;7.2 Power Key&lt;/h3&gt;
&lt;p&gt;Power key in upper-right corner ignores any configuration in the window manager and triggers poweroff without delay when pressed (easy to do by accident as its positioned next to &lt;tt class="docutils literal"&gt;backspace&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;If you want to disable the power key edit &lt;tt class="docutils literal"&gt;/etc/systemd/logind.conf&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;HandlePowerKey=ignore&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wireless"&gt;
&lt;h2&gt;8. Wireless&lt;/h2&gt;
&lt;p&gt;There are a few settings to modify to improve performance of Chromebook's wireless chipset. &lt;a class="footnote-reference" href="#id24" id="id12"&gt;[11]&lt;/a&gt; Identify the card and parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i net
01:00.0 Network controller: Qualcomm Atheros AR9462 Wireless Network Adapter &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;modinfo ath9k &lt;span class="p"&gt;|&lt;/span&gt; grep parm
parm:           debug:Debugging mask &lt;span class="o"&gt;(&lt;/span&gt;uint&lt;span class="o"&gt;)&lt;/span&gt;
parm:           nohwcrypt:Disable hardware encryption &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           blink:Enable LED blink on activity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           btcoex_enable:Enable wifi-BT coexistence &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           bt_ant_diversity:Enable WLAN/BT RX antenna diversity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           ps_enable:Enable WLAN PowerSave &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           use_chanctx:Enable channel context &lt;span class="k"&gt;for&lt;/span&gt; concurrency &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;tt class="docutils literal"&gt;/etc/modprobe.d/ath9k.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;options ath9k &lt;span class="nv"&gt;bt_ant_diversity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ps_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/etc/modprobe.d/ath9k.conf"&gt;ath9k.conf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="microphone"&gt;
&lt;h2&gt;9. Microphone&lt;/h2&gt;
&lt;p&gt;Confirm the microphone is un-muted in &lt;tt class="docutils literal"&gt;alsamixer&lt;/tt&gt;. Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/modprobe.d/snd-hda-intel.conf&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;options snd_hda_intel &lt;span class="nv"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;,alc283-dac-wcaps
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart (I couldn't get the module to unload). Give it a try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;arecord -d &lt;span class="m"&gt;5&lt;/span&gt; chr-mic.wav
&lt;span class="nv"&gt;$ &lt;/span&gt;aplay chr-mic.wav
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;10. Helpful Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Specs: output of &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/doc/lshw.txt"&gt;lshw&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/doc/lspci.txt"&gt;lspci&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_jessiebook/doc/lsusb.txt"&gt;lsusb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arch Linux C720 installation with useful &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook"&gt;post-install details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Turn Chromebooks into &lt;a class="reference external" href="http://blog.codestarter.org/how-we-turn-199-chromebooks-into-ubuntu-based/"&gt;Ubuntu-based code learning machines for kids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My earlier install and configuration of &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu 14.04 LTS&lt;/a&gt; under &lt;tt class="docutils literal"&gt;upstart&lt;/tt&gt; (vs &lt;tt class="docutils literal"&gt;systemd&lt;/tt&gt; in Debian)&lt;/li&gt;
&lt;li&gt;Lightweight &lt;a class="reference external" href="http://www.circuidipity.com/i3-tiling-window-manager.html"&gt;i3 tiling window manager&lt;/a&gt; is snappy on the Chromebook's modest hardware&lt;/li&gt;
&lt;li&gt;Create shell scripts to configure Chromebook &lt;a class="reference external" href="http://www.circuidipity.com/chromebook-liftoff-splashdown.html"&gt;when it leaves and returns home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id13" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Create a Chromebook &lt;a class="reference external" href="https://support.google.com/chromebook/answer/1080595?hl=en"&gt;recovery image&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id15" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Image courtesy of &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook#TOC-Firmware"&gt;Chromium&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id16" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Useful &lt;a class="reference external" href="http://www.coreboot.org/pipermail/coreboot/2014-January/077083.html"&gt;GBB flags&lt;/a&gt; for &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;another new free software machine&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id17" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Whenever you remove battery power to the Chromebook (like opening up the case) the hardware clock on the motherboard resets to a future year (mine travelled to 2040). Providing a network connection is up during the Debian installation the system should fetch a correct time from a NTP server. Otherwise fix the &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;fallout from an incorrect clock&lt;/a&gt; by re-mounting partitions read-only and correct filesystem timestamps using &lt;tt class="docutils literal"&gt;fsck&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id18" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Switching between developer and normal (non-developer) modes will remove user accounts and their associated information from the Chromebook.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id19" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.chromium.org/chromium-os"&gt;Chromium OS&lt;/a&gt; developer information for the &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook"&gt;Acer C720 Chromebook&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id20" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id8"&gt;[7]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Entries for &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Touchpad Synaptics&lt;/a&gt; and the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook#configuration"&gt;C720 Chromebook&lt;/a&gt; on &lt;a class="reference external" href="https://wiki.archlinux.org/"&gt;ArchWiki&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id21" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id9"&gt;[8]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.linuxjournal.com/content/solid-state-drives-get-one-already"&gt;TRIM configuration on solid-state drives&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id22" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id10"&gt;[9]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Some HOWTOs talk about adding &lt;tt class="docutils literal"&gt;modprobe.blacklist=ehci_hcd,ehci_pci&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id23" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id11"&gt;[10]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Xbindkeys"&gt;Xbindkeys&lt;/a&gt;, and another sample &lt;a class="reference external" href="https://github.com/alexpatel/dotfiles/blob/master/xbindkeysrc"&gt;Chromebook-friendly xbindkeysrc&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id24" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id12"&gt;[11]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Wireless &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k"&gt;ath9k driver&lt;/a&gt; and &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k/btcoex"&gt;bluetooth coexistence&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 24 Sep 2015 13:58:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-08:c720-chromebook-to-jessiebook.html</guid><category>chromebook</category><category>debian</category><category>linux</category></item><item><title>Minimal Debian</title><link>http://www.circuidipity.com/minimal-debian.html</link><description>&lt;div class="figure"&gt;
&lt;img alt="Debian Vader" src="images/debianVader.png" style="width: 960px; height: 355px;" /&gt;
&lt;p class="caption"&gt;[Image courtesy &lt;a class="reference external" href="http://jschild.deviantart.com/art/Facebook-cover-debian-Darth-Vader-380351614"&gt;jschild&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I use Debian's &lt;tt class="docutils literal"&gt;mini.iso&lt;/tt&gt; installer to create a &lt;strong&gt;lightweight base configuration&lt;/strong&gt; that can be customized for various tasks and desktops.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.debian.org"&gt;Debian GNU/Linux&lt;/a&gt; is an operating system created by volunteers of one of the largest and longest-running free software projects in the world. More than a hundred other Linux distributions like &lt;a class="reference external" href="http://www.circuidipity.com/tag-ubuntu.html"&gt;Ubuntu&lt;/a&gt; build their distributions on solid Debian &lt;strong&gt;awesomesauce&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are 3 &lt;strong&gt;release branches&lt;/strong&gt;: &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;stretch/testing&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;sid/unstable&lt;/tt&gt;. Below is a visual walk-through of a sample Debian &lt;tt class="docutils literal"&gt;stable&lt;/tt&gt; setup that makes use of an entire storage device divided into 3 partitions: unencrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;, and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup"&gt;LUKS&lt;/a&gt; encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;home&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-install-media"&gt;
&lt;h2&gt;0. Prepare install media&lt;/h2&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="http://ftp.us.debian.org/debian/dists/stable/main/installer-amd64/current/images/netboot/mini.iso"&gt;64-bit mini.iso&lt;/a&gt; (&lt;a class="reference external" href="http://ftp.us.debian.org/debian/dists/stable/main/installer-i386/current/images/netboot/mini.iso"&gt;32bit&lt;/a&gt; for older machines) and &lt;a class="reference external" href="https://www.debian.org/releases/stable/amd64/ch04s03.html.en"&gt;flash the image&lt;/a&gt; to a USB stick. An alternative (my choice) is adding the image to a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The minimal console installer (requires network connection) downloads all the latest packages during setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="launch"&gt;
&lt;h2&gt;1. Launch&lt;/h2&gt;
&lt;img alt="Install" class="align-center" src="images/screenshot/debianInstall/01.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Language" class="align-center" src="images/screenshot/debianInstall/02.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Location" class="align-center" src="images/screenshot/debianInstall/03.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure Keyboard" class="align-center" src="images/screenshot/debianInstall/04.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Hostname" class="align-center" src="images/screenshot/debianInstall/05.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Domain" class="align-center" src="images/screenshot/debianInstall/06.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror Country" class="align-center" src="images/screenshot/debianInstall/07.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror archive" class="align-center" src="images/screenshot/debianInstall/08.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror Directory" class="align-center" src="images/screenshot/debianInstall/09.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Proxy" class="align-center" src="images/screenshot/debianInstall/10.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Root password" class="align-center" src="images/screenshot/debianInstall/11.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify password" class="align-center" src="images/screenshot/debianInstall/12.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Full Name" class="align-center" src="images/screenshot/debianInstall/13.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Username" class="align-center" src="images/screenshot/debianInstall/14.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="User password" class="align-center" src="images/screenshot/debianInstall/15.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify password" class="align-center" src="images/screenshot/debianInstall/16.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select time zone" class="align-center" src="images/screenshot/debianInstall/17.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="partitions"&gt;
&lt;h2&gt;2. Partitions&lt;/h2&gt;
&lt;p&gt;In the example below I create 3 partitions on the disk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt; configured as 20GB &lt;tt class="docutils literal"&gt;root&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda5&lt;/tt&gt; configured as 1GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;random key&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;sda6&lt;/tt&gt; uses remaining space as LUKS encrypted &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;passphrase&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Partitioning method" class="align-center" src="images/screenshot/debianInstall/18.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition disks" class="align-center" src="images/screenshot/debianInstall/19.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition table" class="align-center" src="images/screenshot/debianInstall/20.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/debianInstall/21.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New Partition" class="align-center" src="images/screenshot/debianInstall/22.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/debianInstall/23.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Primary partition" class="align-center" src="images/screenshot/debianInstall/24.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/debianInstall/25.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;Setting &lt;strong&gt;Mount options&lt;/strong&gt; to &lt;tt class="docutils literal"&gt;noatime&lt;/tt&gt; decreases write operations and boosts drive speed.&lt;/p&gt;
&lt;img alt="Mount options" class="align-center" src="images/screenshot/debianInstall/25.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="noatime" class="align-center" src="images/screenshot/debianInstall/25.2.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/debianInstall/26.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/debianInstall/27.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/debianInstall/28.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/debianInstall/29.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/debianInstall/30.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/debianInstall/31.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Use as" class="align-center" src="images/screenshot/debianInstall/31.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encrypt volume" class="align-center" src="images/screenshot/debianInstall/32.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encryption key" class="align-center" src="images/screenshot/debianInstall/32.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Random key" class="align-center" src="images/screenshot/debianInstall/33.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;If the hard disk has not been securely wiped prior to installing Debian (using a utility like &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;DBAN&lt;/a&gt;) you may want to set &lt;tt class="docutils literal"&gt;Erase data&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;yes&lt;/tt&gt;. Depending on the size of the disk this operation can last several hours.&lt;/p&gt;
&lt;img alt="Erase data" class="align-center" src="images/screenshot/debianInstall/33.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/debianInstall/33.2.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/debianInstall/34.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/debianInstall/35.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/debianInstall/36.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/debianInstall/30.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Use as" class="align-center" src="images/screenshot/debianInstall/31.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encrypt volume" class="align-center" src="images/screenshot/debianInstall/38.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Erase data" class="align-center" src="images/screenshot/debianInstall/39.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up the partition" class="align-center" src="images/screenshot/debianInstall/39.2.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure encrypted volumes" class="align-center" src="images/screenshot/debianInstall/40.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Write changes to disk" class="align-center" src="images/screenshot/debianInstall/41.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Create encrypted volumes" class="align-center" src="images/screenshot/debianInstall/42.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Devices to encrypt" class="align-center" src="images/screenshot/debianInstall/43.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish encrypt" class="align-center" src="images/screenshot/debianInstall/44.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encryption passphrase" class="align-center" src="images/screenshot/debianInstall/45.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify passphrase" class="align-center" src="images/screenshot/debianInstall/46.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure encrypted volume" class="align-center" src="images/screenshot/debianInstall/47.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount point" class="align-center" src="images/screenshot/debianInstall/48.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount home" class="align-center" src="images/screenshot/debianInstall/48.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount options" class="align-center" src="images/screenshot/debianInstall/49.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="noatime" class="align-center" src="images/screenshot/debianInstall/25.2.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;&lt;strong&gt;Reserved blocks&lt;/strong&gt; can be used by privileged system processes to write to disk - useful if a full filesystem blocks users from writing - and reduce disk fragmentation. On large, non-root partitions extra space can be gained by reducing the default 5% reserve set aside by Debian to 1%.&lt;/p&gt;
&lt;img alt="Reserved blocks" class="align-center" src="images/screenshot/debianInstall/49.1.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Percent reserved" class="align-center" src="images/screenshot/debianInstall/49.2.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up the partition" class="align-center" src="images/screenshot/debianInstall/49.3.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish partitioning" class="align-center" src="images/screenshot/debianInstall/49.4.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Write changes to disk" class="align-center" src="images/screenshot/debianInstall/50.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="install-packages-and-finish-up"&gt;
&lt;h2&gt;3. Install packages and finish up&lt;/h2&gt;
&lt;img alt="Popularity-contest" class="align-center" src="images/screenshot/debianInstall/51.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;Select only &lt;tt class="docutils literal"&gt;[*] standard system utilities&lt;/tt&gt; if you wish to start with a minimal, console-only base configuration ready for further customization. Task menu can be accessed post-install by running &lt;tt class="docutils literal"&gt;tasksel&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="Software selection" class="align-center" src="images/screenshot/debianInstall/52.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB" class="align-center" src="images/screenshot/debianInstall/53.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB install" class="align-center" src="images/screenshot/debianInstall/54.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish" class="align-center" src="images/screenshot/debianInstall/55.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB menu" class="align-center" src="images/screenshot/debianInstall/56.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;If an encrypted home partition was created in Step 2 the system will display a passphrase prompt to unlock the partition.&lt;/p&gt;
&lt;img alt="Enter encrypt passphrase" class="align-center" src="images/screenshot/debianInstall/57.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Login" class="align-center" src="images/screenshot/debianInstall/58.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="post-install"&gt;
&lt;h2&gt;4. Post-install&lt;/h2&gt;
&lt;p&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/scripts/debian-post-install.sh"&gt;post-install shell script&lt;/a&gt; to configure or upgrade (to &lt;tt class="docutils literal"&gt;testing&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;sid&lt;/tt&gt;) a fresh setup.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 07 Jul 2015 15:43:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-07:minimal-debian.html</guid><category>debian</category><category>linux</category><category>luks</category><category>crypto</category><category>shell</category><category>programming</category></item><item><title>Run a Raspberry Pi 2 from USB storage v3.0</title><link>http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage-using-raspbian.html</link><description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Pi now running &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-usb-storage-v4.html"&gt;Debian Jessie&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am exploring the use of my Pi as &lt;strong&gt;24/7 uptime home server&lt;/strong&gt; and one of the hacks I wish to add is using Pi as a cheap and cheerful &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;network attached storage (NAS)&lt;/a&gt; device. Hmmm... How about using that USB hard drive I connect for NAS and move over the Pi rootfs and run it from there as well?&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I imagine a 24/7 uptime Pi enjoys more storage and robust performance operating from hard drive storage vs a microSD card. &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt; I put my plan in motion using:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;8GB microSD card (for initial setup and &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition) &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1TB powered USB hard drive&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst"&gt;raspbian-ua-netinst&lt;/a&gt; &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Setup a minimal &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspbian.html"&gt;Raspbian&lt;/a&gt; configuration using the latest packages drawn from &lt;a class="reference external" href="http://www.circuidipity.com/tag-debian.html"&gt;Debian&lt;/a&gt; &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt;  with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-ua-netinst&lt;/span&gt;&lt;/tt&gt;. The netinstaller runs unattended (no display/keyboard required) with the option of installing rootfs to external USB storage. Upon completion the Pi reboots with DHCP and OpenSSH for remote access.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-microsd"&gt;
&lt;h2&gt;0. Prepare the microSD&lt;/h2&gt;
&lt;p&gt;MicroSD card is prepared on a host running Debian. &lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst/releases/"&gt;Download&lt;/a&gt; the latest &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-ua-netinst-vX.X.X.img.xz&lt;/span&gt;&lt;/tt&gt; and flash image to the card (example &lt;tt class="docutils literal"&gt;sdX&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get install xz-utils&lt;/span&gt;
&lt;span class="c"&gt;# xzcat /path/to/raspbian-ua-netinst-&amp;lt;latest-version-number&amp;gt;.img.xz &amp;gt; /dev/sdX &amp;amp;&amp;amp; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="customize-the-install"&gt;
&lt;h2&gt;1. Customize the install&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst#installer-customization"&gt;Default settings&lt;/a&gt; for the netinstaller are customized by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; in the root directory of the newly-prepared microSD. Remove card, re-insert, mount &lt;tt class="docutils literal"&gt;sdX1&lt;/tt&gt;, add the config.&lt;/p&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Netinstaller reformats drive and installs rootfs to &lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt;. Omit if you want a single partition that fills the entire drive (vs separate &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; partition I create later on). Either way... &lt;strong&gt;all data will be wiped from the drive&lt;/strong&gt;. Make any backups you need to make.&lt;/p&gt;
&lt;p&gt;Add only the settings to be changed from their defaults. Example that creates a 256MB &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; on the microSD and 24GB &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; on the USB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;vim,tmux
&lt;span class="nv"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MyHostname
&lt;span class="nv"&gt;bootsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+256M
&lt;span class="nv"&gt;rootsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+24000M
&lt;span class="nv"&gt;usbroot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A second &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;post-install.txt&lt;/span&gt;&lt;/tt&gt; shell script can also be created alongside &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; that will run after installation is complete but before the Pi reboots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-and-configure"&gt;
&lt;h2&gt;2. Install and configure&lt;/h2&gt;
&lt;p&gt;I connect the 1TB hard drive to Pi, insert microSD, and power up. Netinstaller typically runs under 15 minutes to setup a base configuration before rebooting the Pi.&lt;/p&gt;
&lt;p&gt;SSH into the newly-configured Pi (default &lt;tt class="docutils literal"&gt;login: root&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;password: raspbian&lt;/tt&gt;). Details of the install are logged in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/var/log/raspbian-ua-netinst.log&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Configure: &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a new root password: &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;default locale: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;timezone: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create 1GB swap file: &lt;tt class="docutils literal"&gt;dd &lt;span class="pre"&gt;if=/dev/zero&lt;/span&gt; &lt;span class="pre"&gt;of=/swap&lt;/span&gt; bs=1M count=1024 &amp;amp;&amp;amp; mkswap /swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable swap file at boot: &lt;tt class="docutils literal"&gt;echo &amp;quot;/swap none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;hardware random number generator: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;-y&lt;/span&gt; install &lt;span class="pre"&gt;rng-tools&lt;/span&gt; &amp;amp;&amp;amp; echo &lt;span class="pre"&gt;&amp;quot;bcm2708-rng&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;add new user: &lt;tt class="docutils literal"&gt;adduser USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrade"&gt;
&lt;h2&gt;3. Upgrade&lt;/h2&gt;
&lt;p&gt;Stable release of Raspbian (2015-07-03) is currently built on older Debian &lt;tt class="docutils literal"&gt;wheezy&lt;/tt&gt; packages. Upgrade to the &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt; branch by first modifying &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://mirrordirector.raspbian.org/raspbian jessie main contrib non-free firmware rpi&amp;quot; &amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://archive.raspbian.org/raspbian jessie main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update the package lists and upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get update &amp;amp;&amp;amp; apt-get -y dist-upgrade &amp;amp;&amp;amp; apt-get -y autoremove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partition-external-usb-drive"&gt;
&lt;h2&gt;4. Partition external USB drive&lt;/h2&gt;
&lt;p&gt;Device is &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt;. Use &lt;strong&gt;fdisk&lt;/strong&gt; to create a new partition for &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; on the USB:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 24GB - &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; - created by &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-ua-netinst&lt;/span&gt;&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;sda2 - remaining space - &lt;tt class="docutils literal"&gt;home&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# fdisk /dev/sda&lt;/span&gt;

Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.25.2&lt;span class="o"&gt;)&lt;/span&gt;.
Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
Be careful before using the write command.


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot Start      End  Sectors  Size Id Type
/dev/sda1          &lt;span class="m"&gt;63&lt;/span&gt; &lt;span class="m"&gt;46893734&lt;/span&gt; &lt;span class="m"&gt;46893672&lt;/span&gt; 22.4G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended &lt;span class="o"&gt;(&lt;/span&gt;container &lt;span class="k"&gt;for&lt;/span&gt; logical partitions&lt;span class="o"&gt;)&lt;/span&gt;
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;2-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
First sector &lt;span class="o"&gt;(&lt;/span&gt;46893735-1953525167, default 46895104&lt;span class="o"&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;46895104-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;:

Created a new partition &lt;span class="m"&gt;2&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; and of size 909.2 GiB.

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p
Disk /dev/sda: 931.5 GiB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes, &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel &lt;span class="nb"&gt;type&lt;/span&gt;: dos
Disk identifier: 0x00000000

Device     Boot    Start        End    Sectors   Size Id Type
/dev/sda1             &lt;span class="m"&gt;63&lt;/span&gt;   &lt;span class="m"&gt;46893734&lt;/span&gt;   &lt;span class="m"&gt;46893672&lt;/span&gt;  22.4G &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/sda2       &lt;span class="m"&gt;46895104&lt;/span&gt; &lt;span class="m"&gt;1953525167&lt;/span&gt; &lt;span class="m"&gt;1906630064&lt;/span&gt; 909.2G &lt;span class="m"&gt;83&lt;/span&gt; Linux


Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Re-reading the partition table failed.: Device or resource busy

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt; or kpartx&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="move-home"&gt;
&lt;h2&gt;5. Move home&lt;/h2&gt;
&lt;p&gt;Format new partition using &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt; filesystem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkfs.ext4 -E lazy_itable_init=0,lazy_journal_init=0 /dev/sda2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mount partition and move over any contents in &lt;tt class="docutils literal"&gt;/home&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mount -t ext4 /dev/sda2 /mnt &amp;amp;&amp;amp; mv /home/* /mnt/ &amp;amp;&amp;amp; sync &amp;amp;&amp;amp; umount /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt; and mount new location of &lt;tt class="docutils literal"&gt;home&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# echo &amp;quot;/dev/sda2 /home ext4 noatime 0 2&amp;quot; &amp;gt;&amp;gt; /etc/fstab &amp;amp;&amp;amp; mount /home&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="static-address"&gt;
&lt;h2&gt;6. Static address&lt;/h2&gt;
&lt;p&gt;A Raspberry Pi that is going to stay home and run as a server can be configured to use a &lt;strong&gt;static network address&lt;/strong&gt;. Sample &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; modification that disables &lt;tt class="docutils literal"&gt;dhcp&lt;/tt&gt; and sets ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt; and connects to a router (that handles DNS) at &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#iface eth0 inet dhcp&lt;/span&gt;
auto eth0
iface eth0 inet static
    address 192.168.1.88
    netmask 255.255.255.0
    gateway 192.168.1.1
    dns-nameservers 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="openssh"&gt;
&lt;h2&gt;7. OpenSSH&lt;/h2&gt;
&lt;p&gt;Secure access to remote servers &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;using SSH keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.raspberrypi.org/forums/viewtopic.php?f=29&amp;amp;t=44177"&gt;Discussion thread&lt;/a&gt; about moving root to external USB storage.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Pi 2 requires microSD card at boot so we continue using original &lt;tt class="docutils literal"&gt;/boot&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Version 1&lt;/a&gt; of HOWTO used Raspbian on a Raspberry Pi Model B. With the Pi 2 moving to ARMv7 I used a &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage.html"&gt;minimal Ubuntu 14.04&lt;/a&gt; installer for Version 2.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/scripts/raspbian-post-install.sh"&gt;post-install script&lt;/a&gt; for configuring the base install and upgrading to &lt;tt class="docutils literal"&gt;jessie&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 24 Jul 2015 12:22:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-05:run-a-raspberry-pi-2-from-external-usb-storage-using-raspbian.html</guid><category>raspberry pi</category><category>raspbian</category><category>debian</category><category>linux</category><category>network</category></item><item><title>Minimal Raspbian Jessie</title><link>http://www.circuidipity.com/minimal-raspbian-jessie.html</link><description>&lt;p&gt;Setup a minimal &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspbian.html"&gt;Raspbian&lt;/a&gt; configuration on the &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspberry-pi.html"&gt;Raspberry Pi&lt;/a&gt; using &lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst"&gt;raspbian-ua-netinst&lt;/a&gt; (ideal start for a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;home server&lt;/a&gt;) with the latest packages from &lt;a class="reference external" href="http://www.circuidipity.com/tag-debian.html"&gt;Debian&lt;/a&gt; &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;The netinstaller runs unattended (no display/keyboard required) with the option of installing &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage-using-raspbian.html"&gt;rootfs to external USB storage&lt;/a&gt;. Upon completion the Pi reboots with DHCP and OpenSSH for remote access.&lt;/p&gt;
&lt;p&gt;I put my plan in motion using:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;8GB microSD card&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;raspbian-ua-netinst&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-microsd"&gt;
&lt;h2&gt;0. Prepare the microSD&lt;/h2&gt;
&lt;p&gt;MicroSD card is prepared on a host running Debian. &lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst/releases/"&gt;Download&lt;/a&gt; the latest &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-ua-netinst-vX.X.X.img.xz&lt;/span&gt;&lt;/tt&gt; and flash the image to the card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# xzcat /path/to/raspbian-ua-netinst-&amp;lt;latest-version-number&amp;gt;.img.xz &amp;gt; /dev/sdX &amp;amp;&amp;amp; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="customize-the-install-optional"&gt;
&lt;h2&gt;1. Customize the install (optional)&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst#installer-customization"&gt;Default settings&lt;/a&gt; for the netinstaller can be customized by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; in the root directory of the newly-prepared microSD. Remove newly-formatted card, re-insert, mount &lt;tt class="docutils literal"&gt;sdX1&lt;/tt&gt;, add the config.&lt;/p&gt;
&lt;p&gt;Add only the settings to be changed from their defaults (example):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;vim,tmux
&lt;span class="nv"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MyHostname
&lt;span class="nv"&gt;bootsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+256M
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A second &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;post-install.txt&lt;/span&gt;&lt;/tt&gt; shell script can also be created alongside &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; that will run after installation is complete but before the Pi reboots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-and-configure"&gt;
&lt;h2&gt;2. Install and configure&lt;/h2&gt;
&lt;p&gt;Insert microSD in the Pi and power up. Netinstaller typically runs under 15 minutes &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; to setup a base configuration before rebooting the Pi.&lt;/p&gt;
&lt;p&gt;SSH into the newly-configured Pi (default &lt;tt class="docutils literal"&gt;login: root&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;password: raspbian&lt;/tt&gt;). Details of the install are logged in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/var/log/raspbian-ua-netinst.log&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Configure &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a new root password: &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;default locale: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;timezone: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create 1GB swap file: &lt;tt class="docutils literal"&gt;dd &lt;span class="pre"&gt;if=/dev/zero&lt;/span&gt; &lt;span class="pre"&gt;of=/swap&lt;/span&gt; bs=1M count=1024 &amp;amp;&amp;amp; mkswap /swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable swap file at boot: &lt;tt class="docutils literal"&gt;echo &amp;quot;/swap none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable hardware random number generator: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;-y&lt;/span&gt; install &lt;span class="pre"&gt;rng-tools&lt;/span&gt; &amp;amp;&amp;amp; echo &lt;span class="pre"&gt;&amp;quot;bcm2708-rng&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;add new user: &lt;tt class="docutils literal"&gt;adduser USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrade"&gt;
&lt;h2&gt;3. Upgrade&lt;/h2&gt;
&lt;p&gt;Stable release of Raspbian (2015-07-03) is currently built on older Debian &lt;tt class="docutils literal"&gt;wheezy&lt;/tt&gt; packages. Upgrade to the &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt; branch by first modifying &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://mirrordirector.raspbian.org/raspbian jessie main contrib non-free firmware rpi&amp;quot; &amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://archive.raspbian.org/raspbian jessie main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update the package lists and upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get update &amp;amp;&amp;amp; apt-get -y dist-upgrade &amp;amp;&amp;amp; apt-get -y autoremove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;First attempt (unattended upgrade straight to &lt;tt class="docutils literal"&gt;jessie&lt;/tt&gt;) took 236min! Second attempt (no custom config) took 112min.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I poked around to see if there was something wonky with the microSD... first using &lt;tt class="docutils literal"&gt;badlocks&lt;/tt&gt; (read-only test):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# badblocks -vs /dev/sdb&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
79434
79435
79436
79437
&lt;span class="k"&gt;done&lt;/span&gt;
Pass completed, &lt;span class="m"&gt;6424&lt;/span&gt; bad blocks found. &lt;span class="o"&gt;(&lt;/span&gt;6424/0/0 errors&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second test was creating/writing an image to the card (see &lt;a class="reference external" href="http://projects.nuschkys.net/2012/05/15/testing-a-new-sd-card-under-linux/"&gt;&amp;quot;Testing a new SD card under Linux&amp;quot;&lt;/a&gt;) but it bombed right away:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# dd if=/dev/urandom of=test_sd.tmp bs=1024 count=8000000&lt;/span&gt;
8000000+0 records in
8000000+0 records out
&lt;span class="m"&gt;8192000000&lt;/span&gt; bytes &lt;span class="o"&gt;(&lt;/span&gt;8.2 GB&lt;span class="o"&gt;)&lt;/span&gt; copied, 597.98 s, 13.7 MB/s
&lt;span class="c"&gt;# dd if=test_sd.tmp of=/dev/sdb bs=1024 count=8000000&lt;/span&gt;
dd: error writing ‘/dev/sdb’: Input/output error
73017+0 records in
73016+0 records out
&lt;span class="m"&gt;74768384&lt;/span&gt; bytes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;75&lt;/span&gt; MB&lt;span class="o"&gt;)&lt;/span&gt; copied, 44.9678 s, 1.7 MB/s
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conclusion: &lt;em&gt;definitely&lt;/em&gt; wonky. :-) Replace with a good microSD and install took 12min.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/scripts/raspbian-post-install.sh"&gt;post-install script&lt;/a&gt; for configuring the base install and upgrading to &lt;tt class="docutils literal"&gt;jessie&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 03 Jul 2015 19:27:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-07-03:minimal-raspbian-jessie.html</guid><category>raspbian</category><category>debian</category><category>linux</category><category>raspberry pi</category><category>network</category></item><item><title>OpenWrt router as bridged repeater using relayd</title><link>http://www.circuidipity.com/openwrt-bridged-repeater.html</link><description>&lt;p&gt;Extend the range of a wireless network using a cheap and cheerful router running &lt;a class="reference external" href="http://www.circuidipity.com/tag-openwrt.html"&gt;OpenWrt&lt;/a&gt; as a &lt;strong&gt;bridged repeater&lt;/strong&gt;. All client devices use the same IP address range and are capable of communicating with each other.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Wireless access points: &lt;strong&gt;PrimaryAP&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/supercharge-a-home-router-using-openwrt-pt2.html"&gt;TP-Link TL-WDR3600&lt;/a&gt; with IP address &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt; + wireless channel &lt;tt class="docutils literal"&gt;11&lt;/tt&gt; and the &lt;strong&gt;RepeaterAP&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade4.html"&gt;TP-Link TL-WR841N&lt;/a&gt; (~$25CAN). Both devices are running OpenWrt.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://forum.openwrt.org/viewtopic.php?id=39077"&gt;This thread&lt;/a&gt; was a big help in cutting through the confusion and getting everything hopping! Basically there are 2 types of repeater scenarios to consider:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;non-bridged&lt;/em&gt; repeater - works on all radios... devices connected to the &lt;em&gt;RepeaterAP&lt;/em&gt; see the &lt;em&gt;PrimaryAP&lt;/em&gt; devices, &lt;em&gt;PrimaryAP&lt;/em&gt; devices do not see &lt;em&gt;RepeaterAP&lt;/em&gt; devices&lt;/li&gt;
&lt;li&gt;&lt;em&gt;bridged&lt;/em&gt; repeater - works for most radios... everything sees everything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All configuration is done on the secondary router to setup device as a bridged repeater.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-relayd"&gt;
&lt;h2&gt;0. Install relayd&lt;/h2&gt;
&lt;p&gt;Access the internet by connecting an ethernet cable from the secondary router's WAN port to the primary router. Login and install &lt;tt class="docutils literal"&gt;relayd&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# opkg update&lt;/span&gt;
&lt;span class="c"&gt;# opkg install relayd&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/relayd enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-wireless"&gt;
&lt;h2&gt;1. Configure wireless&lt;/h2&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;/etc/config/wireless&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config wifi-device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mac80211&amp;#39;&lt;/span&gt;
    option channel &lt;span class="s1"&gt;&amp;#39;11&amp;#39;&lt;/span&gt;     &lt;span class="c"&gt;# Important! Match with the channel set on PrimaryAP&lt;/span&gt;
    option hwmode &lt;span class="s1"&gt;&amp;#39;11g&amp;#39;&lt;/span&gt;
    option path &lt;span class="s1"&gt;&amp;#39;platform/ar934x_wmac&amp;#39;&lt;/span&gt;
    option htmode &lt;span class="s1"&gt;&amp;#39;HT20&amp;#39;&lt;/span&gt;
    option txpower &lt;span class="s1"&gt;&amp;#39;30&amp;#39;&lt;/span&gt;
    option country &lt;span class="s1"&gt;&amp;#39;US&amp;#39;&lt;/span&gt;

config wifi-iface
    option device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;wwan&amp;#39;&lt;/span&gt;
    option encryption &lt;span class="s1"&gt;&amp;#39;psk2&amp;#39;&lt;/span&gt;
    option key &lt;span class="s1"&gt;&amp;#39;*********************&amp;#39;&lt;/span&gt;
    option mode &lt;span class="s1"&gt;&amp;#39;sta&amp;#39;&lt;/span&gt;
    option ssid &lt;span class="s1"&gt;&amp;#39;PrimaryAP&amp;#39;&lt;/span&gt;

config wifi-iface
    option device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option encryption &lt;span class="s1"&gt;&amp;#39;psk2&amp;#39;&lt;/span&gt;
    option key &lt;span class="s1"&gt;&amp;#39;*****************&amp;#39;&lt;/span&gt;
    option mode &lt;span class="s1"&gt;&amp;#39;ap&amp;#39;&lt;/span&gt;
    option ssid &lt;span class="s1"&gt;&amp;#39;RepeaterAP&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-network"&gt;
&lt;h2&gt;2. Configure network&lt;/h2&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;/etc/config/network&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config interface &lt;span class="s1"&gt;&amp;#39;loopback&amp;#39;&lt;/span&gt;
    option ifname &lt;span class="s1"&gt;&amp;#39;lo&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.0.0.0&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option ifname &lt;span class="s1"&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;
    option force_link &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bridge&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ip6assign &lt;span class="s1"&gt;&amp;#39;60&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.10.1&amp;#39;&lt;/span&gt;    &lt;span class="c"&gt;# for relayd... requires 192.168.x.x address but not used by clients&lt;/span&gt;
    option gateway &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;    &lt;span class="c"&gt;# ip address of PrimaryAP&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.255.255.0&amp;#39;&lt;/span&gt;
    option dns &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;wwan&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.1.254&amp;#39;&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.255.255.0&amp;#39;&lt;/span&gt;
    option gateway &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;stabridge&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;relay&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;lan wwan&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.1.254&amp;#39;&lt;/span&gt;   &lt;span class="c"&gt;# static ip assigned from PrimaryAP address range&lt;/span&gt;

config switch
    option name &lt;span class="s1"&gt;&amp;#39;switch0&amp;#39;&lt;/span&gt;
    option reset &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option enable_vlan &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

config switch_vlan
    option device &lt;span class="s1"&gt;&amp;#39;switch0&amp;#39;&lt;/span&gt;
    option vlan &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option ports &lt;span class="s1"&gt;&amp;#39;0 1 2 3 4&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-dhcp"&gt;
&lt;h2&gt;3. Configure DHCP&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PrimaryAP&lt;/em&gt; will handle DHCP for the combined network. Sample &lt;tt class="docutils literal"&gt;/etc/config/dhcp&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config dhcp &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option interface &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option start &lt;span class="s1"&gt;&amp;#39;100&amp;#39;&lt;/span&gt;
    option limit &lt;span class="s1"&gt;&amp;#39;150&amp;#39;&lt;/span&gt;
    option leasetime &lt;span class="s1"&gt;&amp;#39;12h&amp;#39;&lt;/span&gt;
    option ignore &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

config dhcp &lt;span class="s1"&gt;&amp;#39;wan&amp;#39;&lt;/span&gt;
    option interface &lt;span class="s1"&gt;&amp;#39;wan&amp;#39;&lt;/span&gt;
    option ignore &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reboot"&gt;
&lt;h2&gt;4. Reboot&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PrimaryAP&lt;/em&gt; will handle firewall and dnsmasq for the combined network. Disable the services on &lt;em&gt;RepeaterAP&lt;/em&gt; to avoid conflicts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/firewall stop&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/firewall disable&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/dnsmasq stop&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/dnsmasq disable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot router:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK! Connect to the new &lt;em&gt;RepeaterAP&lt;/em&gt; and the device will be assigned an IP address on the &lt;em&gt;PrimaryAP&lt;/em&gt;'s now-extended network. All rules and services on &lt;em&gt;PrimaryAP&lt;/em&gt; will flow through to devices connected via &lt;em&gt;RepeaterAP&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;5. Helpful resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/wireless"&gt;wireless&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/network"&gt;network&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/dhcp"&gt;dhcp&lt;/a&gt; configs&lt;/li&gt;
&lt;li&gt;OpenWrt forum thread on &lt;a class="reference external" href="https://forum.openwrt.org/viewtopic.php?id=39077"&gt;bridged and simple repeater configurations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/recipes/relayclient"&gt;Routed Client with relayd (Pseudobridge)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 26 Jun 2015 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-06-26:openwrt-bridged-repeater.html</guid><category>openwrt</category><category>router</category><category>linux</category><category>network</category></item><item><title>Chromebook to Ubuntubook</title><link>http://www.circuidipity.com/c720-ubuntubook.html</link><description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Now running &lt;a class="reference external" href="http://www.circuidipity.com/c720-chromebook-to-jessiebook.html"&gt;Debian 'Jessie'&lt;/a&gt; on my Chromebook.&lt;/p&gt;
&lt;p&gt;Replace &lt;strong&gt;Chrome OS&lt;/strong&gt; permanently with &lt;strong&gt;Ubuntu 15.04 Linux&lt;/strong&gt; on the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="Ubuntu 15.04 Vivid Vervet" class="align-right" src="images/vivid-icon.png" style="width: 250px; height: 250px;" /&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Running a full-featured Linux on this little laptop is a delight: lightweight, several hours battery life, inexpensive, and snappy performance. I started with Debian, followed by &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu 14.04&lt;/a&gt; and &lt;a class="reference external" href="http://www.circuidipity.com/arch-install-encrypt.html"&gt;Arch&lt;/a&gt;, and now experimenting with Ubuntu's latest and greatest and the &lt;strong&gt;Unity&lt;/strong&gt; desktop.&lt;/p&gt;
&lt;p&gt;This device is available in a few different configurations. Mine is the non-touchscreen model &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C720-2848&lt;/span&gt;&lt;/tt&gt; with (non-expandable) &lt;strong&gt;2GB RAM&lt;/strong&gt; and a (user-replaceable) &lt;strong&gt;16GB SSD&lt;/strong&gt; &lt;a class="footnote-reference" href="#id8" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recovery-image"&gt;
&lt;h2&gt;0. Recovery Image&lt;/h2&gt;
&lt;p&gt;Create a recovery image of Chrome OS (my C720 is model &lt;tt class="docutils literal"&gt;PEPPY &lt;span class="pre"&gt;C6A-N3C-A7O&lt;/span&gt;&lt;/tt&gt;) to enable restoring the Chromebook to its default configuration. This will require a spare USB stick of 2GB or better:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Log into the Chromebook and let it auto update, as there sometimes are firmware updates... check the updating status in the browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://help&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Insert the USB stick, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://imageburner&lt;/span&gt;&lt;/tt&gt; and follow the directions to generate a recovery image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://support.google.com/chromebook/answer/1080595?hl=en"&gt;Create a Chromebook recovery image&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-install-media"&gt;
&lt;h2&gt;1. Prepare install media&lt;/h2&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/vivid/main/installer-amd64/current/images/netboot/mini.iso"&gt;64-bit 'Vivid Vervet' minimal installer&lt;/a&gt; and &lt;a class="reference external" href="https://help.ubuntu.com/community/Installation/FromUSBStick"&gt;flash the image&lt;/a&gt; to a USB stick. An alternative (my choice) is adding the image to a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt;. Using the minimal console installer (requires network connection) vs. the graphical &lt;a class="reference external" href="https://help.ubuntu.com/community/Ubuntu/GetUbuntu"&gt;Ubuntu installer&lt;/a&gt; provides more options during setup &lt;a class="footnote-reference" href="#id9" id="id2"&gt;[2]&lt;/a&gt; and downloads all the latest packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="seabios"&gt;
&lt;h2&gt;2. SeaBIOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.coreboot.org/SeaBIOS"&gt;SeaBIOS&lt;/a&gt; in combination with &lt;strong&gt;coreboot&lt;/strong&gt; provides an open-source legacy BIOS that enables access to the MBR and the ability to install an alternative OS on the Chromebook. All this good stuff involves jumping through a few simple hoops and not trembling in fear at the &amp;quot;scary white screen&amp;quot; that pops up at power up stating that the boot loader detects something is &lt;strong&gt;very very wrong&lt;/strong&gt; with the Chromebook and helpfully suggests pressing the spacebar to begin recovery. &lt;strong&gt;Do not press the spacebar&lt;/strong&gt; or the Ubuntu installation will be wiped from disk!&lt;/p&gt;
&lt;p&gt;There are 2 different methods for configuring SeaBIOS in preparation for installing Ubuntu. The first method uses a few simple commands in the Chrome OS shell to place the Chromebook into &lt;strong&gt;developer mode&lt;/strong&gt; and allow booting the USB install media and replacing Chrome OS with Ubuntu. The drawback is that scary screen appears at every boot and you must press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; to boot to legacy-mode and onward to GRUB and Ubuntu (and &lt;strong&gt;ignore&lt;/strong&gt; the helpful prompt to press spacebar and inadvertently begin the adventure of wiping clean the SSD).&lt;/p&gt;
&lt;p&gt;The second method involves setting new flags for the write-protected &lt;strong&gt;Google Binary Block&lt;/strong&gt; (GBB) in the device firmware. Delay at the boot screen can be reduced to a one second timeout and the legacy-mode BIOS set as the system default (no key combo required). Pressing the spacebar is disabled from doing any harm to Ubuntu (the Chromebook just beeps). The drawback is that it involves the (very simple) removal of the device's bottom cover and the temporary removal of the &lt;strong&gt;write-protect screw&lt;/strong&gt; from the motherboard to permit flashing new flags to the GBB... and this may void the Chromebook's warranty (one of the case screws lies underneath a sticker declaring the warranty void if disturbed).&lt;/p&gt;
&lt;p&gt;Experimenting with alternate OS installs on the Chromebook I first employed the developer mode method followed by the write-protect screw removal. I prefer configuring the device to default to legacy-mode BIOS but I have employed both methods successfully and describe their respective steps below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No guarantees&lt;/strong&gt; though... Hopefully you enjoy equal success!&lt;/p&gt;
&lt;div class="section" id="write-protect-screw-method"&gt;
&lt;h3&gt;2.1 Write-Protect Screw Method&lt;/h3&gt;
&lt;p&gt;Disconnect power. Turn the Chromebook over facing bottom up and remove the 13 screws (not missing the one hidden under the warranty sticker). Gently pry the case off starting with the seam where the display connects to device. It comes away pretty easy.&lt;/p&gt;
&lt;p&gt;This is what you see:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="C720 annotated innards" src="images/c720-chromebook-annotated-innards.png" style="width: 800px; height: 558px;" /&gt;
&lt;p class="caption"&gt;[ Image: &lt;a class="footnote-reference" href="#id10" id="id4"&gt;[3]&lt;/a&gt; The battery lock screw is #6 and the write-protect screw is #7 ].&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; This will &lt;strong&gt;wipe out&lt;/strong&gt; whatever is installed on the SSD:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the write-protect screw&lt;/li&gt;
&lt;li&gt;Close back cover using only the battery lock screw to hold in place&lt;/li&gt;
&lt;li&gt;Re-connect power, boot Chromebook and wait until it displays:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Chrome OS is missing or damaged.
Please insert a recovery USB stick or SD card.
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Insert USB recovery media prepared in Step 0 and it will proceed to restore Chrome OS and reboot&lt;/li&gt;
&lt;li&gt;At default Chrome OS &amp;quot;Welcome!&amp;quot; screen open a terminal &lt;tt class="docutils literal"&gt;CTRL+ALT+F2&lt;/tt&gt; (Right-arrow)&lt;/li&gt;
&lt;li&gt;Login as &lt;tt class="docutils literal"&gt;chronos&lt;/tt&gt; (no password), then enter &lt;tt class="docutils literal"&gt;sudo su&lt;/tt&gt; for superuser access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set new GBB flags using the &lt;tt class="docutils literal"&gt;set_gbb_flags.sh&lt;/tt&gt; script in Chrome OS. To enable short &lt;strong&gt;developer mode&lt;/strong&gt; screen (1 second timeout) followed by &lt;strong&gt;default legacy mode&lt;/strong&gt; boot use these flags:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GBB_FLAG_DEV_SCREEN_SHORT_DELAY 0×00000001
GBB_FLAG_FORCE_DEV_SWITCH_ON 0×00000008
GBB_FLAG_FORCE_DEV_BOOT_LEGACY 0×00000080
GBB_FLAG_DEFAULT_DEV_BOOT_LEGACY 0×00000400
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which adds up to running in the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/usr/share/vboot/bin/set_gbb_flags.sh 0x489
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shutdown with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# shutdown -h now&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and disconnect the power:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the bottom cover again and reinstall the write-lock screw to protect the BIOS&lt;/li&gt;
&lt;li&gt;Close cover and reinstall all the case screws&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Re-connect the power, insert the USB stick prepared in Step 1, and power up the Chromebook &lt;a class="footnote-reference" href="#id11" id="id5"&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="http://www.coreboot.org/pipermail/coreboot/2014-January/077083.html"&gt;Useful GBB flags&lt;/a&gt; for &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;another new free software machine&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-mode-method"&gt;
&lt;h3&gt;2.2 Developer Mode Method&lt;/h3&gt;
&lt;p&gt;The alternative to removing the write-protect screw above is to place the Chromebook into developer mode using the Chrome OS shell before booting the USB install media:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;With the Chromebook off... Hold down &lt;tt class="docutils literal"&gt;ESC+F3&lt;/tt&gt; (Refresh) keys and power on the device&lt;/li&gt;
&lt;li&gt;Invoke Recovery, and at the Recovery screen press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Device will prompt for confirmation, press &lt;tt class="docutils literal"&gt;ENTER&lt;/tt&gt; and the system reboots into developer mode&lt;/li&gt;
&lt;li&gt;Scary white boot screen appears and you need to press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt; to continue boot &lt;a class="footnote-reference" href="#id12" id="id6"&gt;[5]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enable the &lt;strong&gt;USB Boot&lt;/strong&gt; and &lt;strong&gt;Legacy BIOS&lt;/strong&gt; modes by opening the shell with &lt;tt class="docutils literal"&gt;Ctrl+Alt+T&lt;/tt&gt; and enter &lt;tt class="docutils literal"&gt;shell&lt;/tt&gt;. Set &lt;tt class="docutils literal"&gt;dev_boot_usb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dev_boot_legacy&lt;/tt&gt; to active:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_usb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert the USB stick prepared in Step 1, reboot the Chromebook and press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; at the boot screen to enter legacy boot mode.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.chromium.org/chromium-os"&gt;Chromium OS&lt;/a&gt; developer information for the &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook"&gt;Acer C720 Chromebook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-ubuntu"&gt;
&lt;h2&gt;3. Install Ubuntu&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook-install.html"&gt;visual screenshot tour&lt;/a&gt; of installing Ubuntu 14.04 - a &lt;a class="reference external" href="https://wiki.ubuntu.com/Releases"&gt;Long Term Support (LTS)&lt;/a&gt; release. Install steps remain the same for 15.04.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternative:&lt;/strong&gt; At the &lt;tt class="docutils literal"&gt;tasksel&lt;/tt&gt; stage select a different desktop: &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu (LXDE)&lt;/a&gt;, Xubuntu (XFCE), etc.&lt;/p&gt;
&lt;p&gt;Chromebook's SSD will be divided into 3 partitions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 is a 300MB &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda2 is a 1GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; partition using a &lt;strong&gt;random key&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;sda3 uses the remaining space as a LUKS encrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition using a &lt;strong&gt;passphrase&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="touchpad"&gt;
&lt;h2&gt;4. Touchpad&lt;/h2&gt;
&lt;p&gt;Ubuntu 15.04 installs Linux kernel &lt;tt class="docutils literal"&gt;3.19&lt;/tt&gt; with built-in support for the Chromebook's touchpad. Per-session modifications of touchpad settings can be made using &lt;tt class="docutils literal"&gt;synclient&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;synclient                 &lt;span class="c"&gt;# display current settings&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;synclient &lt;span class="nv"&gt;TapButton3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="c"&gt;# 3-finger tap = middle-click&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make any desired touchpad settings permanent create a configuration file in &lt;tt class="docutils literal"&gt;/etc/X11/xorg.conf.d&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/X11/xorg.conf.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/50-c720-touchpad.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify this file to adjust timeouts, add tap-mouse actions (2-finger tap = right-click, 3-finger tap = middle-click), and 2-finger scrolling.&lt;/p&gt;
&lt;p&gt;Sample config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Section &lt;span class="s2"&gt;&amp;quot;InputClass&amp;quot;&lt;/span&gt;
    Identifier      &lt;span class="s2"&gt;&amp;quot;touchpad peppy cyapa&amp;quot;&lt;/span&gt;
    MatchIsTouchpad &lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;
    MatchDevicePath &lt;span class="s2"&gt;&amp;quot;/dev/input/event*&amp;quot;&lt;/span&gt;
    MatchProduct    &lt;span class="s2"&gt;&amp;quot;cyapa&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerLow&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerHigh&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertEdgeScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;HorizTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaRightEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;850&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaLeftEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton1&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton2&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton3&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;
EndSection
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; My 3-finger middle-click option required a manual reset each session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Stop the Gnome Settings daemon from overiding &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;50-c720-touchpad.conf&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.settings-daemon.plugins.mouse active &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logout and back in. It works!&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/etc/X11/xorg.conf.d/50-c720-touchpad.conf"&gt;50-c720-touchpad.conf&lt;/a&gt;, and pages for &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Touchpad Synaptics&lt;/a&gt; and the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook#configuration"&gt;C720 Chromebook&lt;/a&gt; on &lt;a class="reference external" href="https://wiki.archlinux.org/"&gt;ArchWiki&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ssd"&gt;
&lt;h2&gt;5. SSD&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Swappiness"&gt;swappiness&lt;/a&gt; parameter controls the preference of the kernel to move processes out of physical memory to the swap partition. Range is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0-100&lt;/span&gt;&lt;/tt&gt;, default is set to &lt;tt class="docutils literal"&gt;60&lt;/tt&gt; and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use.&lt;/p&gt;
&lt;p&gt;Check the current swappiness value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /proc/sys/vm/swappiness
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To reduce writes on the SSD set a low value of &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; by setting &lt;tt class="docutils literal"&gt;vm.swappiness=1&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;/etc/sysctl.conf&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TRIM&lt;/strong&gt; optimizes SSD performance and is enabled by adding the &lt;tt class="docutils literal"&gt;discard&lt;/tt&gt; option to &lt;tt class="docutils literal"&gt;/etc/crypttab&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;. Ubuntu auto-magically configures &lt;tt class="docutils literal"&gt;crypttab&lt;/tt&gt; but &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt; needs to be set manually.&lt;/p&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;&lt;/span&gt;
/dev/mapper/sda3_crypt /               ext4    noatime,discard,errors&lt;span class="o"&gt;=&lt;/span&gt;remount-ro &lt;span class="m"&gt;0&lt;/span&gt;       1
&lt;span class="c"&gt;# /boot was on /dev/sda1 during installation&lt;/span&gt;
&lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;some_long_random_string&lt;span class="o"&gt;]&lt;/span&gt; /boot    ext4    noatime,discard         &lt;span class="m"&gt;0&lt;/span&gt;       2
/dev/mapper/sda2_crypt none            swap    sw,discard              &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After modifying &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt; update &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/boot/initrd.img-*&lt;/span&gt;&lt;/tt&gt; by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-initramfs -u -k all
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.linuxjournal.com/content/solid-state-drives-get-one-already"&gt;TRIM configuration on solid-state drives&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="suspend"&gt;
&lt;h2&gt;6. Suspend&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Suspend-and-resume generates a stream of errors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;1&lt;/span&gt; resume error -19
ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;2&lt;/span&gt; resume error -19
usb usb3-port1: over-current condition
usb usb3-port1: connect-debounce failed
usb usb3-port2: over-current condition
usb usb3-port2: connect-debounce failed
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and blocks the Chromebook from executing a proper restart/shutdown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/systemd/system-sleep/ehci-pci.sh&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id13" id="id7"&gt;[6]&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;/&lt;span class="nv"&gt;$2&lt;/span&gt; in
    pre/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Unbind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/unbind
    &lt;span class="p"&gt;;;&lt;/span&gt;
    post/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Bind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/bind
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and make it executable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chmod &lt;span class="m"&gt;755&lt;/span&gt; /lib/systemd/system-sleep/ehci-pci.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure boot options in &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash tpm_tis.force=1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... save the changes and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Suspend now works reliably when triggered from Ubuntu's shutdown menu or closing the lid and will resume the system with the desktop locked and a password prompt.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/lib/systemd/system-sleep/ehci-pci.sh"&gt;ehci-pci.sh&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="keyboard-shortcuts"&gt;
&lt;h2&gt;7. Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;Top row on the keyboard with the shortcut icons (brightness, volume, etc.) identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the Search key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as the &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Create keyboard shortcuts by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbacklight&lt;/tt&gt; - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with &lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xvkbd&lt;/tt&gt; - send characters to another client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys xbacklight pulseaudio-utils xvkbd
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="direction-brightness-volume-page-keys"&gt;
&lt;h3&gt;7.1 Direction, Brightness, Volume, Page Keys&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys -k
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the function keys to modify the sound and brightness settings by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ~/.xbindkeysrc&lt;/span&gt;

&lt;span class="c"&gt;# backward/forward&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Left&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F1

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Right&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F2

&lt;span class="c"&gt;# backlight decrease/increase&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xbacklight -dec 10&amp;quot;&lt;/span&gt;
F6
&lt;span class="s2"&gt;&amp;quot;xbacklight -inc 10&amp;quot;&lt;/span&gt;
F7

&lt;span class="c"&gt;# volume mute/decrease/increase&lt;/span&gt;
&lt;span class="c"&gt;# pactl - control a running pulseaudio server&lt;/span&gt;
&lt;span class="c"&gt;# pactl list sinks - retrieve info&lt;/span&gt;
&lt;span class="c"&gt;# on my c770 chromebook... single audio sink is &amp;#39;Sink #0&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# named &amp;#39;alsa_output.pci-0000_00_1b.0.analog-stereo&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-mute alsa_output.pci-0000_00_1b.0.analog-stereo toggle&amp;quot;&lt;/span&gt;
F8
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo -10%&amp;quot;&lt;/span&gt;
F9
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo +10%&amp;quot;&lt;/span&gt;
F10

&lt;span class="c"&gt;# page up/down, home, end&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Up]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Up

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Down]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Down

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Home]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Left

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[End]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Right
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the new key shortcuts by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ubuntu auto-detects &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;  and will run &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; on the next login.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/home/username/.xbindkeysrc"&gt;xbindkeysrc&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Xbindkeys"&gt;Xbindkeys&lt;/a&gt;, and another sample &lt;a class="reference external" href="https://github.com/alexpatel/dotfiles/blob/master/xbindkeysrc"&gt;Chromebook-friendly xbindkeysrc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="power-key"&gt;
&lt;h3&gt;7.2 Power Key&lt;/h3&gt;
&lt;p&gt;Power key in upper-right corner ignores any configuration in the window manager and triggers poweroff without delay when pressed (easy to do by accident as its positioned next to &lt;tt class="docutils literal"&gt;backspace&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;If you want to disable the power key edit &lt;tt class="docutils literal"&gt;/etc/systemd/logind.conf&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;HandlePowerKey=ignore&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wireless"&gt;
&lt;h2&gt;8. Wireless&lt;/h2&gt;
&lt;p&gt;There are a few settings to modify to improve performance of Chromebook's wireless chipset. Identify the card and parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i net
01:00.0 Network controller: Qualcomm Atheros AR9462 Wireless Network Adapter &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;modinfo ath9k &lt;span class="p"&gt;|&lt;/span&gt; grep parm
parm:           debug:Debugging mask &lt;span class="o"&gt;(&lt;/span&gt;uint&lt;span class="o"&gt;)&lt;/span&gt;
parm:           nohwcrypt:Disable hardware encryption &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           blink:Enable LED blink on activity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           btcoex_enable:Enable wifi-BT coexistence &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           bt_ant_diversity:Enable WLAN/BT RX antenna diversity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           ps_enable:Enable WLAN PowerSave &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           use_chanctx:Enable channel context &lt;span class="k"&gt;for&lt;/span&gt; concurrency &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;tt class="docutils literal"&gt;/etc/modprobe.d/ath9k.conf&lt;/tt&gt; with the following options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;options ath9k &lt;span class="nv"&gt;bt_ant_diversity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ps_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/etc/modprobe.d/ath9k.conf"&gt;ath9k.conf&lt;/a&gt;, &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k"&gt;ath9k wireless driver&lt;/a&gt; and &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k/btcoex"&gt;bluetooth coexistence&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;9. Helpful Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My former &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu 14.04 LTS install on the Chromebook&lt;/a&gt; and configuration (under &lt;tt class="docutils literal"&gt;upstart&lt;/tt&gt; init vs &lt;tt class="docutils literal"&gt;systemd&lt;/tt&gt; in the current 15.04)&lt;/li&gt;
&lt;li&gt;Arch Linux C720 installation with &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook"&gt;useful post-install details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Turn Chromebooks into &lt;a class="reference external" href="http://blog.codestarter.org/post/93985346780/how-we-turn-199-chromebooks-into-ubuntu-based-code"&gt;Ubuntu-based code learning machines for kids&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Device information &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/tree/master/config/c720_ubuntubook/doc"&gt;output of lshw, lspci, and lsusb&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Specifically in this instance, the Ubuntu console installer provides a random key option for the encrypted swap partition.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Image courtesy of &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook#TOC-Firmware"&gt;Chromium&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id11" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Whenever you remove battery power to the Chromebook (like opening up the case) the hardware clock on the motherboard resets to a future year (mine travelled to 2040). Providing a network connection is up during the Ubuntu installation the system should fetch a correct time from a NTP server. Otherwise fix the &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;fallout from an incorrect clock&lt;/a&gt; by re-mounting partitions read-only and correct filesystem timestamps using &lt;tt class="docutils literal"&gt;fsck&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id12" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Switching between developer and normal (non-developer) modes will remove user accounts and their associated information from the Chromebook.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id13" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Some HOWTOs talk about adding &lt;tt class="docutils literal"&gt;modprobe.blacklist=ehci_hcd,ehci_pci&lt;/tt&gt; but in Ubuntu they are compiled into the kernel.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 08 Jul 2015 10:18:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-05-02:c720-ubuntubook.html</guid><category>chromebook</category><category>ubuntu</category><category>linux</category></item><item><title>Configure an encrypted external USB hard drive in Linux</title><link>http://www.circuidipity.com/encrypt-external-drive.html</link><description>&lt;p&gt;Using an external USB hard drive is part of my personal backup plan (the other part is backing up to a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;home server&lt;/a&gt;). I actually use 2 multi-terabyte drives. One drive is in my possession and the other drive I store offsite at a friend's home. Periodically I swap the drives and update the data.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;To guard against loss or theft its a good idea to encrypt the hard drive. I prepare the device using &lt;strong&gt;Linux Unified Key Setup&lt;/strong&gt; (LUKS) and the &lt;tt class="docutils literal"&gt;cryptsetup&lt;/tt&gt; utility.&lt;/p&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Make careful note of the drive and partition labels. The following steps &lt;strong&gt;will destroy all data&lt;/strong&gt; currently stored on the drive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare"&gt;
&lt;h2&gt;0. Prepare&lt;/h2&gt;
&lt;p&gt;Download &lt;tt class="docutils literal"&gt;cryptsetup&lt;/tt&gt; if not already installed. Connect the external drive, leave it &lt;strong&gt;unmounted&lt;/strong&gt;, and make note of the device label (&lt;tt class="docutils literal"&gt;sdb&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;sdc&lt;/tt&gt; ...):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsblk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Optional:&lt;/strong&gt; Overwrite the device with zeros for added security. This can take several hours depending on storage size. &lt;strong&gt;Random number generation&lt;/strong&gt; is even more secure but takes much longer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;1. Partition&lt;/h2&gt;
&lt;p&gt;Create a single partition using a favourite partitioning utility (&lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;gparted&lt;/tt&gt;...) that fills the entire drive. Encrypt the partition and assign a password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksFormat /dev/sdX1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksOpen /dev/sdX1 sdX1_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="filesystem"&gt;
&lt;h2&gt;2. Filesystem&lt;/h2&gt;
&lt;p&gt;Install a filesystem (example: &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt;) &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and mount the partition to gain access to the storage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkfs.ext4 -E &lt;span class="nv"&gt;lazy_itable_init&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0,lazy_journal_init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; /dev/mapper/sdX1_crypt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mount -t ext4 /dev/mapper/sdX1_crypt /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before disconnecting the drive the partition must be unmounted and the encrypted device must be closed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo umount /mnt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksClose /dev/mapper/sdX1_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mountpoint"&gt;
&lt;h2&gt;3. Mountpoint&lt;/h2&gt;
&lt;p&gt;A file manager like &lt;tt class="docutils literal"&gt;nautilus&lt;/tt&gt; will auto-mount and unmount encrypted partitions. For crafting a backup script it is useful to assign a &lt;strong&gt;default mountpoint&lt;/strong&gt; to the encrypted partition... that is, whenever the USB drive is connected it will always be mounted to the same location.&lt;/p&gt;
&lt;p&gt;Mount the encrypted drive. Retrieve the UUID string for the encrypted partition, and create a custom mountpoint (example: &lt;tt class="docutils literal"&gt;/media/usb_crypt&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls /dev/disk/by-uuid/ &lt;span class="p"&gt;|&lt;/span&gt; grep dm-  &lt;span class="c"&gt;# outputs &amp;#39;&amp;lt;STRING&amp;gt; -&amp;gt; ../../dm-X&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /media/usb_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmount the drive and create an entry in &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; for the new custom mount point ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;STRING&amp;gt;   /media/usb_crypt    ext4    rw.users,noauto,noatime    &lt;span class="m"&gt;0&lt;/span&gt;   0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next time the drive is auto-mounted it will be assigned to &lt;tt class="docutils literal"&gt;/media/usb_crypt&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Writing &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt; with options &lt;tt class="docutils literal"&gt;lazy_itable_init=0,lazy_journal_init=0&lt;/tt&gt; initializes the inodes and journal at creation time vs a gradual process during mount times. If you wonder why your newly-formatted drive's activity LED is blinking away... install and run &lt;tt class="docutils literal"&gt;iotop&lt;/tt&gt; and take note of &lt;tt class="docutils literal"&gt;ext4lazyinit&lt;/tt&gt; and &lt;a class="reference external" href="https://www.thomas-krenn.com/en/wiki/Ext4_Filesystem#Lazy_Initialization"&gt;Lazy Initialization&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 01 May 2015 00:23:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-05-01:encrypt-external-drive.html</guid><category>luks</category><category>crypto</category><category>linux</category></item><item><title>Arch Linux installation with encrypted root + swap</title><link>http://www.circuidipity.com/arch-install-encrypt.html</link><description>&lt;p&gt;My notes for installing &lt;strong&gt;Arch Linux&lt;/strong&gt; that follow a condensed path through the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Beginners%27_guide"&gt;Beginner's Guide&lt;/a&gt; plus extra steps to configure LUKS-encrypted root + swap.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Target:&lt;/strong&gt; Acer &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C720-2848&lt;/span&gt;&lt;/tt&gt; Chromebook (16GB SSD) with &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Chrome OS removed and ready for full-featured Linux&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-media"&gt;
&lt;h2&gt;0. Install media&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.archlinux.org/download/"&gt;Download&lt;/a&gt; the combined 32+64bit installer and flash the image to a USB stick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;archlinux*-dual.iso &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="net-connection"&gt;
&lt;h2&gt;1. Net connection&lt;/h2&gt;
&lt;p&gt;Connect the USB stick and boot the installer. Identify the name of the device net interfaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ip link&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Chromebook wireless interface is &lt;tt class="docutils literal"&gt;wlp1s0&lt;/tt&gt;. Connect to an access point using &lt;tt class="docutils literal"&gt;netctl&lt;/tt&gt; and its interactive &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;wifi-menu&lt;/span&gt;&lt;/tt&gt; utility:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# wifi-menu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wipe-storage"&gt;
&lt;h2&gt;2. Wipe storage&lt;/h2&gt;
&lt;p&gt;Secure wipe storage before installation (16GB SSD took 22-23 minutes):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup open --type plain /dev/sdX container&lt;/span&gt;
&lt;span class="c"&gt;# dd if=/dev/zero of=/dev/mapper/container&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upon completion close the container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup close /dev/mapper/container&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Dm-crypt/Drive_preparation"&gt;Dm-crypt drive preparation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;3. Partition&lt;/h2&gt;
&lt;p&gt;Detect storage devices:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# lsblk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SSD identified as &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt;. Use &lt;tt class="docutils literal"&gt;gpt&lt;/tt&gt; to create a 4 partition layout:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 1M - BIOS boot partition (type: &lt;tt class="docutils literal"&gt;ef02&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;sda2 - 300M - boot (unencrypted)&lt;/li&gt;
&lt;li&gt;sda3 - 1GB - swap (encrypted)&lt;/li&gt;
&lt;li&gt;sda4 - remaining space - root (encrypted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Normally I create a separate partition for &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; but on smaller storage devices I make a single encrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; and a (required) unencrypted &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# gdisk /dev/sda&lt;/span&gt;
o &lt;span class="o"&gt;(&lt;/span&gt;new partition table&lt;span class="o"&gt;)&lt;/span&gt;
...
w
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="encrypted-root"&gt;
&lt;h2&gt;4. Encrypted root&lt;/h2&gt;
&lt;p&gt;Using above partition layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup -y -v luksFormat /dev/sda4&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup open /dev/sda4 cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# mkfs.ext4 /dev/mapper/cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/mapper/cryptroot /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="boot"&gt;
&lt;h2&gt;5. Boot&lt;/h2&gt;
&lt;p&gt;Setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkfs.ext4 /dev/sda2&lt;/span&gt;
&lt;span class="c"&gt;# mkdir /mnt/boot&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/sda2 /mnt/boot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install"&gt;
&lt;h2&gt;6. Install&lt;/h2&gt;
&lt;p&gt;Install the Arch base system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacstrap -i /mnt base base-devel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fstab"&gt;
&lt;h2&gt;7. Fstab&lt;/h2&gt;
&lt;p&gt;Generate a base &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; and modify:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/span&gt;
&lt;span class="c"&gt;# nano /mnt/etc/fstab&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="chroot"&gt;
&lt;h2&gt;8. Chroot&lt;/h2&gt;
&lt;p&gt;Chroot into the freshly-installed Arch base system to configure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# arch-chroot /mnt /bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="locale"&gt;
&lt;h2&gt;9. Locale&lt;/h2&gt;
&lt;p&gt;Configure a locale suitable for the region:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# nano /etc/locale.gen&lt;/span&gt;
...
en_CA.UTF-8 UTF-8
...
&lt;span class="c"&gt;# locale-gen&lt;/span&gt;
&lt;span class="c"&gt;# echo LANG=en_CA.UTF-8 &amp;gt; /etc/locale.conf&lt;/span&gt;
&lt;span class="c"&gt;# export LANG=en_CA.UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="time-zone"&gt;
&lt;h2&gt;10. Time zone&lt;/h2&gt;
&lt;p&gt;Configure local time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ln -s /usr/share/zoneinfo/Canada/Eastern /etc/localtime&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hardware-clock"&gt;
&lt;h2&gt;11. Hardware clock&lt;/h2&gt;
&lt;p&gt;Set the hardware clock to UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# hwclock --systohc --utc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hostname"&gt;
&lt;h2&gt;12. Hostname&lt;/h2&gt;
&lt;p&gt;Make a name for the new Arch installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# echo myhostname &amp;gt; /etc/hostname&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and modify &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#&amp;lt;ip-address&amp;gt; &amp;lt;hostname.domain.org&amp;gt; &amp;lt;hostname&amp;gt;&lt;/span&gt;
127.0.0.1 localhost.localdomain localhost myhostname
::1   localhost.localdomain localhost myhostname
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="network"&gt;
&lt;h2&gt;13. Network&lt;/h2&gt;
&lt;p&gt;Chromebook wireless interface is an Atheros &lt;tt class="docutils literal"&gt;AR9462&lt;/tt&gt; using the &lt;tt class="docutils literal"&gt;ath9k&lt;/tt&gt; kernel module. It does not require separate firmware.&lt;/p&gt;
&lt;p&gt;Install wireless tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacman -S iw wpa_supplicant dialog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Wait until after reboot&lt;/strong&gt; to configure interface with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;wifi-menu&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="initial-ramdisk"&gt;
&lt;h2&gt;14. Initial ramdisk&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/mkinitcpio.conf&lt;/tt&gt; by adding an &lt;tt class="docutils literal"&gt;encrypt&lt;/tt&gt; hook before &lt;tt class="docutils literal"&gt;filesystems&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;HOOKS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;... encrypt ... filesystems ...&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Re-generate the initramfs image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkinitcpio -p linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="password"&gt;
&lt;h2&gt;15. Password&lt;/h2&gt;
&lt;p&gt;Set root password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# passwd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bootloader"&gt;
&lt;h2&gt;16. Bootloader&lt;/h2&gt;
&lt;p&gt;Download GRUB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacman -S grub os-prober&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt; to handle encrypted root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cryptdevice=/dev/sda4:cryptroot&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install GRUB to storage device and auto-generate &lt;tt class="docutils literal"&gt;grub.cfg&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# grub-install --target=i386-pc --recheck /dev/sda&lt;/span&gt;
&lt;span class="c"&gt;# grub-mkconfig -o /boot/grub/grub.cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-non-root-encrypted-partitions"&gt;
&lt;h2&gt;17. Prepare non-root encrypted partitions&lt;/h2&gt;
&lt;p&gt;Add encrypted swap to &lt;tt class="docutils literal"&gt;/etc/crypttab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cryptswap    /dev/sda3   /dev/urandom    swap,cipher&lt;span class="o"&gt;=&lt;/span&gt;aes-cbc-essiv:sha256,size&lt;span class="o"&gt;=&lt;/span&gt;256
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and modify &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/dev/mapper/cryptswap    none    swap    sw      &lt;span class="m"&gt;0&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="unmount-and-reboot"&gt;
&lt;h2&gt;18. Unmount and reboot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# exit&lt;/span&gt;
&lt;span class="c"&gt;# umount /mnt/boot&lt;/span&gt;
&lt;span class="c"&gt;# umount /mnt&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup close /dev/mapper/cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Welcome to Arch. Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 26 Mar 2015 21:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-03-26:arch-install-encrypt.html</guid><category>arch</category><category>linux</category><category>luks</category><category>crypto</category><category>chromebook</category></item><item><title>Samsung CLP-310 Printer</title><link>http://www.circuidipity.com/samsung-clp-310-printer.html</link><description>&lt;p&gt;Connect a &lt;strong&gt;Samsung CLP-310&lt;/strong&gt; to server running Ubuntu 14.04 LTS and configure as printer for a home network.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="cups"&gt;
&lt;h2&gt;0. CUPS&lt;/h2&gt;
&lt;p&gt;Attach the Samsung device to server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dmesg -t
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
usb 1-2: new high-speed USB device number &lt;span class="m"&gt;6&lt;/span&gt; using ehci-pci
usb 1-2: New USB device found, &lt;span class="nv"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;04e8, &lt;span class="nv"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;328e
usb 1-2: New USB device strings: &lt;span class="nv"&gt;Mfr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2, &lt;span class="nv"&gt;SerialNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
usb 1-2: Product: CLP-310 Series
usb 1-2: Manufacturer: Samsung Electronics Co., Ltd.
usb 1-2: SerialNumber: 149CBAGS200219Y
usblp 1-2:1.0: usblp0: USB Bidirectional printer dev &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; alt &lt;span class="m"&gt;0&lt;/span&gt; proto &lt;span class="m"&gt;2&lt;/span&gt; vid 0x04E8 pid 0x328E
usbcore: registered new interface driver usblp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install CUPS (print server) and the &lt;a class="reference external" href="https://www.openprinting.org/printer/Samsung/Samsung-CLP-310"&gt;recommended driver&lt;/a&gt; &lt;tt class="docutils literal"&gt;splix&lt;/tt&gt; and grant (example) &lt;tt class="docutils literal"&gt;username&lt;/tt&gt; admin privileges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install cups cups-bsd printer-driver-splix
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lp
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lpadmin
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username scanner
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="printer-config"&gt;
&lt;h2&gt;1. Printer config&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/cups/cupsd.conf&lt;/tt&gt; to listen for connections from any device on the home network. Example for home server at ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Only listen for connections from the local machine.&lt;/span&gt;
&lt;span class="c"&gt;#Listen localhost:631&lt;/span&gt;
Listen *:631

&lt;span class="c"&gt;# Show shared printers on the local network.&lt;/span&gt;
Browsing On
BrowseLocalProtocols dnssd

&lt;span class="c"&gt;# Web interface setting...&lt;/span&gt;
WebInterface Yes

&lt;span class="c"&gt;# Restrict access to the server...&lt;/span&gt;
&amp;lt;Location /&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c"&gt;# Restrict access to the admin pages...&lt;/span&gt;
&amp;lt;Location /admin&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart CUPS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service cups restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Admin functions available at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://192.168.1.88:631/admin&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Mon, 09 Mar 2015 18:17:00 -0400</pubDate><guid>tag:www.circuidipity.com,2015-03-09:samsung-clp-310-printer.html</guid><category>ubuntu</category><category>linux</category><category>network</category></item></channel></rss>