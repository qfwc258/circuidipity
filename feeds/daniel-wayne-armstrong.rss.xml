<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Circuidipity</title><link>http://www.circuidipity.com/</link><description></description><atom:link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 19 Sep 2014 00:00:00 -0400</lastBuildDate><item><title>Ping Parade #3 -- Backup</title><link>http://www.circuidipity.com/pingparade3.html</link><description>&lt;p&gt;&lt;strong&gt;Make automatic backups of important stuff using a dash of shell scripting + rsync + SSH + cron!&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Backup" src="images/pingparade3-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;One of the advantages of setting up a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade1.html"&gt;Linux home server&lt;/a&gt; is providing a place to do that thing which everyone agrees is important but &lt;em&gt;very few do consistently&lt;/em&gt; (or even &lt;em&gt;once&lt;/em&gt;): &lt;strong&gt;backups&lt;/strong&gt;. Hopefully you never experience any loss of data... but &lt;em&gt;hope&lt;/em&gt; is not a plan! A little peace of mind can be gained in a few steps as I describe the simple backup solution I use to automatically mirror my laptop's home directory on my netbook server sitting on the local area network (LAN).&lt;/p&gt;
&lt;div class="section" id="step-0-ssh"&gt;
&lt;h2&gt;Step 0 - SSH&lt;/h2&gt;
&lt;p&gt;Configure &lt;strong&gt;OpenSSH&lt;/strong&gt; and &lt;strong&gt;keychain&lt;/strong&gt; as per &lt;a class="reference external" href="http://www.circuidipity.com/pingparade2.html"&gt;these instructions&lt;/a&gt;. Keychain makes it easy to use a &lt;strong&gt;passphrase-protected encryption key&lt;/strong&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ssh-agent"&gt;ssh-agent&lt;/a&gt; in automated scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-script"&gt;
&lt;h2&gt;Step 1 - Script&lt;/h2&gt;
&lt;p&gt;Login to the server and create a backup directory to hold the contents of $HOME: &lt;tt class="docutils literal"&gt;mkdir &lt;span class="pre"&gt;~/home-backup&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;On the local machine create a backup script - &lt;tt class="docutils literal"&gt;~/bin/backup_home.sh&lt;/tt&gt; - that makes use of the &lt;strong&gt;rsync&lt;/strong&gt; file-copying tool. A sample script includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;load the details of the &lt;strong&gt;SSH key&lt;/strong&gt; stored in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mirror&lt;/strong&gt; &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to the server's &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/home-backup&lt;/span&gt;&lt;/tt&gt; using options &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--archive&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;exclude&lt;/strong&gt; certain items from the backup like &lt;em&gt;cache&lt;/em&gt; and &lt;em&gt;trash&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;be careful nothing important is wiped out&lt;/strong&gt; using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt; ... run rsync in a console with option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; to test your settings before saving to a script ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Sample variables&lt;/span&gt;
&lt;span class="nv"&gt;ssh_agent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$HOME/.keychain/$HOSTNAME-sh&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--verbose --archive --delete&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;exclude_items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--exclude=*[Cc]ache* --exclude=*[Tt]rash*&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;local_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${HOME}/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;192.168.1.22&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${address}:~/home-backup&amp;quot;&lt;/span&gt;

. &lt;span class="nv"&gt;$ssh_agent&lt;/span&gt;
rsync &lt;span class="nv"&gt;$rsync_options&lt;/span&gt; &lt;span class="nv"&gt;$exclude_items&lt;/span&gt; &lt;span class="nv"&gt;$local_dir&lt;/span&gt; &lt;span class="nv"&gt;$destination&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the script executable and run manually at least once to test...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod 755 ~/bin/backup_home.sh
&lt;span class="nv"&gt;$ &lt;/span&gt;~/bin/backup_home.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-automate"&gt;
&lt;h2&gt;Step 2 - Automate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Cron&lt;/strong&gt; is a daemon that runs programs at specified times and I use the command &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; to setup my backup script to auto-run with the following parameters:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;perform a daily backup at 23:55&lt;/li&gt;
&lt;li&gt;run program silently in the background by redirecting output to &lt;tt class="docutils literal"&gt;/dev/null&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;any errors will be emailed to the user ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# To define the time you can provide concrete values for&lt;/span&gt;
&lt;span class="c"&gt;# minute (m), hour (h), day of month (dom), month (mon),&lt;/span&gt;
&lt;span class="c"&gt;# and day of week (dow) or use &amp;#39;*&amp;#39; in these fields (for &amp;#39;any&amp;#39;).#&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Output of the crontab jobs (including errors) is sent through&lt;/span&gt;
&lt;span class="c"&gt;# email to the user the crontab file belongs to (unless redirected).&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# For more information see the manual pages of crontab(5) and cron(8)&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;

&lt;span class="c"&gt;# Daily backup of $HOME to the netbook server&lt;/span&gt;
55 23 * * * &lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/backup_home.sh &amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For an alternate, more flexible rsync solution that accepts options at runtime &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/home2"&gt;check out this more complete script&lt;/a&gt; that I call using this &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/backup-home-server"&gt;second script&lt;/a&gt; executed by cron that includes logging (un)successful backup attempts to file.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 19 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-19:pingparade3.html</guid><category>network</category><category>shell</category><category>programming</category><category>linux</category></item><item><title>Stay relaxed and success will follow</title><link>http://www.circuidipity.com/20140918.html</link><description>&lt;p&gt;&lt;strong&gt;Bill Murray&lt;/strong&gt; on staying relaxed and how success will follow:&lt;/p&gt;
&lt;blockquote&gt;
Someone told me some secrets early on about living. You have to remind yourself that you can do the very best you can when you’re very, very relaxed. No matter what it is, no matter what your job is, the more relaxed you are, the better you are. That’s sort of why I got into acting. I realized that the more fun I had, the better I did it, and I thought, &lt;em&gt;Well, that’s a job I can be proud of&lt;/em&gt;. I’d be proud to have that job, if I had to go to work and say, ‘No matter what my condition or what my mood is, no matter how I feel about what’s going on in my life, if I can relax myself and enjoy what I’m doing and have fun with it, then I can do my job really well.’ And it’s changed my life, learning that. And it’s made me better at what I do. I’m not the greatest or anything. But I really enjoy what I do.&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.vulture.com/2014/09/7-steps-to-living-a-bill-murray-life.html"&gt;7 Steps to Living a Bill Murray Life, by Bill Murray&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 18 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-18:20140918.html</guid><category>quotes</category></item><item><title>Ping Parade #2 -- Keys</title><link>http://www.circuidipity.com/pingparade2.html</link><description>&lt;p&gt;&lt;strong&gt;Create cryptographic keys and disable password logins to make remote machines more secure.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="OpenSSH" src="images/pingparade2-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;&lt;strong&gt;OpenSSH&lt;/strong&gt; is a toolkit for securing communication with Unix-like remote machines and services and supports authenticating users with a public and private &lt;strong&gt;key pair&lt;/strong&gt;. Michael Lucas, author of &lt;a class="reference external" href="https://www.michaelwlucas.com/nonfiction/ssh-mastery"&gt;OpenSSH Mastery&lt;/a&gt;, describes the risk of passwords in SSH:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the last few years, a network of compromised machines dubbed the &amp;quot;Hail Mary Cloud&amp;quot; has scanned the Internet for SSH servers. When a member of this cloud finds an SSH server, it lets the other machines in the network know about it. The cloud then methodically tries possible usernames and passwords. One host on the network tries a few times, then another, then another. Blocking individual IP addresses is not a useful defense, because each address is used only a few times.&lt;/p&gt;
&lt;p&gt;Any one attempt has low odds of guessing successfully. The attempts are constant. They never end. Eventually [some automated attacker] will get lucky and break into your server. It might be tomorrow, or next year, but it _will_ happen. To stop these types of attacks, you can either use packet filtering to block public access to your SSH server, or you can eliminate passwords on your servers. User keys let you eliminate passwords.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is how to configure SSH key authentication between a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade1.html"&gt;home server&lt;/a&gt; and a client such as a laptop that are both running &lt;strong&gt;Debian Linux&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="step-0-install"&gt;
&lt;h2&gt;Step 0 - Install&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the server:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-server&lt;/span&gt;&lt;/tt&gt; and create an SSH configuration in the home directory of users who requires access to the system ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-server
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch ~/.ssh/authorized_keys &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 600 ~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;collect key fingerprints from the server...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_dsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_ecdsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and give &lt;tt class="docutils literal"&gt;keys.txt&lt;/tt&gt; to users to compare signature when connecting for the first time&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; edit &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt; adding specific users to be granted system access (&lt;strong&gt;disabling&lt;/strong&gt; all others by default) ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AllowUsers USERNAME1 USERNAME2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and restart SSH with the new config by running &lt;tt class="docutils literal"&gt;sudo service ssh restart&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-client&lt;/span&gt;&lt;/tt&gt; and create the SSH folder in the user home directory ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-client
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; create an entry in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; with the login options for a server - for example ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host tyrell
HostName 192.168.1.88
Port 23456
User gaff
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-generate-keys"&gt;
&lt;h2&gt;Step 1 - Generate keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;generate keys by running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-keygen&lt;/span&gt; &lt;span class="pre"&gt;-t&lt;/span&gt; rsa &lt;span class="pre"&gt;-C&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;$(whoami)&amp;#64;$(hostname)-$(date&lt;/span&gt; &lt;span class="pre"&gt;-I)&amp;quot;&lt;/span&gt;&lt;/tt&gt; and supply a passphrase&lt;/li&gt;
&lt;li&gt;upload the public key to the server and append it to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/authorized_keys&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/.ssh/id_rsa.pub | ssh SERVER &lt;span class="s2"&gt;&amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-test"&gt;
&lt;h2&gt;Step 2 - Test&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Graphical display managers like &lt;tt class="docutils literal"&gt;gdm&lt;/tt&gt; will automatically check a user account for SSH keys upon login. A pop-up box will prompt for the passphrase and the key will be added to the desktop session.&lt;/p&gt;
&lt;p&gt;If logging into a console, tell SSH that you have keys by running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-add&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-add
&lt;span class="nv"&gt;$ &lt;/span&gt;Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; /home/gaff/.ssh/id_rsa:
Identity added: /home/gaff/.ssh/id_rsa &lt;span class="o"&gt;(&lt;/span&gt;/home/gaff/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All SSH sessions launched from this console will access this user key stored in memory. Make sure to test the connection before disabling password logins ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh 192.168.1.88
Last login: Thu Sep 11 23:46:28 2014 from kambei.lan
&lt;span class="nv"&gt;$ &lt;/span&gt;uname -n
tyrell
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No request to enter a passphrase indicates SSH key authentication is properly configured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-disable-password-logins"&gt;
&lt;h2&gt;Step 3 - Disable password logins&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the server:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;edit &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;PubkeyAuthentication yes
ChallengeResponseAuthentication no
PasswordAuthentication no
UsePAM no
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart the SSH server &lt;tt class="docutils literal"&gt;sudo service ssh restart&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-key-management"&gt;
&lt;h2&gt;Step 4 - Key management&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.funtoo.org/Keychain"&gt;Keychain&lt;/a&gt; is an OpenSSH key manager. From the Debian package description:&lt;/p&gt;
&lt;blockquote&gt;
When keychain is run, it checks for a running ssh-agent, otherwise it starts one. It saves the ssh-agent environment variables to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;, so that subsequent logins and non-interactive shells such as cron jobs can source the file and make passwordless ssh connections.  In addition, when keychain runs, it verifies that the key files specified on the command-line are known to ssh-agent, otherwise it loads them, prompting you for a password if necessary.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install keychain&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;configure &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# setup keychain - ssh-agent management&lt;/span&gt;
keychain ~/.ssh/id_rsa
. ~/.keychain/&lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt;-sh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;flush all cached keys from memory with &lt;tt class="docutils literal"&gt;keychain &lt;span class="pre"&gt;--clear&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;if using &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; enable persistent SSH key management across sessions by editing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.tmux.conf&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;set&lt;/span&gt;-option -g update-environment &lt;span class="s2"&gt;&amp;quot;DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 12 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-12:pingparade2.html</guid><category>network</category><category>debian</category><category>linux</category></item><item><title>A growing something else</title><link>http://www.circuidipity.com/20140911.html</link><description>&lt;p&gt;After a tour of Google's headquaters, historian &lt;strong&gt;George Dyson&lt;/strong&gt; - quoted in James Barrat's &lt;em&gt;Our Final Invention: Artificial Intelligence and the End of the Human Era&lt;/em&gt; - had this to say about where an &lt;strong&gt;artificial superintelligence&lt;/strong&gt; might take root:&lt;/p&gt;
&lt;blockquote&gt;
For thirty years I have been wondering, what indication of its existence might we expect from a true AI? Certainly not any explicit revelation, which might spark a movement to pull the plug. Anomalous accumulation or creation of wealth might be a sign, or an unquenchable thirst for raw information, storage space, and processing cycles, or a concerted attempt to secure an uninterrupted, autonomous power supply. But the real sign, I suspect, would be a circle of cheerful, contented, intellectually and physically well-nourished people surrounding the AI. There wouldn't be any need for True Believers, or the downloading of human brains or anything sinister like that: just a gradual, gentle, pervasive and mutually beneficial contact between us and a growing something else. This remains a nontestable hypothesis, for now.&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 11 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-11:20140911.html</guid><category>quotes</category><category>AI</category></item><item><title>Happier China Spy Keys</title><link>http://www.circuidipity.com/20140909.html</link><description>&lt;p&gt;&lt;strong&gt;Latest books feeding my ((^_^)) ...&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="rig columns-4"&gt;
    &lt;li&gt;
        &lt;img src="images/books1-1-thumb.jpg" alt="10percent Happier" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-2-thumb.jpg" alt="Age of Ambition" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-3-thumb.jpg" alt="A Spy Among Friends" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-4-thumb.jpg" alt="SSH Mastery" /&gt;&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;span class="booktitle"&gt;10% Happier: How I Tamed the Voice in My Head, Reduced Stress Without Losing My Edge, and Found Self-Help That Actually Works - A True Story&lt;/span&gt; by Dan Harris (It Books)&lt;/p&gt;
&lt;p&gt;ABC correspondent Dan Harris takes a sceptical and very personal odyssey through the frontiers of self-help and neuroscience and discovers the power of Buddhist meditation and the &amp;quot;self-interested case for not being a dick&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; &lt;span class="booktitle"&gt;Age of Ambition: Chasing Fortune, Truth, and Faith in the New China&lt;/span&gt; by Evan Osnos (Farrar, Straus and Giroux)&lt;/p&gt;
&lt;p&gt;Communist China has lifted more people out of poverty in less time than any other society in history, and the lives of ordinary Chinese portrayed here hustle up more questions than answers (good!) about personal ambition inside an authoritarian state and sacrifices being made to build the world's largest economy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; &lt;span class="booktitle"&gt;A Spy Among Friends: Kim Philby and the Great Betrayal&lt;/span&gt; by Ben Macintyre (Crown)&lt;/p&gt;
&lt;p&gt;British spymaster and Soviet double-agent Philby's long-running Cold War act of betrayal ultimately gives the impression that the man was playing &lt;strong&gt;everybody&lt;/strong&gt; as part of his own personal game, and in the end proved too clever by half with his &amp;quot;defection&amp;quot; more a case of push than escape.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; &lt;span class="booktitle"&gt;SSH Mastery: OpenSSH, Putty, Tunnels and Keys&lt;/span&gt; by Michael W. Lucas (Tilted Windmill Press)&lt;/p&gt;
&lt;p&gt;OpenSSH is a toolkit for securing communication with Unix-like remote machines and services and this book does an excellent job getting you started and describing SSH best practices such as replacing passwords with encryption keys.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Tue, 09 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-09:20140909.html</guid><category>books</category><category>buddhism</category><category>meditation</category><category>health</category><category>china</category><category>history</category><category>espionage</category><category>biography</category><category>network</category><category>linux</category></item><item><title>Ping Parade #1 -- Repurpose</title><link>http://www.circuidipity.com/pingparade1.html</link><description>&lt;p&gt;&lt;strong&gt;Give new life to an old netbook or laptop as a Linux home server.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="netbook server" src="images/pingparade1-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;Running your own Linux home server is a fun learning experience and offers several advantages.&lt;/p&gt;
&lt;p&gt;It is cheap if you already have a spare machine. Or search for inexpensive, second-hand netbooks now that the short-lived craze for these lightweight devices has well and truly passed. An old netbook or laptop - retired in favour of more current and powerful machines - can still deliver plenty of &lt;em&gt;oomph&lt;/em&gt; for running a personal server. Netbooks are frugal with power and come equipped with multiple network interfaces and their own built-in UPS/battery! I have been using an Asus 900HA netbook equipped with 1GM RAM and (user-replaced) 500GB hard drive for the past few years as a 24/7 home server.&lt;/p&gt;
&lt;p&gt;A stable Linux distribution can be installed on the device and provide ongoing services such as printing, hosting torrents or websites, and file backups. &lt;a class="reference external" href="http://www.debian.org"&gt;Debian GNU/Linux&lt;/a&gt; is an operating system created by volunteers of one of the largest and longest-running free software projects in the world. More than a hundred other Linux distributions like &lt;a class="reference external" href="http://www.circuidipity.com/ubuntu-trusty-install.html"&gt;Ubuntu&lt;/a&gt; build their edifices on solid Debian &lt;em&gt;awesomesauce&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;There are 3 Debian &lt;strong&gt;release branches&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;stable&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;testing&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;unstable&lt;/tt&gt; - and the current stable branch goes by the name &lt;strong&gt;wheezy&lt;/strong&gt;. I use the &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;minimal install image&lt;/a&gt; to create a &lt;strong&gt;lightweight, console-only&lt;/strong&gt; base configuration that can be customized for various tasks.&lt;/p&gt;
&lt;p&gt;Below is a visual walk-through of a sample Debian home server setup that makes use of an entire storage device divided into &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; partitions.&lt;/p&gt;
&lt;div class="section" id="step-0-installer"&gt;
&lt;h2&gt;Step 0 - Installer&lt;/h2&gt;
&lt;p&gt;Download a &lt;a class="reference external" href="http://ftp.us.debian.org/debian/dists/stable/main/installer-i386/current/images/netboot/mini.iso"&gt;Debian mini.iso&lt;/a&gt; and burn the image to a CD or &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;prepare a USB boot device&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-go"&gt;
&lt;h2&gt;Step 1 - Go!&lt;/h2&gt;
&lt;img alt="Install" class="align-center" src="images/screenshot/netbookServer/01.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Language" class="align-center" src="images/screenshot/netbookServer/02.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Location" class="align-center" src="images/screenshot/netbookServer/03.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure Keyboard" class="align-center" src="images/screenshot/netbookServer/04.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Hostname" class="align-center" src="images/screenshot/netbookServer/05.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Domain" class="align-center" src="images/screenshot/netbookServer/06.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror Country" class="align-center" src="images/screenshot/netbookServer/07.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror archive" class="align-center" src="images/screenshot/netbookServer/08.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror Directory" class="align-center" src="images/screenshot/netbookServer/09.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Proxy" class="align-center" src="images/screenshot/netbookServer/10.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Root password" class="align-center" src="images/screenshot/netbookServer/11.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify password" class="align-center" src="images/screenshot/netbookServer/12.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Full Name" class="align-center" src="images/screenshot/netbookServer/13.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Username" class="align-center" src="images/screenshot/netbookServer/14.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="User password" class="align-center" src="images/screenshot/netbookServer/15.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify password" class="align-center" src="images/screenshot/netbookServer/16.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select time zone" class="align-center" src="images/screenshot/netbookServer/17.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-partitions"&gt;
&lt;h2&gt;Step 2 - Partitions&lt;/h2&gt;
&lt;p&gt;In the example below I create 3 partitions on the disk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 is a 10GB &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda5 is a 1GB &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda6 uses remaining space as a &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; partition (useful backup location for user files)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Partitioning method" class="align-center" src="images/screenshot/netbookServer/18.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition disks" class="align-center" src="images/screenshot/netbookServer/19.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition table" class="align-center" src="images/screenshot/netbookServer/20.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/netbookServer/21.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New Partition" class="align-center" src="images/screenshot/netbookServer/22.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/netbookServer/23.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Primary partition" class="align-center" src="images/screenshot/netbookServer/24.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/netbookServer/25.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Setting &lt;em&gt;Mount options&lt;/em&gt; to &lt;em&gt;noatime&lt;/em&gt; decreases write operations and boosts drive speed.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Mount options" class="align-center" src="images/screenshot/netbookServer/26.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="noatime" class="align-center" src="images/screenshot/netbookServer/27.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/netbookServer/28.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/netbookServer/29.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/netbookServer/30.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/netbookServer/31.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/netbookServer/32.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/netbookServer/33.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Use as" class="align-center" src="images/screenshot/netbookServer/34.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Swap area" class="align-center" src="images/screenshot/netbookServer/35.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done with partition" class="align-center" src="images/screenshot/netbookServer/36.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/netbookServer/37.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/netbookServer/38.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/netbookServer/39.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/netbookServer/40.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount options" class="align-center" src="images/screenshot/netbookServer/41.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="noatime" class="align-center" src="images/screenshot/netbookServer/42.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;&lt;strong&gt;Reserved blocks&lt;/strong&gt; can be used by privileged system processes to write to disk - useful if a full filesystem blocks users from writing - and reduce disk fragmentation. On large, non-root partitions extra space can be gained by reducing the 5% reserve set aside by Debian to 1%.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Reserved blocks" class="align-center" src="images/screenshot/netbookServer/43.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Percent reserved" class="align-center" src="images/screenshot/netbookServer/44.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up the partition" class="align-center" src="images/screenshot/netbookServer/45.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish partitioning" class="align-center" src="images/screenshot/netbookServer/46.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Write changes to disk" class="align-center" src="images/screenshot/netbookServer/47.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-install-packages-and-reboot"&gt;
&lt;h2&gt;Step 3 - Install packages and reboot&lt;/h2&gt;
&lt;img alt="Popularity-contest" class="align-center" src="images/screenshot/netbookServer/48.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Select only &lt;strong&gt;[*] Standard system utilities&lt;/strong&gt; if you wish to start with a minimal, console-only base configuration ready for further customization. The task menu can be accessed post-install by running &lt;tt class="docutils literal"&gt;tasksel&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Software selection" class="align-center" src="images/screenshot/netbookServer/49.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB" class="align-center" src="images/screenshot/netbookServer/50.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish install" class="align-center" src="images/screenshot/netbookServer/51.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB menu" class="align-center" src="images/screenshot/netbookServer/52.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Login" class="align-center" src="images/screenshot/netbookServer/53.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-static-network-interface"&gt;
&lt;h2&gt;Step 4 - Static network interface&lt;/h2&gt;
&lt;p&gt;For a home server that is going to stay put in one location its a good idea to configure the device with a static network interface. Log in as root and run &lt;tt class="docutils literal"&gt;nano /etc/network/interfaces&lt;/tt&gt; to configure (in example below) the ethernet port with a static address...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# The loopback network interface&lt;/span&gt;
auto lo
iface lo inet loopback

&lt;span class="c"&gt;# The primary network interface&lt;/span&gt;
auto eth0
iface eth0 inet static
    address 192.168.1.2
    netmask 255.255.255.0
    gateway 192.168.1.1  &lt;span class="c"&gt;# home router address&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-5-post-install-configuration"&gt;
&lt;h2&gt;Step 5 - Post-install configuration&lt;/h2&gt;
&lt;p&gt;I have created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/debian-post-install-main.sh"&gt;post-install shell script&lt;/a&gt; that can be used to configure tracking of Debian's stable, testing, or unstable branch with the option of installing the &lt;strong&gt;Openbox&lt;/strong&gt; window manager or (more suitable for a server setup) sticking with a console-only environment.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Fri, 05 Sep 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-09-05:pingparade1.html</guid><category>network</category><category>debian</category><category>linux</category></item><item><title>Modify the default boot order in GRUB</title><link>http://www.circuidipity.com/20140831.html</link><description>&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/c720-sidbook.html"&gt;Chromebook running Debian&lt;/a&gt; requires a less-than-recent kernel (3.13.10) that supports &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720_sidbook/scripts/c720-kernel-mods.sh"&gt;compiling modules&lt;/a&gt; for the laptop's touchpad. After installing a kernel retrieved from &lt;a class="reference external" href="http://snapshot.debian.org"&gt;snapshot.debian.org&lt;/a&gt; the GRUB boot manager auto-generates a menuentry for the new kernel but defaults to booting the most recent kernel available.&lt;/p&gt;
&lt;p&gt;This is how I changed the GRUB boot order to default to my touchpad-friendly kernel.&lt;/p&gt;
&lt;div class="section" id="step-0-install-a-less-than-current-debian-packaged-kernel"&gt;
&lt;h2&gt;Step 0 - Install a (less-than-current) Debian-packaged kernel&lt;/h2&gt;
&lt;p&gt;I am running Debian's &lt;em&gt;sid&lt;/em&gt; (unstable) branch and the 3.13.X kernel is no longer available in the package manager. I download the kernel headers and image and install the packages using &lt;tt class="docutils literal"&gt;dpkg&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget http://snapshot.debian.org/archive/debian/20140320T042639Z/pool/main/l/linux-tools/linux-kbuild-3.13_3.13.6-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i linux-kbuild-3.13_3.13.6-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;wget http://snapshot.debian.org/archive/debian/20140416T101543Z/pool/main/l/linux/linux-headers-3.13-1-common_3.13.10-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i linux-headers-3.13-1-common_3.13.10-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;wget http://snapshot.debian.org/archive/debian/20140416T101543Z/pool/main/l/linux/linux-headers-3.13-1-amd64_3.13.10-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i linux-headers-3.13-1-amd64_3.13.10-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;wget http://snapshot.debian.org/archive/debian/20140416T101543Z/pool/main/l/linux/linux-image-3.13-1-amd64_3.13.10-1_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i linux-image-3.13-1-amd64_3.13.10-1_amd64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A menuentry for the new kernel is auto-generated in &lt;tt class="docutils literal"&gt;/boot/grub/grub.cfg&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-retrieve-the-kernel-menuentry"&gt;
&lt;h2&gt;Step 1 - Retrieve the kernel menuentry&lt;/h2&gt;
&lt;p&gt;Inside &lt;tt class="docutils literal"&gt;grub.cfg&lt;/tt&gt; there is an option for &lt;tt class="docutils literal"&gt;submenu 'Advanced options for Debian GNU/Linux'&lt;/tt&gt; and beneath it multiple menuentries for installed kernels and boot options. Using my Chromebook's 3.13.10 kernel as an example the relevant entry is ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;menuentry &lt;span class="s1"&gt;&amp;#39;Debian GNU/Linux, with Linux 3.13-1-amd64&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will be designated as the new default kernel to boot.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-set-default-kernel"&gt;
&lt;h2&gt;Step 2 - Set default kernel&lt;/h2&gt;
&lt;p&gt;Open &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt; in an editor and modify &lt;tt class="docutils literal"&gt;GRUB_DEFAULT=&lt;/tt&gt; (set to '0' or most recent by default) to the new desired boot kernel. In the case of my Chromebook I include the submenu + menuentry in the modified setting ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Advanced options for Debian GNU/Linux&amp;gt;Debian GNU/Linux, with Linux 3.13-1-amd64&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;update-grub&lt;/span&gt;&lt;/tt&gt; to generate a new config and reboot. At the GRUB splash screen the &lt;tt class="docutils literal"&gt;Advanced options for Debian GNU&lt;/tt&gt; menu will be the new default and the designated kernel will load.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Sun, 31 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-08-31:20140831.html</guid><category>debian</category><category>linux</category><category>chromebook</category></item><item><title>Linux post-install configuration scripts</title><link>http://www.circuidipity.com/linux-post-install.html</link><description>&lt;p&gt;Scripts to configure a fresh installation of Debian GNU/Linux.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/debian-post-install-main.sh"&gt;debian-post-install-main.sh&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Track the &lt;em&gt;wheezy&lt;/em&gt; (stable), &lt;em&gt;jessie&lt;/em&gt; (testing), or &lt;em&gt;sid&lt;/em&gt; (unstable) branch with the option of installing the lightweight Openbox window manager + extra apps suitable for a desktop environment.&lt;/p&gt;
&lt;p&gt;See: &lt;a class="reference external" href="http://www.circuidipity.com/install-debian-wheezy-screenshot-tour.html"&gt;Debian Wheezy Minimal Install&lt;/a&gt; and &lt;a class="reference external" href="http://www.circuidipity.com/grml-debootstrap.html"&gt;Install Debian using grml-debootstrap&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/c720-sidbook-post-install-main.sh"&gt;c720-sidbook-post-install-main.sh&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Configures the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt; to track Debian's &lt;em&gt;sid&lt;/em&gt; branch and installs Openbox.&lt;/p&gt;
&lt;p&gt;See: &lt;a class="reference external" href="http://www.circuidipity.com/c720-sidbook.html"&gt;From Chromebook to Sidbook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;Download the contents of &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install"&gt;linux-post-install&lt;/a&gt; (github.com/vonbrownie), navigate to the folder, and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;SCRIPTS_LOCATION
&lt;span class="gp"&gt;$&lt;/span&gt; sudo ./SCRIPT-post-install-main.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 27 Aug 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-08-27:linux-post-install.html</guid><category>debian</category><category>linux</category><category>chromebook</category><category>shell</category><category>programming</category></item><item><title>Ship or sails adapted to the heavenly breezes</title><link>http://www.circuidipity.com/heavenly-breezes.html</link><description>&lt;p&gt;&lt;strong&gt;Johannes Kepler&lt;/strong&gt; in a letter to &lt;strong&gt;Galileo Galilei&lt;/strong&gt; - &lt;em&gt;Conversation with the Messenger from the Stars&lt;/em&gt; - dated 19 April 1610:&lt;/p&gt;
&lt;blockquote&gt;
As soon as somebody demonstrates the art of flying, settlers from our species of man will not be lacking [on the Moon and Jupiter]... Who would have believed that a huge ocean could be crossed more peacefully and safely than the the narrow expanse of the Adriatic, the Baltic Sea or the English Channel? Provide ship or sails adapted to the heavenly breezes, and there will be some who will not fear even that void [of space]... So, for those who will come shortly to attempt this journey, let us establish the astronomy: Galileo, you of Jupiter, I of the Moon.&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Thu, 10 Jul 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-07-10:heavenly-breezes.html</guid><category>quotes</category><category>space</category></item><item><title>Increase RAM available to Raspberry Pi CPU</title><link>http://www.circuidipity.com/pi-memory-split.html</link><description>&lt;p&gt;&lt;strong&gt;Raspberry Pi Model B Rev 2&lt;/strong&gt; has 512MB RAM that is partitioned between the CPU and the GPU. If the Pi is working as a headless server or the Pi desktop is being accessed via &lt;a class="reference external" href="http://www.raspberrypi.org/documentation/remote-access/vnc/"&gt;VNC&lt;/a&gt; (which doesn't utilize the GPU) the &lt;em&gt;memory split&lt;/em&gt; between the two processors can be altered to assign more memory to the CPU for running applications.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The &lt;strong&gt;Pi Camera Module&lt;/strong&gt; requires a minimum of 128MB RAM assigned to the GPU.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Default GPU memory on Raspbian is set to 64MB and the minimum recommended to ensure proper operation is 16MB. To modify GPU memory to 16MB either:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;edit &lt;tt class="docutils literal"&gt;/boot/config.txt&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;gpu_mem=16&lt;/tt&gt;; or&lt;/li&gt;
&lt;li&gt;run &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;raspi-config&lt;/span&gt;&lt;/tt&gt; and select &lt;strong&gt;&amp;quot;8 Advanced Options -&amp;gt; A3 Memory Split&amp;quot;&lt;/strong&gt; and modify &lt;strong&gt;64&lt;/strong&gt; to &lt;strong&gt;16&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Save the change, reboot the Pi, and enjoy the CPU memory boost!&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://elinux.org/RPi_config.txt"&gt;RPiconfig&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wayne Armstrong</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0400</pubDate><guid>tag:www.circuidipity.com,2014-07-09:pi-memory-split.html</guid><category>raspberry pi</category><category>raspbian</category><category>linux</category></item></channel></rss>