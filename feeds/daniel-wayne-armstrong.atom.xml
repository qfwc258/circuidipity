<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.atom.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2015-07-03T19:27:00-04:00</updated><entry><title>Minimal Raspbian Jessie</title><link href="http://www.circuidipity.com/minimal-raspbian-jessie.html" rel="alternate"></link><updated>2015-07-03T19:27:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-07-03:minimal-raspbian-jessie.html</id><summary type="html">&lt;p&gt;Setup a minimal &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspbian.html"&gt;Raspbian&lt;/a&gt; configuration on the &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspberry-pi.html"&gt;Raspberry Pi&lt;/a&gt; using &lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst"&gt;raspbian-ua-netinst&lt;/a&gt; (ideal start for a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;home server&lt;/a&gt;) with the latest packages from &lt;a class="reference external" href="http://www.circuidipity.com/tag-debian.html"&gt;Debian&lt;/a&gt; &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;The netinstaller runs unattended (no display/keyboard required) with the pre-configured option of installing rootfs to external USB storage. Upon completion the Pi reboots with DHCP and OpenSSH for remote access.&lt;/p&gt;
&lt;p&gt;I put my plan in motion using:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;8GB microSD card&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;raspbian-ua-netinst&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-microsd"&gt;
&lt;h2&gt;0. Prepare the microSD&lt;/h2&gt;
&lt;p&gt;MicroSD card is prepared on a host running Debian. &lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst/releases/"&gt;Download&lt;/a&gt; the latest &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-ua-netinst-vX.X.X.img.xz&lt;/span&gt;&lt;/tt&gt; and flash the image to the card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# xzcat /path/to/raspbian-ua-netinst-&amp;lt;latest-version-number&amp;gt;.img.xz &amp;gt; /dev/sdX &amp;amp;&amp;amp; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="customize-the-install-optional"&gt;
&lt;h2&gt;1. Customize the install (optional)&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/debian-pi/raspbian-ua-netinst#installer-customization"&gt;Default settings&lt;/a&gt; for the netinstaller can be customized by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; in the root directory of the newly-prepared microSD. Remove newly-formatted card, re-insert, mount &lt;tt class="docutils literal"&gt;sdX1&lt;/tt&gt;, add the config.&lt;/p&gt;
&lt;p&gt;Add only the settings to be changed from their defaults (example):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;vim,tmux
&lt;span class="nv"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MyHostname
&lt;span class="nv"&gt;bootsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+256M
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A second &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;post-install.txt&lt;/span&gt;&lt;/tt&gt; shell script can also be created alongside &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;installer-config.txt&lt;/span&gt;&lt;/tt&gt; that will run after installation is complete but before the Pi reboots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-and-configure"&gt;
&lt;h2&gt;2. Install and configure&lt;/h2&gt;
&lt;p&gt;Insert microSD in the Pi and power up. Netinstaller typically runs under 15 minutes &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; to setup a base configuration before rebooting the Pi.&lt;/p&gt;
&lt;p&gt;SSH into the newly-configured Pi (default &lt;tt class="docutils literal"&gt;login: root&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;password: raspbian&lt;/tt&gt;). Details of the install are logged in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/var/log/raspbian-ua-netinst.log&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Configure &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a new root password: &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;default locale: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;timezone: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;create 1GB swap file: &lt;tt class="docutils literal"&gt;dd &lt;span class="pre"&gt;if=/dev/zero&lt;/span&gt; &lt;span class="pre"&gt;of=/swap&lt;/span&gt; bs=1M count=1024 &amp;amp;&amp;amp; mkswap /swap&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable swap file at boot: &lt;tt class="docutils literal"&gt;echo &amp;quot;/swap none swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;enable hardware random number generator: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;-y&lt;/span&gt; install &lt;span class="pre"&gt;rng-tools&lt;/span&gt; &amp;amp;&amp;amp; echo &lt;span class="pre"&gt;&amp;quot;bcm2708-rng&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/modules&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;add new user: &lt;tt class="docutils literal"&gt;adduser USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrade"&gt;
&lt;h2&gt;3. Upgrade&lt;/h2&gt;
&lt;p&gt;Stable release of Raspbian (2015-07-03) is currently built on older Debian &lt;tt class="docutils literal"&gt;wheezy&lt;/tt&gt; packages. Upgrade to the &lt;tt class="docutils literal"&gt;jessie/stable&lt;/tt&gt; branch by first modifying &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://mirrordirector.raspbian.org/raspbian jessie main contrib non-free firmware rpi&amp;quot; &amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="c"&gt;# echo &amp;quot;deb http://archive.raspbian.org/raspbian jessie main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update the package lists and upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apt-get update &amp;amp;&amp;amp; apt-get -y dist-upgrade &amp;amp;&amp;amp; apt-get -y autoremove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;First attempt (unattended upgrade straight to &lt;tt class="docutils literal"&gt;jessie&lt;/tt&gt;) took 236min! Second attempt (no custom config) took 112min.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I poked around to see if there was something wonky with the microSD... first using &lt;tt class="docutils literal"&gt;badlocks&lt;/tt&gt; (read-only test):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# badblocks -vs /dev/sdb&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
79434
79435
79436
79437
&lt;span class="k"&gt;done&lt;/span&gt;
Pass completed, &lt;span class="m"&gt;6424&lt;/span&gt; bad blocks found. &lt;span class="o"&gt;(&lt;/span&gt;6424/0/0 errors&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second test was creating/writing an image to the card (see &lt;a class="reference external" href="http://projects.nuschkys.net/2012/05/15/testing-a-new-sd-card-under-linux/"&gt;&amp;quot;Testing a new SD card under Linux&amp;quot;&lt;/a&gt;) but it bombed right away:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# dd if=/dev/urandom of=test_sd.tmp bs=1024 count=8000000&lt;/span&gt;
8000000+0 records in
8000000+0 records out
&lt;span class="m"&gt;8192000000&lt;/span&gt; bytes &lt;span class="o"&gt;(&lt;/span&gt;8.2 GB&lt;span class="o"&gt;)&lt;/span&gt; copied, 597.98 s, 13.7 MB/s
&lt;span class="c"&gt;# dd if=test_sd.tmp of=/dev/sdb bs=1024 count=8000000&lt;/span&gt;
dd: error writing ‘/dev/sdb’: Input/output error
73017+0 records in
73016+0 records out
&lt;span class="m"&gt;74768384&lt;/span&gt; bytes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;75&lt;/span&gt; MB&lt;span class="o"&gt;)&lt;/span&gt; copied, 44.9678 s, 1.7 MB/s
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conclusion: &lt;em&gt;definitely&lt;/em&gt; wonky. :-) Replace with a good microSD and install took 12min.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/scripts/raspbian-post-install.sh"&gt;post-install script&lt;/a&gt; for configuring the base install and upgrading to &lt;tt class="docutils literal"&gt;jessie&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="raspbian"></category><category term="debian"></category><category term="linux"></category><category term="raspberry pi"></category><category term="networks"></category></entry><entry><title>OpenWrt router as bridged repeater using relayd</title><link href="http://www.circuidipity.com/openwrt-bridged-repeater.html" rel="alternate"></link><updated>2015-06-26T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-06-26:openwrt-bridged-repeater.html</id><summary type="html">&lt;p&gt;Extend the range of a wireless network using a cheap and cheerful router running &lt;a class="reference external" href="http://www.circuidipity.com/tag-openwrt.html"&gt;OpenWrt&lt;/a&gt; as a &lt;strong&gt;bridged repeater&lt;/strong&gt;. All client devices use the same IP address range and are capable of communicating with each other.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Wireless access points: &lt;strong&gt;PrimaryAP&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/supercharge-a-home-router-using-openwrt-pt2.html"&gt;TP-Link TL-WDR3600&lt;/a&gt; with IP address &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt; + wireless channel &lt;tt class="docutils literal"&gt;11&lt;/tt&gt; and the &lt;strong&gt;RepeaterAP&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade4.html"&gt;TP-Link TL-WR841N&lt;/a&gt; (~$20CAN on sale). Both devices are running OpenWrt.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://forum.openwrt.org/viewtopic.php?id=39077"&gt;This thread&lt;/a&gt; was a big help in cutting through the confusion and getting everything hopping! Basically there are 2 types of repeater scenarios to consider:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;non-bridged&lt;/em&gt; repeater - works on all radios... devices connected to the &lt;em&gt;RepeaterAP&lt;/em&gt; see the &lt;em&gt;PrimaryAP&lt;/em&gt; devices, &lt;em&gt;PrimaryAP&lt;/em&gt; devices do not see &lt;em&gt;RepeaterAP&lt;/em&gt; devices&lt;/li&gt;
&lt;li&gt;&lt;em&gt;bridged&lt;/em&gt; repeater - works for most radios... everything sees everything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All configuration is done on the secondary router to setup device as a bridged repeater.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-relayd"&gt;
&lt;h2&gt;0. Install relayd&lt;/h2&gt;
&lt;p&gt;Access the internet by connecting an ethernet cable from the secondary router's WAN port to the primary router. Login and install relayd:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# opkg update&lt;/span&gt;
&lt;span class="c"&gt;# opkg install relayd&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/relayd enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-wireless"&gt;
&lt;h2&gt;1. Configure wireless&lt;/h2&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;/etc/config/wireless&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config wifi-device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mac80211&amp;#39;&lt;/span&gt;
    option channel &lt;span class="s1"&gt;&amp;#39;11&amp;#39;&lt;/span&gt;     &lt;span class="c"&gt;# Important! Match with the channel set on PrimaryAP&lt;/span&gt;
    option hwmode &lt;span class="s1"&gt;&amp;#39;11g&amp;#39;&lt;/span&gt;
    option path &lt;span class="s1"&gt;&amp;#39;platform/ar934x_wmac&amp;#39;&lt;/span&gt;
    option htmode &lt;span class="s1"&gt;&amp;#39;HT20&amp;#39;&lt;/span&gt;
    option txpower &lt;span class="s1"&gt;&amp;#39;30&amp;#39;&lt;/span&gt;
    option country &lt;span class="s1"&gt;&amp;#39;US&amp;#39;&lt;/span&gt;

config wifi-iface
    option device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;wwan&amp;#39;&lt;/span&gt;
    option encryption &lt;span class="s1"&gt;&amp;#39;psk2&amp;#39;&lt;/span&gt;
    option key &lt;span class="s1"&gt;&amp;#39;*********************&amp;#39;&lt;/span&gt;
    option mode &lt;span class="s1"&gt;&amp;#39;sta&amp;#39;&lt;/span&gt;
    option ssid &lt;span class="s1"&gt;&amp;#39;PrimaryAP&amp;#39;&lt;/span&gt;

config wifi-iface
    option device &lt;span class="s1"&gt;&amp;#39;radio0&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option encryption &lt;span class="s1"&gt;&amp;#39;psk2&amp;#39;&lt;/span&gt;
    option key &lt;span class="s1"&gt;&amp;#39;*****************&amp;#39;&lt;/span&gt;
    option mode &lt;span class="s1"&gt;&amp;#39;ap&amp;#39;&lt;/span&gt;
    option ssid &lt;span class="s1"&gt;&amp;#39;RepeaterAP&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-network"&gt;
&lt;h2&gt;2. Configure network&lt;/h2&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;/etc/config/network&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config interface &lt;span class="s1"&gt;&amp;#39;loopback&amp;#39;&lt;/span&gt;
    option ifname &lt;span class="s1"&gt;&amp;#39;lo&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.0.0.0&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option ifname &lt;span class="s1"&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;
    option force_link &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bridge&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ip6assign &lt;span class="s1"&gt;&amp;#39;60&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.10.1&amp;#39;&lt;/span&gt;    &lt;span class="c"&gt;# for relayd... requires 192.168.x.x address but not used by clients&lt;/span&gt;
    option gateway &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;    &lt;span class="c"&gt;# ip address of PrimaryAP&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.255.255.0&amp;#39;&lt;/span&gt;
    option dns &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;wwan&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.1.254&amp;#39;&lt;/span&gt;
    option netmask &lt;span class="s1"&gt;&amp;#39;255.255.255.0&amp;#39;&lt;/span&gt;
    option gateway &lt;span class="s1"&gt;&amp;#39;192.168.1.1&amp;#39;&lt;/span&gt;

config interface &lt;span class="s1"&gt;&amp;#39;stabridge&amp;#39;&lt;/span&gt;
    option proto &lt;span class="s1"&gt;&amp;#39;relay&amp;#39;&lt;/span&gt;
    option network &lt;span class="s1"&gt;&amp;#39;lan wwan&amp;#39;&lt;/span&gt;
    option ipaddr &lt;span class="s1"&gt;&amp;#39;192.168.1.254&amp;#39;&lt;/span&gt;   &lt;span class="c"&gt;# static ip assigned from PrimaryAP address range&lt;/span&gt;

config switch
    option name &lt;span class="s1"&gt;&amp;#39;switch0&amp;#39;&lt;/span&gt;
    option reset &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option enable_vlan &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

config switch_vlan
    option device &lt;span class="s1"&gt;&amp;#39;switch0&amp;#39;&lt;/span&gt;
    option vlan &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    option ports &lt;span class="s1"&gt;&amp;#39;0 1 2 3 4&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-dhcp"&gt;
&lt;h2&gt;3. Configure DHCP&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PrimaryAP&lt;/em&gt; will handle DHCP for the combined network. Sample &lt;tt class="docutils literal"&gt;/etc/config/dhcp&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config dhcp &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option interface &lt;span class="s1"&gt;&amp;#39;lan&amp;#39;&lt;/span&gt;
    option start &lt;span class="s1"&gt;&amp;#39;100&amp;#39;&lt;/span&gt;
    option limit &lt;span class="s1"&gt;&amp;#39;150&amp;#39;&lt;/span&gt;
    option leasetime &lt;span class="s1"&gt;&amp;#39;12h&amp;#39;&lt;/span&gt;
    option ignore &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

config dhcp &lt;span class="s1"&gt;&amp;#39;wan&amp;#39;&lt;/span&gt;
    option interface &lt;span class="s1"&gt;&amp;#39;wan&amp;#39;&lt;/span&gt;
    option ignore &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reboot"&gt;
&lt;h2&gt;4. Reboot&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PrimaryAP&lt;/em&gt; will handle firewall and dnsmasq for the combined network. Disable the services on &lt;em&gt;RepeaterAP&lt;/em&gt; to avoid conflicts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/firewall stop&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/firewall disable&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/dnsmasq stop&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/dnsmasq disable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot router:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK! Connect to the new &lt;em&gt;RepeaterAP&lt;/em&gt; and the device will be assigned an IP address on the &lt;em&gt;PrimaryAP&lt;/em&gt;'s now-extended network. All rules and services on &lt;em&gt;PrimaryAP&lt;/em&gt; will flow through to devices connected via &lt;em&gt;RepeaterAP&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;5. Helpful resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/wireless"&gt;wireless&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/network"&gt;network&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/openwrt/bridged_repeater/etc/config/dhcp"&gt;dhcp&lt;/a&gt; configs&lt;/li&gt;
&lt;li&gt;OpenWrt forum thread on &lt;a class="reference external" href="https://forum.openwrt.org/viewtopic.php?id=39077"&gt;bridged and simple repeater configurations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/recipes/relayclient"&gt;Routed Client with relayd (Pseudobridge)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="openwrt"></category><category term="linux"></category><category term="networks"></category></entry><entry><title>Chromebook to Ubuntubook</title><link href="http://www.circuidipity.com/c720-ubuntubook.html" rel="alternate"></link><updated>2015-05-02T17:30:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-05-02:c720-ubuntubook.html</id><summary type="html">&lt;p&gt;Replace &lt;strong&gt;Chrome OS&lt;/strong&gt; permanently with &lt;strong&gt;Ubuntu 15.04 Linux&lt;/strong&gt; on the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="Ubuntu 15.04 Vivid Vervet" class="align-right" src="images/vivid-icon.png" style="width: 250px; height: 250px;" /&gt;
&lt;p&gt;Running a &lt;strong&gt;full-featured Linux&lt;/strong&gt; on this little laptop is a delight: lightweight, several hours battery life, inexpensive, and snappy performance. I started with Debian, followed by &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu 14.04&lt;/a&gt; and &lt;a class="reference external" href="http://www.circuidipity.com/arch-install-encrypt.html"&gt;Arch&lt;/a&gt;, and now experimenting with Ubuntu's latest and greatest and the &lt;strong&gt;Unity&lt;/strong&gt; desktop.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;This device is available in a few different configurations. Mine is the non-touchscreen model &lt;strong&gt;C720-2848&lt;/strong&gt; with (non-expandable) &lt;strong&gt;2GB RAM&lt;/strong&gt; and a (user-replaceable) &lt;strong&gt;16GB SSD&lt;/strong&gt; &lt;a class="footnote-reference" href="#id8" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recovery-image"&gt;
&lt;h2&gt;0. Recovery Image&lt;/h2&gt;
&lt;p&gt;Create a recovery image of Chrome OS (my C720 is model &lt;tt class="docutils literal"&gt;PEPPY &lt;span class="pre"&gt;C6A-N3C-A7O&lt;/span&gt;&lt;/tt&gt;) to enable restoring the Chromebook to its default configuration. This will require a spare USB stick of 2GB or better:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Log into the Chromebook and let it auto update, as there sometimes are firmware updates... check the updating status in the browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://help&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Insert the USB stick, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://imageburner&lt;/span&gt;&lt;/tt&gt; and follow the directions to generate a recovery image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://support.google.com/chromebook/answer/1080595?hl=en"&gt;Create a Chromebook recovery image&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-install-media"&gt;
&lt;h2&gt;1. Prepare install media&lt;/h2&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/vivid/main/installer-amd64/current/images/netboot/mini.iso"&gt;64-bit 'Vivid Vervet' minimal installer&lt;/a&gt; and &lt;a class="reference external" href="https://help.ubuntu.com/community/Installation/FromUSBStick"&gt;flash the image&lt;/a&gt; to a USB stick. An alternative (my choice) is adding the image to a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt;. Using the minimal console installer (requires network connection) vs. the graphical &lt;a class="reference external" href="https://help.ubuntu.com/community/Ubuntu/GetUbuntu"&gt;Ubuntu installer&lt;/a&gt; provides more options during setup &lt;a class="footnote-reference" href="#id9" id="id2"&gt;[2]&lt;/a&gt; and downloads all the latest packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="seabios"&gt;
&lt;h2&gt;2. SeaBIOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.coreboot.org/SeaBIOS"&gt;SeaBIOS&lt;/a&gt; in combination with &lt;strong&gt;coreboot&lt;/strong&gt; provides an open-source legacy BIOS that enables access to the MBR and the ability to install an alternative OS on the Chromebook. All this good stuff involves jumping through a few simple hoops and not trembling in fear at the &amp;quot;scary white screen&amp;quot; that pops up at power up stating that the boot loader detects something is &lt;strong&gt;very very wrong&lt;/strong&gt; with the Chromebook and helpfully suggests pressing the spacebar to begin recovery. &lt;strong&gt;Do not press the spacebar&lt;/strong&gt; or the Ubuntu installation will be wiped from disk!&lt;/p&gt;
&lt;p&gt;There are 2 different methods for configuring SeaBIOS in preparation for installing Ubuntu. The first method uses a few simple commands in the Chrome OS shell to place the Chromebook into &lt;strong&gt;developer mode&lt;/strong&gt; and allow booting the USB install media and replacing Chrome OS with Ubuntu. The drawback is that scary screen appears at every boot and you must press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; to boot to legacy-mode and onward to GRUB and Ubuntu (and &lt;strong&gt;ignore&lt;/strong&gt; the helpful prompt to press spacebar and inadvertently begin the adventure of wiping clean the SSD).&lt;/p&gt;
&lt;p&gt;The second method involves setting new flags for the write-protected &lt;strong&gt;Google Binary Block&lt;/strong&gt; (GBB) in the device firmware. Delay at the boot screen can be reduced to a one second timeout and the legacy-mode BIOS set as the system default (no key combo required). Pressing the spacebar is disabled from doing any harm to Ubuntu (the Chromebook just beeps). The drawback is that it involves the (very simple) removal of the device's bottom cover and the temporary removal of the &lt;strong&gt;write-protect screw&lt;/strong&gt; from the motherboard to permit flashing new flags to the GBB... and this may void the Chromebook's warranty (one of the case screws lies underneath a sticker declaring the warranty void if disturbed).&lt;/p&gt;
&lt;p&gt;Experimenting with alternate OS installs on the Chromebook I first employed the developer mode method followed by the write-protect screw removal. I prefer configuring the device to default to legacy-mode BIOS but I have employed both methods successfully and describe their respective steps below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No guarantees&lt;/strong&gt; though... Hopefully you enjoy equal success!&lt;/p&gt;
&lt;div class="section" id="write-protect-screw-method"&gt;
&lt;h3&gt;2.1 Write-Protect Screw Method&lt;/h3&gt;
&lt;p&gt;Disconnect power. Turn the Chromebook over facing bottom up and remove the 13 screws (not missing the one hidden under the warranty sticker). Gently pry the case off starting with the seam where the display connects to device. It comes away pretty easy.&lt;/p&gt;
&lt;p&gt;This is what you see:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="C720 annotated innards" src="images/c720-chromebook-annotated-innards.png" style="width: 800px; height: 558px;" /&gt;
&lt;p class="caption"&gt;[ Image: &lt;a class="footnote-reference" href="#id10" id="id4"&gt;[3]&lt;/a&gt; The battery lock screw is #6 and the write-protect screw is #7 ].&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; This will &lt;strong&gt;wipe out&lt;/strong&gt; whatever is installed on the SSD:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the write-protect screw&lt;/li&gt;
&lt;li&gt;Close back cover using only the battery lock screw to hold in place&lt;/li&gt;
&lt;li&gt;Re-connect power, boot Chromebook and wait until it displays:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Chrome OS is missing or damaged.
Please insert a recovery USB stick or SD card.
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Insert USB recovery media prepared in Step 0 and it will proceed to restore Chrome OS and reboot&lt;/li&gt;
&lt;li&gt;At default Chrome OS &amp;quot;Welcome!&amp;quot; screen open a terminal &lt;tt class="docutils literal"&gt;CTRL+ALT+F2&lt;/tt&gt; (Right-arrow)&lt;/li&gt;
&lt;li&gt;Login as &lt;tt class="docutils literal"&gt;chronos&lt;/tt&gt; (no password), then enter &lt;tt class="docutils literal"&gt;sudo su&lt;/tt&gt; for superuser access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set new GBB flags using the &lt;tt class="docutils literal"&gt;set_gbb_flags.sh&lt;/tt&gt; script in Chrome OS. To enable short &lt;strong&gt;developer mode&lt;/strong&gt; screen (1 second timeout) followed by &lt;strong&gt;default legacy mode&lt;/strong&gt; boot use these flags:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GBB_FLAG_DEV_SCREEN_SHORT_DELAY 0×00000001
GBB_FLAG_FORCE_DEV_SWITCH_ON 0×00000008
GBB_FLAG_FORCE_DEV_BOOT_LEGACY 0×00000080
GBB_FLAG_DEFAULT_DEV_BOOT_LEGACY 0×00000400
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which adds up to running in the shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/usr/share/vboot/bin/set_gbb_flags.sh 0x489
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shutdown with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# shutdown -h now&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and disconnect the power:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the bottom cover again and reinstall the write-lock screw to protect the BIOS&lt;/li&gt;
&lt;li&gt;Close cover and reinstall all the case screws&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Re-connect the power, insert the USB stick prepared in Step 1, and power up the Chromebook &lt;a class="footnote-reference" href="#id11" id="id5"&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="http://www.coreboot.org/pipermail/coreboot/2014-January/077083.html"&gt;Useful GBB flags&lt;/a&gt; for &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;another new free software machine&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-mode-method"&gt;
&lt;h3&gt;2.2 Developer Mode Method&lt;/h3&gt;
&lt;p&gt;The alternative to removing the write-protect screw above is to place the Chromebook into developer mode using the Chrome OS shell before booting the USB install media:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;With the Chromebook off... Hold down &lt;tt class="docutils literal"&gt;ESC+F3&lt;/tt&gt; (Refresh) keys and power on the device&lt;/li&gt;
&lt;li&gt;Invoke Recovery, and at the Recovery screen press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Device will prompt for confirmation, press &lt;tt class="docutils literal"&gt;ENTER&lt;/tt&gt; and the system reboots into developer mode&lt;/li&gt;
&lt;li&gt;Scary white boot screen appears and you need to press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt; to continue boot &lt;a class="footnote-reference" href="#id12" id="id6"&gt;[5]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enable the &lt;strong&gt;USB Boot&lt;/strong&gt; and &lt;strong&gt;Legacy BIOS&lt;/strong&gt; modes by opening the shell with &lt;tt class="docutils literal"&gt;Ctrl+Alt+T&lt;/tt&gt; and enter &lt;tt class="docutils literal"&gt;shell&lt;/tt&gt;. Set &lt;tt class="docutils literal"&gt;dev_boot_usb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dev_boot_legacy&lt;/tt&gt; to active:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_usb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert the USB stick prepared in Step 1, reboot the Chromebook and press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; at the boot screen to enter legacy boot mode.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.chromium.org/chromium-os"&gt;Chromium OS&lt;/a&gt; developer information for the &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook"&gt;Acer C720 Chromebook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-ubuntu"&gt;
&lt;h2&gt;3. Install Ubuntu&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook-install.html"&gt;visual screenshot tour&lt;/a&gt; of installing Ubuntu 14.04 - a &lt;a class="reference external" href="https://wiki.ubuntu.com/Releases"&gt;Long Term Support (LTS)&lt;/a&gt; release. Install steps remain the same for 15.04.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternative:&lt;/strong&gt; At the &lt;tt class="docutils literal"&gt;tasksel&lt;/tt&gt; stage select a different desktop: &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu (LXDE)&lt;/a&gt;, Xubuntu (XFCE), etc.&lt;/p&gt;
&lt;p&gt;Chromebook's SSD will be divided into 3 partitions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 is a 300MB &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda2 is a 1GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; partition using a &lt;strong&gt;random key&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;sda3 uses the remaining space as a LUKS encrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition using a &lt;strong&gt;passphrase&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="touchpad"&gt;
&lt;h2&gt;4. Touchpad&lt;/h2&gt;
&lt;p&gt;Ubuntu 15.04 installs Linux kernel &lt;tt class="docutils literal"&gt;3.19&lt;/tt&gt; with built-in support for the Chromebook's touchpad. Per-session modifications of touchpad settings can be made using &lt;tt class="docutils literal"&gt;synclient&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;synclient                 &lt;span class="c"&gt;# display current settings&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;synclient &lt;span class="nv"&gt;TapButton3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="c"&gt;# 3-finger tap = middle-click&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make any desired touchpad settings permanent create a configuration file in &lt;tt class="docutils literal"&gt;/etc/X11/xorg.conf.d&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/X11/xorg.conf.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/50-c720-touchpad.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify this file to adjust timeouts, add tap-mouse actions (2-finger tap = right-click, 3-finger tap = middle-click), and 2-finger scrolling.&lt;/p&gt;
&lt;p&gt;Sample config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Section &lt;span class="s2"&gt;&amp;quot;InputClass&amp;quot;&lt;/span&gt;
    Identifier      &lt;span class="s2"&gt;&amp;quot;touchpad peppy cyapa&amp;quot;&lt;/span&gt;
    MatchIsTouchpad &lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;
    MatchDevicePath &lt;span class="s2"&gt;&amp;quot;/dev/input/event*&amp;quot;&lt;/span&gt;
    MatchProduct    &lt;span class="s2"&gt;&amp;quot;cyapa&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerLow&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;FingerHigh&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertEdgeScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;VertTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;HorizTwoFingerScroll&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaRightEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;850&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;AreaLeftEdge&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton1&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton2&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;
    Option          &lt;span class="s2"&gt;&amp;quot;TapButton3&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;
EndSection
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; My 3-finger middle-click option required a manual reset each session.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Stop the Gnome Settings daemon from overiding &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;50-c720-touchpad.conf&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.settings-daemon.plugins.mouse active &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logout and back in. It works!&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/etc/X11/xorg.conf.d/50-c720-touchpad.conf"&gt;50-c720-touchpad.conf&lt;/a&gt;, and pages for &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Touchpad Synaptics&lt;/a&gt; and the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook#configuration"&gt;C720 Chromebook&lt;/a&gt; on &lt;a class="reference external" href="https://wiki.archlinux.org/"&gt;ArchWiki&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ssd"&gt;
&lt;h2&gt;5. SSD&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Swappiness"&gt;swappiness&lt;/a&gt; parameter controls the preference of the kernel to move processes out of physical memory to the swap partition. Range is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0-100&lt;/span&gt;&lt;/tt&gt;, default is set to &lt;tt class="docutils literal"&gt;60&lt;/tt&gt; and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use.&lt;/p&gt;
&lt;p&gt;Check the current swappiness value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /proc/sys/vm/swappiness
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To reduce writes on the SSD set a low value of &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; by setting &lt;tt class="docutils literal"&gt;vm.swappiness=1&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;/etc/sysctl.conf&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TRIM&lt;/strong&gt; optimizes SSD performance and is enabled by adding the &lt;tt class="docutils literal"&gt;discard&lt;/tt&gt; option to &lt;tt class="docutils literal"&gt;/etc/crypttab&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;. Ubuntu auto-magically configures &lt;tt class="docutils literal"&gt;crypttab&lt;/tt&gt; but &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt; needs to be set manually.&lt;/p&gt;
&lt;p&gt;Sample &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;&lt;/span&gt;
/dev/mapper/sda3_crypt /               ext4    noatime,discard,errors&lt;span class="o"&gt;=&lt;/span&gt;remount-ro &lt;span class="m"&gt;0&lt;/span&gt;       1
&lt;span class="c"&gt;# /boot was on /dev/sda1 during installation&lt;/span&gt;
&lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;some_long_random_string&lt;span class="o"&gt;]&lt;/span&gt; /boot    ext4    noatime,discard         &lt;span class="m"&gt;0&lt;/span&gt;       2
/dev/mapper/sda2_crypt none            swap    sw,discard              &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After modifying &lt;tt class="docutils literal"&gt;fstab&lt;/tt&gt; update &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/boot/initrd.img-*&lt;/span&gt;&lt;/tt&gt; by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-initramfs -u -k all
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.linuxjournal.com/content/solid-state-drives-get-one-already"&gt;TRIM configuration on solid-state drives&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="suspend"&gt;
&lt;h2&gt;6. Suspend&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Suspend-and-resume generates a stream of errors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;1&lt;/span&gt; resume error -19
ehci-pci 0000:00:1d.0: port &lt;span class="m"&gt;2&lt;/span&gt; resume error -19
usb usb3-port1: over-current condition
usb usb3-port1: connect-debounce failed
usb usb3-port2: over-current condition
usb usb3-port2: connect-debounce failed
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and blocks the Chromebook from executing a proper restart/shutdown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/systemd/system-sleep/ehci-pci.sh&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id13" id="id7"&gt;[6]&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;/&lt;span class="nv"&gt;$2&lt;/span&gt; in
    pre/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Unbind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/unbind
    &lt;span class="p"&gt;;;&lt;/span&gt;
    post/*&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Bind ehci for preventing error&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;0000:00:1d.0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tee /sys/bus/pci/drivers/ehci-pci/bind
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and make it executable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chmod &lt;span class="m"&gt;755&lt;/span&gt; /lib/systemd/system-sleep/ehci-pci.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure boot options in &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash tpm_tis.force=1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... save the changes and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Suspend now works reliably when triggered from Ubuntu's shutdown menu or closing the lid and will resume the system with the desktop locked and a password prompt.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/lib/systemd/system-sleep/ehci-pci.sh"&gt;ehci-pci.sh&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="keyboard-shortcuts"&gt;
&lt;h2&gt;7. Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;Top row on the keyboard with the shortcut icons (brightness, volume, etc.) identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the Search key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as the &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Create keyboard shortcuts by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbacklight&lt;/tt&gt; - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with &lt;tt class="docutils literal"&gt;pactl&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xvkbd&lt;/tt&gt; - send characters to another client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys xbacklight pulseaudio-utils xvkbd
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="direction-brightness-volume-page-keys"&gt;
&lt;h3&gt;7.1 Direction, Brightness, Volume, Page Keys&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys -k
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the function keys to modify the sound and brightness settings by creating &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ~/.xbindkeysrc&lt;/span&gt;

&lt;span class="c"&gt;# backward/forward&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Left&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F1

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\A\[&lt;/span&gt;Right&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
F2

&lt;span class="c"&gt;# backlight decrease/increase&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xbacklight -dec 10&amp;quot;&lt;/span&gt;
F6
&lt;span class="s2"&gt;&amp;quot;xbacklight -inc 10&amp;quot;&lt;/span&gt;
F7

&lt;span class="c"&gt;# volume mute/decrease/increase&lt;/span&gt;
&lt;span class="c"&gt;# pactl - control a running pulseaudio server&lt;/span&gt;
&lt;span class="c"&gt;# pactl list sinks - retrieve info&lt;/span&gt;
&lt;span class="c"&gt;# on my c770 chromebook... single audio sink is &amp;#39;Sink #0&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# named &amp;#39;alsa_output.pci-0000_00_1b.0.analog-stereo&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-mute alsa_output.pci-0000_00_1b.0.analog-stereo toggle&amp;quot;&lt;/span&gt;
F8
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo -10%&amp;quot;&lt;/span&gt;
F9
&lt;span class="s2"&gt;&amp;quot;pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo +10%&amp;quot;&lt;/span&gt;
F10

&lt;span class="c"&gt;# page up/down, home, end&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Up]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Up

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Page_Down]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Down

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[Home]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Left

&lt;span class="s2"&gt;&amp;quot;xvkbd -xsendevent -text &amp;#39;\[End]&amp;#39;&amp;quot;&lt;/span&gt;
Alt + Right
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the new key shortcuts by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xbindkeys
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ubuntu auto-detects &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xbindkeysrc&lt;/span&gt;&lt;/tt&gt;  and will run &lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; on the next login.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/home/username/.xbindkeysrc"&gt;xbindkeysrc&lt;/a&gt;, &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Xbindkeys"&gt;Xbindkeys&lt;/a&gt;, and another sample &lt;a class="reference external" href="https://github.com/alexpatel/dotfiles/blob/master/xbindkeysrc"&gt;Chromebook-friendly xbindkeysrc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="power-key"&gt;
&lt;h3&gt;7.2 Power Key&lt;/h3&gt;
&lt;p&gt;Power key in upper-right corner ignores any configuration in the window manager and triggers poweroff without delay when pressed (easy to do by accident as its positioned next to &lt;tt class="docutils literal"&gt;backspace&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;If you want to disable the power key edit &lt;tt class="docutils literal"&gt;/etc/systemd/logind.conf&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;HandlePowerKey=ignore&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wireless"&gt;
&lt;h2&gt;8. Wireless&lt;/h2&gt;
&lt;p&gt;There are a few settings to modify to improve performance of Chromebook's wireless chipset. Identify the card and parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i net
01:00.0 Network controller: Qualcomm Atheros AR9462 Wireless Network Adapter &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;modinfo ath9k &lt;span class="p"&gt;|&lt;/span&gt; grep parm
parm:           debug:Debugging mask &lt;span class="o"&gt;(&lt;/span&gt;uint&lt;span class="o"&gt;)&lt;/span&gt;
parm:           nohwcrypt:Disable hardware encryption &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           blink:Enable LED blink on activity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           btcoex_enable:Enable wifi-BT coexistence &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           bt_ant_diversity:Enable WLAN/BT RX antenna diversity &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           ps_enable:Enable WLAN PowerSave &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
parm:           use_chanctx:Enable channel context &lt;span class="k"&gt;for&lt;/span&gt; concurrency &lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;tt class="docutils literal"&gt;/etc/modprobe.d/ath9k.conf&lt;/tt&gt; with the following options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;options ath9k &lt;span class="nv"&gt;bt_ant_diversity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ps_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/c720_ubuntubook/etc/modprobe.d/ath9k.conf"&gt;ath9k.conf&lt;/a&gt;, &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k"&gt;ath9k wireless driver&lt;/a&gt; and &lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/ath9k/btcoex"&gt;bluetooth coexistence&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;9. Helpful Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My former &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Lubuntu 14.04 LTS install on the Chromebook&lt;/a&gt; and configuration (under &lt;tt class="docutils literal"&gt;upstart&lt;/tt&gt; init vs &lt;tt class="docutils literal"&gt;systemd&lt;/tt&gt; in the current 15.04)&lt;/li&gt;
&lt;li&gt;Arch Linux C720 installation with &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook"&gt;useful post-install details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Turn Chromebooks into &lt;a class="reference external" href="http://blog.codestarter.org/post/93985346780/how-we-turn-199-chromebooks-into-ubuntu-based-code"&gt;Ubuntu-based code learning machines for kids&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Device information &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/tree/master/config/c720_ubuntubook/doc"&gt;output of lshw, lspci, and lsusb&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Specifically in this instance, the Ubuntu console installer provides a random key option for the encrypted swap partition.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Image courtesy of &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook#TOC-Firmware"&gt;Chromium&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id11" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Whenever you remove battery power to the Chromebook (like opening up the case) the hardware clock on the motherboard resets to a future year (mine travelled to 2040). Providing a network connection is up during the Ubuntu installation the system should fetch a correct time from a NTP server. Otherwise fix the &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/c720-debian/"&gt;fallout from an incorrect clock&lt;/a&gt; by re-mounting partitions read-only and correct filesystem timestamps using &lt;tt class="docutils literal"&gt;fsck&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id12" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Switching between developer and normal (non-developer) modes will remove user accounts and their associated information from the Chromebook.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id13" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Some HOWTOs talk about adding &lt;tt class="docutils literal"&gt;modprobe.blacklist=ehci_hcd,ehci_pci&lt;/tt&gt; but in Ubuntu they are compiled into the kernel.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="chromebook"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Configure an encrypted external USB hard drive in Linux</title><link href="http://www.circuidipity.com/encrypt-external-drive.html" rel="alternate"></link><updated>2015-05-01T00:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-05-01:encrypt-external-drive.html</id><summary type="html">&lt;p&gt;Using an external USB hard drive is part of my personal backup plan (the other part is backing up to a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;home server&lt;/a&gt;). I actually use 2 multi-terabyte drives. One drive is in my possession and the other drive I store offsite at a friend's home. Periodically I swap the drives and update the data.&lt;/p&gt;
&lt;p&gt;To guard against loss or theft its a good idea to &lt;strong&gt;encrypt&lt;/strong&gt; the hard drive. I prepare the device using &lt;strong&gt;Linux Unified Key Setup (LUKS)&lt;/strong&gt; and the &lt;tt class="docutils literal"&gt;cryptsetup&lt;/tt&gt; utility.&lt;/p&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Make careful note of the drive and partition labels. The following steps will &lt;strong&gt;destroy all data&lt;/strong&gt; currently stored on the drive.&lt;/p&gt;
&lt;div class="section" id="prepare"&gt;
&lt;h2&gt;0. Prepare&lt;/h2&gt;
&lt;p&gt;Download &lt;tt class="docutils literal"&gt;cryptsetup&lt;/tt&gt; if not already installed. Connect the external drive, leave it &lt;strong&gt;unmounted&lt;/strong&gt;, and make note of the device label (&lt;tt class="docutils literal"&gt;sdb&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;sdc&lt;/tt&gt; ...):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsblk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Optional:&lt;/strong&gt; Overwrite the device with zeros for added security. This can take several hours depending on storage size. &lt;strong&gt;Random number generation&lt;/strong&gt; is even more secure but takes much longer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;1. Partition&lt;/h2&gt;
&lt;p&gt;Create a single partition using a favourite partitioning utility (&lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;gparted&lt;/tt&gt;...) that fills the entire drive. Encrypt the partition and assign a password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksFormat /dev/sdX1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksOpen /dev/sdX1 sdX1_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="filesystem"&gt;
&lt;h2&gt;2. Filesystem&lt;/h2&gt;
&lt;p&gt;Install a filesystem (example: &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt;) &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and mount the partition to gain access to the storage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkfs.ext4 -E &lt;span class="nv"&gt;lazy_itable_init&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0,lazy_journal_init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; /dev/mapper/sdX1_crypt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mount -t ext4 /dev/mapper/sdX1_crypt /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before disconnecting the drive the partition must be unmounted and the encrypted device must be closed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo umount /mnt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cryptsetup luksClose /dev/mapper/sdX1_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mountpoint"&gt;
&lt;h2&gt;3. Mountpoint&lt;/h2&gt;
&lt;p&gt;A file manager like &lt;tt class="docutils literal"&gt;nautilus&lt;/tt&gt; will auto-mount and unmount encrypted partitions. For crafting a backup script it is useful to assign a &lt;strong&gt;default mountpoint&lt;/strong&gt; to the encrypted partition... that is, whenever the USB drive is connected it will always be mounted to the same location.&lt;/p&gt;
&lt;p&gt;Mount the encrypted drive. Retrieve the UUID string for the encrypted partition, and create a custom mountpoint (example: &lt;tt class="docutils literal"&gt;/media/usb_crypt&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls /dev/disk/by-uuid/ &lt;span class="p"&gt;|&lt;/span&gt; grep dm-  &lt;span class="c"&gt;# outputs &amp;#39;&amp;lt;STRING&amp;gt; -&amp;gt; ../../dm-X&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /media/usb_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmount the drive and create an entry in &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; for the new custom mount point ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;UUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;STRING&amp;gt;   /media/usb_crypt    ext4    rw.users,noauto,noatime    &lt;span class="m"&gt;0&lt;/span&gt;   0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next time the drive is auto-mounted it will be assigned to &lt;tt class="docutils literal"&gt;/media/usb_crypt&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Writing &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt; with options &lt;tt class="docutils literal"&gt;lazy_itable_init=0,lazy_journal_init=0&lt;/tt&gt; initializes the inodes and journal at creation time vs a gradual process during mount times. If you wonder why your newly-formatted drive's activity LED is blinking away... install and run &lt;tt class="docutils literal"&gt;iotop&lt;/tt&gt; and take note of &lt;tt class="docutils literal"&gt;ext4lazyinit&lt;/tt&gt; and &lt;a class="reference external" href="https://www.thomas-krenn.com/en/wiki/Ext4_Filesystem#Lazy_Initialization"&gt;Lazy Initialization&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="linux"></category></entry><entry><title>Arch Linux installation with encrypted root + swap</title><link href="http://www.circuidipity.com/arch-install-encrypt.html" rel="alternate"></link><updated>2015-03-26T21:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-03-26:arch-install-encrypt.html</id><summary type="html">&lt;p&gt;My notes for installing &lt;strong&gt;Arch Linux&lt;/strong&gt; that follow a condensed path through the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Beginners%27_guide"&gt;Beginner's Guide&lt;/a&gt; plus extra steps to configure LUKS-encrypted root + swap.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Target:&lt;/strong&gt; Acer &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C720-2848&lt;/span&gt;&lt;/tt&gt; Chromebook (16GB SSD) with &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Chrome OS removed and ready for full-featured Linux&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-media"&gt;
&lt;h2&gt;0. Install media&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.archlinux.org/download/"&gt;Download&lt;/a&gt; the combined 32+64bit installer and flash the image to a USB stick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;archlinux*-dual.iso &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="net-connection"&gt;
&lt;h2&gt;1. Net connection&lt;/h2&gt;
&lt;p&gt;Connect the USB stick and boot the installer. Identify the name of the device net interfaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ip link&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Chromebook wireless interface is &lt;tt class="docutils literal"&gt;wlp1s0&lt;/tt&gt;. Connect to an access point using &lt;tt class="docutils literal"&gt;netctl&lt;/tt&gt; and its interactive &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;wifi-menu&lt;/span&gt;&lt;/tt&gt; utility:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# wifi-menu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wipe-storage"&gt;
&lt;h2&gt;2. Wipe storage&lt;/h2&gt;
&lt;p&gt;Secure wipe storage before installation (16GB SSD took 22-23 minutes):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup open --type plain /dev/sdX container&lt;/span&gt;
&lt;span class="c"&gt;# dd if=/dev/zero of=/dev/mapper/container&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upon completion close the container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup close /dev/mapper/container&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Dm-crypt/Drive_preparation"&gt;Dm-crypt drive preparation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partition"&gt;
&lt;h2&gt;3. Partition&lt;/h2&gt;
&lt;p&gt;Detect storage devices:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# lsblk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SSD identified as &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt;. Use &lt;tt class="docutils literal"&gt;gpt&lt;/tt&gt; to create a 4 partition layout:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 1M - BIOS boot partition (type: &lt;tt class="docutils literal"&gt;ef02&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;sda2 - 300M - boot (unencrypted)&lt;/li&gt;
&lt;li&gt;sda3 - 1GB - swap (encrypted)&lt;/li&gt;
&lt;li&gt;sda4 - remaining space - root (encrypted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Normally I create a separate partition for &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; but on smaller storage devices I make a single encrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; and a (required) unencrypted &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# gdisk /dev/sda&lt;/span&gt;
o &lt;span class="o"&gt;(&lt;/span&gt;new partition table&lt;span class="o"&gt;)&lt;/span&gt;
...
w
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="encrypted-root"&gt;
&lt;h2&gt;4. Encrypted root&lt;/h2&gt;
&lt;p&gt;Using above partition layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# cryptsetup -y -v luksFormat /dev/sda4&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup open /dev/sda4 cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# mkfs.ext4 /dev/mapper/cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/mapper/cryptroot /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="boot"&gt;
&lt;h2&gt;5. Boot&lt;/h2&gt;
&lt;p&gt;Setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkfs.ext4 /dev/sda2&lt;/span&gt;
&lt;span class="c"&gt;# mkdir /mnt/boot&lt;/span&gt;
&lt;span class="c"&gt;# mount -t ext4 /dev/sda2 /mnt/boot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install"&gt;
&lt;h2&gt;6. Install&lt;/h2&gt;
&lt;p&gt;Install the Arch base system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacstrap -i /mnt base base-devel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fstab"&gt;
&lt;h2&gt;7. Fstab&lt;/h2&gt;
&lt;p&gt;Generate a base &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; and modify:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/span&gt;
&lt;span class="c"&gt;# nano /mnt/etc/fstab&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="chroot"&gt;
&lt;h2&gt;8. Chroot&lt;/h2&gt;
&lt;p&gt;Chroot into the freshly-installed Arch base system to configure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# arch-chroot /mnt /bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="locale"&gt;
&lt;h2&gt;9. Locale&lt;/h2&gt;
&lt;p&gt;Configure a locale suitable for the region:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# nano /etc/locale.gen&lt;/span&gt;
...
en_CA.UTF-8 UTF-8
...
&lt;span class="c"&gt;# locale-gen&lt;/span&gt;
&lt;span class="c"&gt;# echo LANG=en_CA.UTF-8 &amp;gt; /etc/locale.conf&lt;/span&gt;
&lt;span class="c"&gt;# export LANG=en_CA.UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="time-zone"&gt;
&lt;h2&gt;10. Time zone&lt;/h2&gt;
&lt;p&gt;Configure local time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ln -s /usr/share/zoneinfo/Canada/Eastern /etc/localtime&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hardware-clock"&gt;
&lt;h2&gt;11. Hardware clock&lt;/h2&gt;
&lt;p&gt;Set the hardware clock to UTC:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# hwclock --systohc --utc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hostname"&gt;
&lt;h2&gt;12. Hostname&lt;/h2&gt;
&lt;p&gt;Make a name for the new Arch installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# echo myhostname &amp;gt; /etc/hostname&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and modify &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#&amp;lt;ip-address&amp;gt; &amp;lt;hostname.domain.org&amp;gt; &amp;lt;hostname&amp;gt;&lt;/span&gt;
127.0.0.1 localhost.localdomain localhost myhostname
::1   localhost.localdomain localhost myhostname
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="network"&gt;
&lt;h2&gt;13. Network&lt;/h2&gt;
&lt;p&gt;Chromebook wireless interface is an Atheros &lt;tt class="docutils literal"&gt;AR9462&lt;/tt&gt; using the &lt;tt class="docutils literal"&gt;ath9k&lt;/tt&gt; kernel module. It does not require separate firmware.&lt;/p&gt;
&lt;p&gt;Install wireless tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacman -S iw wpa_supplicant dialog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Wait until after reboot&lt;/strong&gt; to configure interface with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;wifi-menu&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="initial-ramdisk"&gt;
&lt;h2&gt;14. Initial ramdisk&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/mkinitcpio.conf&lt;/tt&gt; by adding an &lt;tt class="docutils literal"&gt;encrypt&lt;/tt&gt; hook before &lt;tt class="docutils literal"&gt;filesystems&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;HOOKS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;... encrypt ... filesystems ...&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Re-generate the initramfs image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mkinitcpio -p linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="password"&gt;
&lt;h2&gt;15. Password&lt;/h2&gt;
&lt;p&gt;Set root password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# passwd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bootloader"&gt;
&lt;h2&gt;16. Bootloader&lt;/h2&gt;
&lt;p&gt;Download GRUB:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pacman -S grub os-prober&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt; to handle encrypted root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cryptdevice=/dev/sda4:cryptroot&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install GRUB to storage device and auto-generate &lt;tt class="docutils literal"&gt;grub.cfg&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# grub-install --target=i386-pc --recheck /dev/sda&lt;/span&gt;
&lt;span class="c"&gt;# grub-mkconfig -o /boot/grub/grub.cfg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-non-root-encrypted-partitions"&gt;
&lt;h2&gt;17. Prepare non-root encrypted partitions&lt;/h2&gt;
&lt;p&gt;Add encrypted swap to &lt;tt class="docutils literal"&gt;/etc/crypttab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cryptswap    /dev/sda3   /dev/urandom    swap,cipher&lt;span class="o"&gt;=&lt;/span&gt;aes-cbc-essiv:sha256,size&lt;span class="o"&gt;=&lt;/span&gt;256
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and modify &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/dev/mapper/cryptswap    none    swap    sw      &lt;span class="m"&gt;0&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="unmount-and-reboot"&gt;
&lt;h2&gt;18. Unmount and reboot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# exit&lt;/span&gt;
&lt;span class="c"&gt;# umount /mnt/boot&lt;/span&gt;
&lt;span class="c"&gt;# umount /mnt&lt;/span&gt;
&lt;span class="c"&gt;# cryptsetup close /dev/mapper/cryptroot&lt;/span&gt;
&lt;span class="c"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Welcome to Arch. Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="arch"></category><category term="linux"></category><category term="chromebook"></category></entry><entry><title>Samsung CLP-310 Printer</title><link href="http://www.circuidipity.com/samsung-clp-310-printer.html" rel="alternate"></link><updated>2015-03-09T18:17:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-03-09:samsung-clp-310-printer.html</id><summary type="html">&lt;p&gt;Connect a &lt;strong&gt;Samsung CLP-310&lt;/strong&gt; to a repurposed netbook as server running Ubuntu 14.04 LTS and configure as printer for a home network.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="cups"&gt;
&lt;h2&gt;0. CUPS&lt;/h2&gt;
&lt;p&gt;Attach the Samsung device to server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dmesg -t
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
usb 1-2: new high-speed USB device number &lt;span class="m"&gt;6&lt;/span&gt; using ehci-pci
usb 1-2: New USB device found, &lt;span class="nv"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;04e8, &lt;span class="nv"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;328e
usb 1-2: New USB device strings: &lt;span class="nv"&gt;Mfr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2, &lt;span class="nv"&gt;SerialNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
usb 1-2: Product: CLP-310 Series
usb 1-2: Manufacturer: Samsung Electronics Co., Ltd.
usb 1-2: SerialNumber: 149CBAGS200219Y
usblp 1-2:1.0: usblp0: USB Bidirectional printer dev &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; alt &lt;span class="m"&gt;0&lt;/span&gt; proto &lt;span class="m"&gt;2&lt;/span&gt; vid 0x04E8 pid 0x328E
usbcore: registered new interface driver usblp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install CUPS (print server) and the &lt;a class="reference external" href="https://www.openprinting.org/printer/Samsung/Samsung-CLP-310"&gt;recommended driver&lt;/a&gt; &lt;tt class="docutils literal"&gt;splix&lt;/tt&gt; and grant (example) &lt;tt class="docutils literal"&gt;username&lt;/tt&gt; admin privileges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install cups cups-bsd printer-driver-splix
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lp
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lpadmin
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username scanner
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="printer-config"&gt;
&lt;h2&gt;1. Printer config&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/cups/cupsd.conf&lt;/tt&gt; to listen for connections from any device on the home network. Example for home server at ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Only listen for connections from the local machine.&lt;/span&gt;
&lt;span class="c"&gt;#Listen localhost:631&lt;/span&gt;
Listen *:631

&lt;span class="c"&gt;# Show shared printers on the local network.&lt;/span&gt;
Browsing On
BrowseLocalProtocols dnssd

&lt;span class="c"&gt;# Web interface setting...&lt;/span&gt;
WebInterface Yes

&lt;span class="c"&gt;# Restrict access to the server...&lt;/span&gt;
&amp;lt;Location /&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c"&gt;# Restrict access to the admin pages...&lt;/span&gt;
&amp;lt;Location /admin&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart CUPS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service cups restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Admin functions available at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://192.168.1.88:631/admin&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="linux"></category><category term="networks"></category></entry><entry><title>Brother MFC-J450DW All-In-One Printer/Scanner</title><link href="http://www.circuidipity.com/brother-mfc-j450dw-printer-scanner.html" rel="alternate"></link><updated>2015-03-04T20:40:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-03-04:brother-mfc-j450dw-printer-scanner.html</id><summary type="html">&lt;p&gt;Connect a &lt;strong&gt;Brother MFC-J450DW&lt;/strong&gt; to a repurposed netbook as server running Ubuntu 14.04 LTS and configure as printer/scanner for a home network.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="cups-sane"&gt;
&lt;h2&gt;0. CUPS + SANE&lt;/h2&gt;
&lt;p&gt;Attach the Brother device to server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dmesg -t
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
usb 5-1: new high-speed USB device number &lt;span class="m"&gt;4&lt;/span&gt; using ehci-pci
usb 5-1: New USB device found, &lt;span class="nv"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;04f9, &lt;span class="nv"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;02fa
usb 5-1: New USB device strings: &lt;span class="nv"&gt;Mfr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2, &lt;span class="nv"&gt;SerialNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3
usb 5-1: Product: MFC-J450DW
usb 5-1: Manufacturer: Brother
usb 5-1: SerialNumber: BROH4F240529
usblp 5-1:1.0: usblp0: USB Bidirectional printer dev &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; alt &lt;span class="m"&gt;0&lt;/span&gt; proto &lt;span class="m"&gt;2&lt;/span&gt; vid 0x04F9 pid 0x02FA
usbcore: registered new interface driver usblp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install CUPS (printer) and SANE (scanner) packages and grant (example) &lt;tt class="docutils literal"&gt;username&lt;/tt&gt; admin privileges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install cups cups-bsd sane-utils libsane-extras
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lp
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username lpadmin
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser username scanner
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="brother-drivers"&gt;
&lt;h2&gt;1. Brother drivers&lt;/h2&gt;
&lt;p&gt;Download the &lt;strong&gt;Driver Install Tool&lt;/strong&gt; from &lt;a class="reference external" href="http://support.brother.com/g/b/downloadtop.aspx?c=us&amp;amp;lang=en&amp;amp;prod=mfcj450dw_us"&gt;Brother MFC-J450DW Downloads&lt;/a&gt; and install drivers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gunzip linux-brprinter-installer-*.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo su
&lt;span class="c"&gt;# bash linux-brprinter-installer-2.0.0-1&lt;/span&gt;
Input model name -&amp;gt;MFC-J450DW

You are going to install following packages.
    mfcj450dwlpr-3.0.0-1.i386.deb
    mfcj450dwcupswrapper-3.0.0-1.i386.deb
    brscan4-0.4.2-1.i386.deb
    brscan-skey-0.2.4-1.i386.deb
OK? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;y
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
Will you specify the Device URI? &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;Y

0: ipps
1: https
2: http
3: ipp14
4: lpd
5: ipp
6: socket
7: usb://Brother/MFC-J450DW?serial&lt;span class="o"&gt;=&lt;/span&gt;BROH4F240529
8: smb
&lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;I&lt;span class="o"&gt;)&lt;/span&gt;: Specify IP address.
&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;A&lt;span class="o"&gt;)&lt;/span&gt;: Auto. &lt;span class="o"&gt;(&lt;/span&gt;usb://Brother/MFC-J450DW?serial&lt;span class="o"&gt;=&lt;/span&gt;BROH4F240529&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;select&lt;/span&gt; the number of destination Device URI. -&amp;gt;10

lpadmin -p MFCJ450DW -v usb://Brother/MFC-J450DW?serial&lt;span class="o"&gt;=&lt;/span&gt;BROH4F240529 -E
Test Print? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;y


lpadmin -p MFCJ450DW -v usb://Brother/MFC-J450DW?serial&lt;span class="o"&gt;=&lt;/span&gt;BROH4F240529 -E
Test Print? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;y

&lt;span class="nb"&gt;wait &lt;/span&gt;5s.
lpr -P MFCJ450DW /usr/share/cups/data/testprint
You are going to install following packages.
    brscan4-0.4.2-1.i386.deb
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
Do you agree? &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;Y

You are going to install following packages.
    brscan-skey-0.2.4-1.i386.deb
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
Do you agree? &lt;span class="o"&gt;[&lt;/span&gt;Y/n&lt;span class="o"&gt;]&lt;/span&gt; -&amp;gt;Y
&lt;span class="o"&gt;[&lt;/span&gt;...snip...&lt;span class="o"&gt;]&lt;/span&gt;
Hit Enter/Return key.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Scanner stuck in low-res mode using Linux scanner clients. &lt;strong&gt;Simple-scan&lt;/strong&gt; would not scan above 300dpi and would throw constant error messages. &lt;strong&gt;Xsane&lt;/strong&gt; would not scan at all and throw &lt;tt class="docutils literal"&gt;out of memory&lt;/tt&gt; errors. Turns out the Brother installer downloaded and installed an outdated, buggy scanner driver - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;brscan4-0.4.2-1.i386.deb&lt;/span&gt;&lt;/tt&gt; - when a newer &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;brscan4-0.4.3-*.i386.deb&lt;/span&gt;&lt;/tt&gt; driver exists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Remove the buggy driver and manually install the updated package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service saned stop
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -P brscan4
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i brscan4-0.4.3-0.i386.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service saned start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://technik.blogs.nde.ag/2013/12/06/brother-dcp-j925dw-problems-when-scanning-via-sane/"&gt;Problems when scanning via SANE&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="printer-config"&gt;
&lt;h2&gt;2. Printer config&lt;/h2&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/cups/cupsd.conf&lt;/tt&gt; to listen for connections from any device on the home network. Example for home server at ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Only listen for connections from the local machine.&lt;/span&gt;
&lt;span class="c"&gt;#Listen localhost:631&lt;/span&gt;
Listen *:631

&lt;span class="c"&gt;# Show shared printers on the local network.&lt;/span&gt;
Browsing On
BrowseLocalProtocols dnssd

&lt;span class="c"&gt;# Web interface setting...&lt;/span&gt;
WebInterface Yes

&lt;span class="c"&gt;# Restrict access to the server...&lt;/span&gt;
&amp;lt;Location /&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c"&gt;# Restrict access to the admin pages...&lt;/span&gt;
&amp;lt;Location /admin&amp;gt;
  Order allow,deny
  Allow 192.168.1.*
&amp;lt;/Location&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart CUPS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service cups restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Admin functions available at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://192.168.1.88:631/admin&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="scanner-config"&gt;
&lt;h2&gt;3. Scanner config&lt;/h2&gt;
&lt;div class="section" id="on-the-server"&gt;
&lt;h3&gt;On the server&lt;/h3&gt;
&lt;p&gt;Detect attached device using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sane-find-scanner&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;scanimage&lt;/tt&gt; (I find that if one fails discovery the other usually works):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sane-find-scanner
found USB scanner &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0x04f9 &lt;span class="o"&gt;[&lt;/span&gt;Brother&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="nv"&gt;product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0x02fa &lt;span class="o"&gt;[&lt;/span&gt;MFC-J450DW&lt;span class="o"&gt;])&lt;/span&gt; at libusb:005:00
&lt;span class="nv"&gt;$ &lt;/span&gt;scanimage -L
device &lt;span class="sb"&gt;`&lt;/span&gt;brother4:bus1&lt;span class="p"&gt;;&lt;/span&gt;dev1&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; is a Brother MFC-J450DW USB scanner
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/default/saned&lt;/tt&gt; to run SANE as server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;RUN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/sane.d/saned.conf&lt;/tt&gt; to share the scanner over the network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## Access list&lt;/span&gt;
192.168.1.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add entry for Brother scanners to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/udev/rules.d/40-libsane.rules&lt;/span&gt;&lt;/tt&gt; at the point in file just before the bit &lt;tt class="docutils literal"&gt;# The following rule will &lt;span class="pre"&gt;disable...&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Brother scanners&lt;/span&gt;
ATTRS&lt;span class="o"&gt;{&lt;/span&gt;idVendor&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;04f9&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;libsane_matched&lt;span class="o"&gt;}=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# The following rule will disable...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot server (simply restarting the &lt;tt class="docutils literal"&gt;udev&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;saned&lt;/tt&gt; services fails to work):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run a test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;scanimage --format&lt;span class="o"&gt;=&lt;/span&gt;tiff &amp;gt; test.tiff
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-client"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/sane.d/net.conf&lt;/tt&gt; to point your device towards the server ip address:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;connect_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60
&lt;span class="c"&gt;## saned hosts&lt;/span&gt;
192.168.1.88
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run a test using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;simple-scan&lt;/span&gt;&lt;/tt&gt; included by default in Ubuntu.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="linux"></category><category term="networks"></category></entry><entry><title>Run a Raspberry Pi 2 from external USB storage</title><link href="http://www.circuidipity.com/run-a-raspberry-pi-2-from-external-usb-storage.html" rel="alternate"></link><updated>2015-03-02T00:05:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-03-02:run-a-raspberry-pi-2-from-external-usb-storage.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #0 .:&lt;/a&gt; I am exploring the use of my Pi as &lt;strong&gt;24/7 uptime home server&lt;/strong&gt; and one of the hacks I wish to add is using Pi as a cheap and cheerful &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;network attached storage (NAS)&lt;/a&gt; device. Hmmm... How about using that USB hard drive I connect for NAS and move over the Pi root filesystem and run it from there as well?&lt;/p&gt;
&lt;p&gt;I imagine an always-on Pi would enjoy more robust performance from a hard drive than SD card. &lt;a class="footnote-reference" href="#id4" id="id1"&gt;[1]&lt;/a&gt; I put my plan in motion using:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 2 Model B&lt;/li&gt;
&lt;li&gt;5V 2A microUSB power adapter&lt;/li&gt;
&lt;li&gt;Ubuntu 14.04 Linux&lt;/li&gt;
&lt;li&gt;4GB microSD card (for initial setup and future &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; partition)&lt;/li&gt;
&lt;li&gt;1TB powered USB hard drive&lt;/li&gt;
&lt;li&gt;ethernet cable&lt;/li&gt;
&lt;li&gt;HDMI display + USB keyboard (for initial setup)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;With the move to ARMv7 the Raspberry Pi 2 is now capable of running the ARM port of Ubuntu. A community-created &lt;a class="reference external" href="https://wiki.ubuntu.com/ARM/RaspberryPi"&gt;Ubuntu 14.04 LTS minimal image&lt;/a&gt; with an updated &lt;tt class="docutils literal"&gt;3.18&lt;/tt&gt; kernel and firmware suitable for Pi 2 is now available. &lt;a class="footnote-reference" href="#id5" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;0. Download&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Using Linux:&lt;/strong&gt; Import the &lt;a class="reference external" href="http://www.finnie.org/2015/02/16/raspberry-pi-2-update-ubuntu-14-04-image-available/"&gt;lead developer's&lt;/a&gt; GPG key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --keyserver pgp.mit.edu --recv-key 86AE8D98
gpg: keyring &lt;span class="sb"&gt;`&lt;/span&gt;/home/username/.gnupg/secring.gpg&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; created
gpg: requesting key 86AE8D98 from hkp server pgp.mit.edu
gpg: /home/username/.gnupg/trustdb.gpg: trustdb created
gpg: key 86AE8D98: public key &lt;span class="s2"&gt;&amp;quot;Ryan Finnie &amp;lt;ryan@finnie.org&amp;gt;&amp;quot;&lt;/span&gt; imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 1
gpg:               imported: &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;RSA: 1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --fingerprint 86AE8D98
pub   4096R/86AE8D98 2012-04-11
Key &lt;span class="nv"&gt;fingerprint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 42E2 C8DE 8C17 3AB1 02F5  2C6E 7E60 A3A6 86AE 8D98
uid                  Ryan Finnie &amp;lt;ryan@finnie.org&amp;gt;
uid                  Ryan Finnie &amp;lt;ryan.finnie@canonical.com&amp;gt;
uid                  &lt;span class="o"&gt;[&lt;/span&gt;jpeg image of size 1669&lt;span class="o"&gt;]&lt;/span&gt;
sub   4096R/C50F6695 2012-04-11
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="http://www.finnie.org/software/raspberrypi/"&gt;latest ubuntu-trusty image and GPG signature&lt;/a&gt; for Pi 2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget -c http://www.finnie.org/software/raspberrypi/2015-02-19-ubuntu-trusty.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;wget -c http://www.finnie.org/software/raspberrypi/2015-02-19-ubuntu-trusty.zip.asc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify and unpack the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gpg --verify 2015-02-19-ubuntu-trusty.zip.asc 2015-02-19-ubuntu-trusty.zip
gpg: Signature made Thu &lt;span class="m"&gt;19&lt;/span&gt; Feb &lt;span class="m"&gt;2015&lt;/span&gt; 12:46:09 PM EST using RSA key ID 86AE8D98
gpg: Good signature from &lt;span class="s2"&gt;&amp;quot;Ryan Finnie &amp;lt;ryan@finnie.org&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;Ryan Finnie &amp;lt;ryan.finnie@canonical.com&amp;gt;&amp;quot;&lt;/span&gt;
gpg:                 aka &lt;span class="s2"&gt;&amp;quot;[jpeg image of size 1669]&amp;quot;&lt;/span&gt;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 42E2 C8DE 8C17 3AB1 02F5  2C6E 7E60 A3A6 86AE 8D98
&lt;span class="nv"&gt;$ &lt;/span&gt;unzip 2015-02-19-ubuntu-trusty.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="install-to-sd-card"&gt;
&lt;h2&gt;1. Install to SD card&lt;/h2&gt;
&lt;p&gt;In lieu of the usual &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; I use &lt;a class="reference external" href="https://source.tizen.org/documentation/reference/bmaptool/bmap-tools-project"&gt;bmap-tools&lt;/a&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;2015-02-19-ubuntu-trusty.bmap&lt;/span&gt;&lt;/tt&gt; to write &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;2015-02-19-ubuntu-trusty.img&lt;/span&gt;&lt;/tt&gt; to the SD card. &lt;strong&gt;Advantages:&lt;/strong&gt; speed boost, and bmaptool's inability to write to mounted devices (in case you pick a wrong device/partition like, say, your &lt;em&gt;home&lt;/em&gt; drive... &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt;'s nickname &lt;em&gt;disk destroyer&lt;/em&gt; is no idle boast):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install bmap-tools
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo bmaptool copy --bmap 2015-02-19-ubuntu-trusty.bmap 2015-02-19-ubuntu-trusty.img /dev/sdX
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pi-boot"&gt;
&lt;h2&gt;2. Pi Boot&lt;/h2&gt;
&lt;p&gt;Login username and password are both &lt;tt class="docutils literal"&gt;ubuntu&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Filesystem layout on the SD card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/mmcblk0p2  1.7G  456M  1.1G  30% /
devtmpfs        458M  4.0K  458M   1% /dev
none            4.0K     &lt;span class="m"&gt;0&lt;/span&gt;  4.0K   0% /sys/fs/cgroup
none             93M  260K   93M   1% /run
none            5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
none            462M     &lt;span class="m"&gt;0&lt;/span&gt;  462M   0% /run/shm
none            100M     &lt;span class="m"&gt;0&lt;/span&gt;  100M   0% /run/user
/dev/mmcblk0p1   64M  9.7M   55M  16% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="partition-external-hard-drive"&gt;
&lt;h2&gt;3. Partition external hard drive&lt;/h2&gt;
&lt;p&gt;I connect the 1TB USB hard drive to Pi and confirm device detection:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsusb
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 002: ID 0424:9514 Standard Microsystems Corp.
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 003: ID 0424:ec00 Standard Microsystems Corp.
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 005: ID 152d:2329 JMicron Technology Corp. / JMicron USA Technology Corp. JM20329 SATA Bridge
&lt;span class="nv"&gt;$ &lt;/span&gt;dmesg -t
&lt;span class="o"&gt;[&lt;/span&gt; ... &lt;span class="o"&gt;]&lt;/span&gt;
usb 1-1.3: new high-speed USB device number &lt;span class="m"&gt;5&lt;/span&gt; using dwc_otg
usb 1-1.3: New USB device found, &lt;span class="nv"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;152d, &lt;span class="nv"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2329
usb 1-1.3: New USB device strings: &lt;span class="nv"&gt;Mfr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1, &lt;span class="nv"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2, &lt;span class="nv"&gt;SerialNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5
usb 1-1.3: Product: USB to ATA/ATAPI bridge
usb 1-1.3: Manufacturer: JMicron
usb 1-1.3: SerialNumber: DCA5968053FF
usb-storage 1-1.3:1.0: USB Mass Storage device detected
usb-storage 1-1.3:1.0: Quirks match &lt;span class="k"&gt;for&lt;/span&gt; vid 152d pid 2329: 8020
scsi0 : usb-storage 1-1.3:1.0
scsi 0:0:0:0: Direct-Access     WDC WD10 EARS-00Y5B1           PQ: &lt;span class="m"&gt;0&lt;/span&gt; ANSI: &lt;span class="m"&gt;2&lt;/span&gt; CCS
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1953525168&lt;/span&gt; 512-byte logical blocks: &lt;span class="o"&gt;(&lt;/span&gt;1.00 TB/931 GiB&lt;span class="o"&gt;)&lt;/span&gt;
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Write Protect is off
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Mode Sense: &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;00&lt;/span&gt; 00
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; No Caching mode page found
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Assuming drive cache: write through
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; No Caching mode page found
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Assuming drive cache: write through
sd 0:0:0:0: Attached scsi generic sg0 &lt;span class="nb"&gt;type &lt;/span&gt;0
sda: sda1
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; No Caching mode page found
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Assuming drive cache: write through
sd 0:0:0:0: &lt;span class="o"&gt;[&lt;/span&gt;sda&lt;span class="o"&gt;]&lt;/span&gt; Attached SCSI disk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Device is &lt;tt class="docutils literal"&gt;sda&lt;/tt&gt;. Use &lt;strong&gt;fdisk&lt;/strong&gt; to create 2 new partitions on the USB drive:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - 20GB - root filesystem&lt;/li&gt;
&lt;li&gt;sda2 - remaining space - storage&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo fdisk /dev/sda

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p

Disk /dev/sda: 1000.2 GB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes
&lt;span class="m"&gt;255&lt;/span&gt; heads, &lt;span class="m"&gt;63&lt;/span&gt; sectors/track, &lt;span class="m"&gt;121601&lt;/span&gt; cylinders, total &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
&lt;span class="nv"&gt;Units&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk identifier: 0x00000000

Device Boot      Start         End      Blocks   Id  System

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;:
  p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;4&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
  e   extended
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-4, default 1&lt;span class="o"&gt;)&lt;/span&gt;:
Using default value 1
First sector &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 2048&lt;span class="o"&gt;)&lt;/span&gt;:
Using default value 2048
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;2048-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;: +20G

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: n
Partition &lt;span class="nb"&gt;type&lt;/span&gt;:
  p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;3&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
  e   extended
Select &lt;span class="o"&gt;(&lt;/span&gt;default p&lt;span class="o"&gt;)&lt;/span&gt;: p
Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-4, default 2&lt;span class="o"&gt;)&lt;/span&gt;:
Using default value 2
First sector &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 41945088&lt;span class="o"&gt;)&lt;/span&gt;:
Using default value 41945088
Last sector, +sectors or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;41945088-1953525167, default 1953525167&lt;span class="o"&gt;)&lt;/span&gt;:
Using default value 1953525167

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: p

Disk /dev/sda: 1000.2 GB, &lt;span class="m"&gt;1000204886016&lt;/span&gt; bytes
&lt;span class="m"&gt;255&lt;/span&gt; heads, &lt;span class="m"&gt;63&lt;/span&gt; sectors/track, &lt;span class="m"&gt;121601&lt;/span&gt; cylinders, total &lt;span class="m"&gt;1953525168&lt;/span&gt; sectors
&lt;span class="nv"&gt;Units&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disk identifier: 0x00000000

Device Boot      Start         End      Blocks   Id  System
/dev/sda1            &lt;span class="m"&gt;2048&lt;/span&gt;    &lt;span class="m"&gt;41945087&lt;/span&gt;    &lt;span class="m"&gt;20971520&lt;/span&gt;   &lt;span class="m"&gt;83&lt;/span&gt;  Linux
/dev/sda2        &lt;span class="m"&gt;41945088&lt;/span&gt;  &lt;span class="m"&gt;1953525167&lt;/span&gt;   &lt;span class="m"&gt;955790040&lt;/span&gt;   &lt;span class="m"&gt;83&lt;/span&gt;  Linux

Command &lt;span class="o"&gt;(&lt;/span&gt;m &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;: w
The partition table has been altered!

Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
Syncing disks.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Format the new partitions using filesystem &lt;tt class="docutils literal"&gt;ext4&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mke2fs -t ext4 -L rootfs /dev/sda1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mke2fs -t ext4 -L storage /dev/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rsync"&gt;
&lt;h2&gt;4. Rsync&lt;/h2&gt;
&lt;p&gt;Mount the newly-formatted &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition to &lt;tt class="docutils literal"&gt;/mnt&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mount -t ext4 /dev/sda1 /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;strong&gt;rsync&lt;/strong&gt; to copy contents of &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; on the SD card to the &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; partition on the USB device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rsync -axv / /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="new-rootfs"&gt;
&lt;h2&gt;5. New rootfs&lt;/h2&gt;
&lt;div class="section" id="on-the-sd-card"&gt;
&lt;h3&gt;5.1 On the SD card&lt;/h3&gt;
&lt;p&gt;Modify options in &lt;tt class="docutils literal"&gt;/boot/cmdline.txt&lt;/tt&gt; to point the bootloader to &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; filesystem on the USB device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Original:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p2 rootwait

Modified:
dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sda1 rootwait &lt;span class="nv"&gt;rootdelay&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-usb-hard-drive"&gt;
&lt;h3&gt;5.2 On the USB hard drive&lt;/h3&gt;
&lt;p&gt;Create new mountpoint for the &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt; partition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /mnt/media/USB0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify options in &lt;tt class="docutils literal"&gt;/mnt/etc/fstab&lt;/tt&gt; to mount &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;storage&lt;/tt&gt; partitions at boot. &lt;a class="footnote-reference" href="#id6" id="id3"&gt;[3]&lt;/a&gt; Example for &lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;sda2&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;proc            /proc           proc    defaults          &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;span class="c"&gt;# comment out root filesystem on SD card&lt;/span&gt;
&lt;span class="c"&gt;#/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1&lt;/span&gt;
&lt;span class="c"&gt;# partitions on USB hard drive&lt;/span&gt;
/dev/sda1       /       ext4    defaults,noatime          &lt;span class="m"&gt;0&lt;/span&gt;       1
/dev/sda2       /media/USB0 ext4    defaults,noatime      &lt;span class="m"&gt;0&lt;/span&gt;       0
/dev/mmcblk0p1  /boot/firmware  vfat    defaults          &lt;span class="m"&gt;0&lt;/span&gt;       2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reboot"&gt;
&lt;h2&gt;6. Reboot&lt;/h2&gt;
&lt;p&gt;Save modifications and reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log in and check out the new filesystem layout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1        20G  590M   18G   4% /
devtmpfs        458M  4.0K  458M   1% /dev
none            4.0K     &lt;span class="m"&gt;0&lt;/span&gt;  4.0K   0% /sys/fs/cgroup
none             93M  280K   93M   1% /run
/dev/sda2       898G  326G  527G  39% /media/USB0
none            5.0M     &lt;span class="m"&gt;0&lt;/span&gt;  5.0M   0% /run/lock
none            462M     &lt;span class="m"&gt;0&lt;/span&gt;  462M   0% /run/shm
none            100M     &lt;span class="m"&gt;0&lt;/span&gt;  100M   0% /run/user
/dev/mmcblk0p1   64M  9.9M   55M  16% /boot/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="post-install"&gt;
&lt;h2&gt;7. Post-install&lt;/h2&gt;
&lt;div class="section" id="administrator"&gt;
&lt;h3&gt;7.1 Administrator&lt;/h3&gt;
&lt;p&gt;Ubuntu is a great operating system but a not-so-great username and a lousy password. Example: change default username/group &lt;tt class="docutils literal"&gt;ubuntu&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;pi&lt;/tt&gt; and set a new password.&lt;/p&gt;
&lt;p&gt;Unlock &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; account by setting a new password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo passwd root
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log out and back in as &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; and configure &lt;tt class="docutils literal"&gt;pi&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# usermod -l pi -m -d /home/pi ubuntu&lt;/span&gt;
&lt;span class="c"&gt;# groupmod -n pi ubuntu&lt;/span&gt;
&lt;span class="c"&gt;# passwd pi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Optional:&lt;/strong&gt; Re-lock &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; by disabling the password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo passwd -dl root
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hostname"&gt;
&lt;h3&gt;7.2 Hostname&lt;/h3&gt;
&lt;p&gt;Example: Modify hostname &lt;tt class="docutils literal"&gt;ubuntu&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;raspberry&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;/etc/hostname&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt; and restart the &lt;tt class="docutils literal"&gt;hostname&lt;/tt&gt; service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service hostname restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log out and back in and hostname &lt;tt class="docutils literal"&gt;raspberry&lt;/tt&gt; is visible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="timezone"&gt;
&lt;h3&gt;7.3 Timezone&lt;/h3&gt;
&lt;p&gt;Default timezone is &lt;tt class="docutils literal"&gt;UTC&lt;/tt&gt;. Modify to appropriate value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat /etc/timezone
Etc/UTC
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg-reconfigure tzdata  &lt;span class="c"&gt;# ...and follow the interactive menu to set (example) &amp;#39;America/Toronto&amp;#39;...&lt;/span&gt;

Current default &lt;span class="nb"&gt;time &lt;/span&gt;zone: &lt;span class="s1"&gt;&amp;#39;America/Toronto&amp;#39;&lt;/span&gt;
Local &lt;span class="nb"&gt;time &lt;/span&gt;is now:      Sun Mar  &lt;span class="m"&gt;1&lt;/span&gt; 18:28:32 EST 2015.
Universal Time is now:  Sun Mar  &lt;span class="m"&gt;1&lt;/span&gt; 23:28:32 UTC 2015.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrade"&gt;
&lt;h3&gt;7.4 Upgrade&lt;/h3&gt;
&lt;p&gt;With the newly-configured &lt;tt class="docutils literal"&gt;rootfs&lt;/tt&gt; up-and-running now is a good time to update Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swap"&gt;
&lt;h3&gt;7.5 Swap&lt;/h3&gt;
&lt;p&gt;Ubuntu on Pi does not include a swap partition/file. Generate a (default) 2GB &lt;tt class="docutils literal"&gt;/var/swap&lt;/tt&gt; file at boot by installing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install dphys-swapfile
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="static-address"&gt;
&lt;h3&gt;7.6 Static Address&lt;/h3&gt;
&lt;p&gt;A Raspberry Pi that is going to stay home and run as a server can be configured to use a &lt;strong&gt;static network address&lt;/strong&gt;. Sample &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; modification that disables &lt;tt class="docutils literal"&gt;dhcp&lt;/tt&gt; and sets ip address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt; and connects to a router (that handles DNS) at &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#iface eth0 inet dhcp&lt;/span&gt;
auto eth0
iface eth0 inet static
    address 192.168.1.88
    netmask 255.255.255.0
    gateway 192.168.1.1
    dns-nameservers 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="openssh-server"&gt;
&lt;h3&gt;7.7 OpenSSH Server&lt;/h3&gt;
&lt;p&gt;Install and configure SSH for remote access to our (soon-to-be) headless Pi home server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check out &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;securing access to remote servers using SSH keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.raspberrypi.org/forums/viewtopic.php?f=29&amp;amp;t=44177"&gt;Discussion thread (raspberrypi.org/forums)&lt;/a&gt; about moving root to external USB storage.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Version 1&lt;/a&gt; used Raspbian on a Raspberry Pi Model B.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Pi requires an SD card to boot so we continue using original &lt;tt class="docutils literal"&gt;/boot&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="raspberry pi"></category><category term="ubuntu"></category><category term="linux"></category><category term="networks"></category></entry><entry><title>A bit of unplanned Grub2 surgery</title><link href="http://www.circuidipity.com/20150227.html" rel="alternate"></link><updated>2015-02-27T18:40:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-27:20150227.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;PROBLEM:&lt;/strong&gt; Late night experiments &lt;a class="reference external" href="http://www.circuidipity.com/grubs.html"&gt;loading GRUB on USB sticks&lt;/a&gt; resulted in mucking up Grub on my &lt;strong&gt;primary&lt;/strong&gt; machine. After a reboot instead of a boot menu I was greeted with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grub &amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whoops.&lt;/p&gt;
&lt;p&gt;Ubuntubook is running Ubuntu 14.04 LTS with a boot partition on &lt;tt class="docutils literal"&gt;sda1&lt;/tt&gt;, LUKS-encrypted root on &lt;tt class="docutils literal"&gt;sda3&lt;/tt&gt;, and the &lt;tt class="docutils literal"&gt;3.19.0&lt;/tt&gt; Linux kernel. Since the boot loader hadn't fallen into rescue mode there was hope that the essential stuff was in place but for some reason the config was not being read. A quick &lt;tt class="docutils literal"&gt;ls&lt;/tt&gt; in the Grub shell confirmed that &lt;tt class="docutils literal"&gt;/boot/grub/grub.cfg&lt;/tt&gt;, kernels, initrd files were present.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; After a few tries I found the right parameters for a manual boot... specifically &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;root=/dev/mapper/sda3_crypt&lt;/span&gt;&lt;/tt&gt; NOT &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;root=/dev/sda3&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grub&amp;gt; linux &lt;span class="o"&gt;(&lt;/span&gt;hd0,1&lt;span class="o"&gt;)&lt;/span&gt;/vmlinuz-3.19.0-031900-generic &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mapper/sda3_crypt ro
grub&amp;gt; initrd &lt;span class="o"&gt;(&lt;/span&gt;hd0,1&lt;span class="o"&gt;)&lt;/span&gt;/initrd.img-3.19.0-031900-generic
grub&amp;gt; boot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Boot process begins, pauses for the LUKS passphrase prompt to unlock root, and makes it to the login screen. Good stuff.&lt;/p&gt;
&lt;p&gt;Examine &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt; and everything looks OK. Update and &lt;strong&gt;reinstall grub&lt;/strong&gt; to the MBR:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo grub-install /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot and back in business!&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://help.ubuntu.com/community/Grub2/Troubleshooting#Post_Boot_Follow_Up"&gt;Grub 2 Troubleshooting - Post Boot Follow Up&lt;/a&gt;&lt;/p&gt;
</summary><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Ubuntu Keyboard Shortcuts</title><link href="http://www.circuidipity.com/ubuntu-keyboard-shortcuts.html" rel="alternate"></link><updated>2015-02-25T19:47:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-25:ubuntu-keyboard-shortcuts.html</id><summary type="html">&lt;img alt="Ubuntu" class="align-right" src="images/logo-ubuntu_cof-white_orange-hex-4.png" style="width: 214px; height: 214px;" /&gt;
&lt;p&gt;I am exploring &lt;strong&gt;keyboard shortcuts&lt;/strong&gt; to improve workflow efficiency and happy to discover that Ubuntu's &lt;strong&gt;Unity&lt;/strong&gt; desktop is configured very keyboard-friendly by default. Here are the Ubuntu/application key combos that I find most useful...&lt;/p&gt;
&lt;div class="section" id="launcher"&gt;
&lt;h2&gt;Launcher&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Super&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open Dash&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Super(Hold)&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;display shortcuts&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between Launcher applications&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-(1-9)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;run application (1-9) on Launcher&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F2&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;run command&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="switching"&gt;
&lt;h2&gt;Switching&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between running apps&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Alt-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between running apps from all workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-S&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show and select workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Alt-(Left,Right,Up,Down)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;navigate between workspaces&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="windows"&gt;
&lt;h2&gt;Windows&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show windows in current workspace&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Super-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show windows in all workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-Up&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;maximize window&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-Down&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;minimize window&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-Space&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open window menu&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F4&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close window&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="applications"&gt;
&lt;h2&gt;Applications&lt;/h2&gt;
&lt;div class="section" id="firefox"&gt;
&lt;h3&gt;Firefox&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-T&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open new tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch tab backwards&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-L&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;enter new address/search&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;F5&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;reload page&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-terminal"&gt;
&lt;h3&gt;Gnome Terminal&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-T&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open new tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-(1-9)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch to tab {1-9}&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close tab&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="bash"&gt;
&lt;h3&gt;Bash&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-A&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move to the start of the line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-E&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move to the end of the line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-B&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move back one word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move forward one word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;erase a word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-U&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;erase a line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-L&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;clear screen&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-R&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;reverse incremental search of history&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="tmux"&gt;
&lt;h3&gt;Tmux&lt;/h3&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux cheatsheet&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-screenshot"&gt;
&lt;h3&gt;Gnome Screenshot&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;PrtScr&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;screenshot&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-PrtScr&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;window screenshot&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-PrtScr&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;selected area screenshot&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="custom"&gt;
&lt;h2&gt;Custom&lt;/h2&gt;
&lt;div class="section" id="move-windows-between-displays"&gt;
&lt;h3&gt;Move windows between displays&lt;/h3&gt;
&lt;p&gt;At home I connect my &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Ubuntubook&lt;/a&gt; to an external 24&amp;quot; display to form a combined desktop across the 2 devices. I use &lt;strong&gt;Compiz&lt;/strong&gt; to create a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-W&lt;/span&gt;&lt;/tt&gt; key combo to move windows back and forth between displays:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install compizconfig-settings-manager compiz-plugins-extra
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the Dash and run &lt;tt class="docutils literal"&gt;compiz settings manager&lt;/tt&gt;. Enable and select the &lt;tt class="docutils literal"&gt;Window Management &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Put&lt;/tt&gt; plugin and configure a key shortcut for &lt;tt class="docutils literal"&gt;Put to Next Output&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="Compiz Put Plugin" class="align-center" src="images/compiz_put.png" style="width: 899px; height: 565px;" /&gt;
&lt;img alt="Compiz Put to Next Output" class="align-center" src="images/compiz_put_next.png" style="width: 899px; height: 565px;" /&gt;
&lt;p&gt;Built-in screen &lt;tt class="docutils literal"&gt;(1366x768)&lt;/tt&gt; and external display &lt;tt class="docutils literal"&gt;(1920x1080)&lt;/tt&gt; form a combined desktop of different resolutions. Select &lt;tt class="docutils literal"&gt;Put &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Misc. Options &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Activate &amp;quot;Avoid Offscreen&amp;quot;&lt;/tt&gt; to ensure maximized windows are properly resized when moved between displays.&lt;/p&gt;
&lt;p&gt;Logout and back in to activate modifications.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://askubuntu.com/questions/141752/keyboard-shortcut-to-move-windows-between-monitors"&gt;Move windows between monitors&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chromebook-keyboard-shortcuts"&gt;
&lt;h3&gt;Chromebook keyboard shortcuts&lt;/h3&gt;
&lt;p&gt;Top row on my Ubuntubook keyboard has a series of shortcut icons (brightness, volume, etc.) that identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the &lt;tt class="docutils literal"&gt;Search&lt;/tt&gt; key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Enable these keyboard shortcuts in Ubuntu by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbacklight&lt;/tt&gt; - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with pactl&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xvkbd&lt;/tt&gt; - send characters to another client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys xbacklight pulseaudio-utils xvkbd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Chromebook to (L)ubuntubook&lt;/a&gt; for a sample configuration.&lt;/p&gt;
&lt;p&gt;Next thing is to start working on my touch-typing!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="linux"></category></entry></feed>