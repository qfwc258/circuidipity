<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity - Daniel Wayne Armstrong</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.atom.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2017-05-19T10:50:00-04:00</updated><entry><title>Automatic backups over the LAN</title><link href="http://www.circuidipity.com/backup-over-lan.html" rel="alternate"></link><published>2017-05-19T10:50:00-04:00</published><updated>2017-05-19T10:50:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-19:/backup-over-lan.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #4 .:&lt;/a&gt; Make incremental and automatic backups of a home folder to a local server using &lt;strong&gt;SSH + rsync + cron&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;raised-from-the-dead netbook&lt;/a&gt; on the home network. &lt;strong&gt;Client&lt;/strong&gt; desktop is configured to perform a daily sync of its &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to server.&lt;/p&gt;
&lt;div class="section" id="server-and-client-ssh-keys"&gt;
&lt;h3&gt;0. Server and Client …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #4 .:&lt;/a&gt; Make incremental and automatic backups of a home folder to a local server using &lt;strong&gt;SSH + rsync + cron&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;raised-from-the-dead netbook&lt;/a&gt; on the home network. &lt;strong&gt;Client&lt;/strong&gt; desktop is configured to perform a daily sync of its &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to server.&lt;/p&gt;
&lt;div class="section" id="server-and-client-ssh-keys"&gt;
&lt;h3&gt;0. Server and Client: SSH keys&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;Create cryptographic keys and disable password logins&lt;/a&gt; to make traffic between server and client more secure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="server-backup-directory"&gt;
&lt;h3&gt;1. Server: backup directory&lt;/h3&gt;
&lt;p&gt;Create a directory to store the backup ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p /path/to/backup
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="client-hosts-alias"&gt;
&lt;h3&gt;2. Client: hosts alias&lt;/h3&gt;
&lt;p&gt;Set the IP address and hostname of server in &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;. Sample entry ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;192.168.1.88    netbook.lan
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="client-sync"&gt;
&lt;h3&gt;3. Client: sync&lt;/h3&gt;
&lt;p&gt;Test synching &lt;tt class="docutils literal"&gt;$HOME/&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;netbook.lan:/path/to/backup/&lt;/span&gt;&lt;/tt&gt; with the &lt;tt class="docutils literal"&gt;rsync &lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; option. Example ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync --dry-run --archive --delete --verbose &lt;span class="nv"&gt;$HOME&lt;/span&gt;/ netbook.lan:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK drop &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; and re-run the command to make a proper backup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-script"&gt;
&lt;h3&gt;4. Client: script&lt;/h3&gt;
&lt;p&gt;Start piling on the options to rsync and the command quickly becomes awkward and easy to get wrong. Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt; is useful but can generate unpleasant surprises. A few things I &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--exclude&lt;/span&gt;&lt;/tt&gt; from a &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; sync are &lt;tt class="docutils literal"&gt;[Cc]ache&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;[Tt]rash&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;[Tt]humbnails&lt;/tt&gt;, and pay attention to the trailing forward-slash &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; on directories.&lt;/p&gt;
&lt;p&gt;I create a shell script &lt;tt class="docutils literal"&gt;teleportHome.sh&lt;/tt&gt; that makes use of the &lt;tt class="docutils literal"&gt;keychain&lt;/tt&gt; utility to &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;manage SSH keys for password-less logins to servers&lt;/a&gt; and place in &lt;tt class="docutils literal"&gt;$HOME/bin&lt;/tt&gt;. Sample ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;SYNC_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--archive --verbose --delete&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;EXCLUDE_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--exclude=*[Cc]ache*/ --exclude=*[Tt]rash*/ --exclude=local/ \&lt;/span&gt;
&lt;span class="s2"&gt;--exclude=*[Tt]humbnail*/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DESTINATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;netbook.lan:/path/to/backup/&amp;quot;&lt;/span&gt;

. &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/.keychain/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-sh
rsync &lt;span class="nv"&gt;$SYNC_OPT&lt;/span&gt; &lt;span class="nv"&gt;$EXCLUDE_OPT&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/ &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DESTINATION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/teleportHome.sh"&gt;teleportHome.sh&lt;/a&gt; - A more complete script that verifies that DESTINATION exists; adds option to include (and exclude) items from a config file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-automate"&gt;
&lt;h3&gt;5. Client: automate&lt;/h3&gt;
&lt;p&gt;Automate the backups by running &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; and creating a &lt;strong&gt;cron job&lt;/strong&gt;. Sample entry runs the backup script daily at 02:30 ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; * * * . /home/USERNAME/.keychain/&lt;span class="k"&gt;$(&lt;/span&gt;/bin/hostname&lt;span class="k"&gt;)&lt;/span&gt;-sh&lt;span class="p"&gt;;&lt;/span&gt; /home/USERNAME/bin/teleportHome.sh netbook.lan:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="network"></category><category term="ssh"></category><category term="crypto"></category><category term="linux"></category></entry><entry><title>LVM and encrypted Logical Volumes</title><link href="http://www.circuidipity.com/lvm-crypt-lv.html" rel="alternate"></link><published>2017-05-13T16:43:00-04:00</published><updated>2017-05-13T16:43:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-13:/lvm-crypt-lv.html</id><summary type="html">&lt;p&gt;I have been playing with the &lt;strong&gt;Logical Volume Manager&lt;/strong&gt; (LVM) on my recent Debian installs. Instead of creating a traditional partition layout on a hard drive, LVM adds a layer of abstraction over physical storage that allows the creation of &amp;quot;virtual&amp;quot; partitions.&lt;/p&gt;
&lt;p&gt;For my &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;netbook home server setup&lt;/a&gt; I used …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been playing with the &lt;strong&gt;Logical Volume Manager&lt;/strong&gt; (LVM) on my recent Debian installs. Instead of creating a traditional partition layout on a hard drive, LVM adds a layer of abstraction over physical storage that allows the creation of &amp;quot;virtual&amp;quot; partitions.&lt;/p&gt;
&lt;p&gt;For my &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;netbook home server setup&lt;/a&gt; I used the Debian installer's manual partitioning tools to assign a partition to LVM, create a &lt;strong&gt;Volume Group&lt;/strong&gt; (VG) and &lt;strong&gt;Logical Volumes&lt;/strong&gt; (LVs), with plenty of storage space to spare. &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; After a successful first boot I configure an encrypted container for data storage that is manually mounted by a non-root user. I don't want an unattended server halting in the boot process waiting for a passphrase or any necessary boot mountpoints to reside on an encrypted partition.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Scan my netbook for devices visible to LVM ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvmdiskscan&lt;/span&gt;
/dev/vg/root              &lt;span class="o"&gt;[&lt;/span&gt;      14.90 GiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/sda1                 &lt;span class="o"&gt;[&lt;/span&gt;     487.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/vg/swap              &lt;span class="o"&gt;[&lt;/span&gt;     952.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/sda2                 &lt;span class="o"&gt;[&lt;/span&gt;     465.28 GiB&lt;span class="o"&gt;]&lt;/span&gt; LVM physical volume
/dev/mapper/vg-swap_crypt &lt;span class="o"&gt;[&lt;/span&gt;     952.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="m"&gt;3&lt;/span&gt; disks
&lt;span class="m"&gt;1&lt;/span&gt; partition
&lt;span class="m"&gt;0&lt;/span&gt; LVM physical volume whole disks
&lt;span class="m"&gt;1&lt;/span&gt; LVM physical volume
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check for free space in the volume group ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgdisplay&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
Free  PE / Size       &lt;span class="m"&gt;115060&lt;/span&gt; / 449.45 GiB
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="create"&gt;
&lt;h3&gt;0. Create&lt;/h3&gt;
&lt;p&gt;I create a 400GB &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; logical volume in the volume group ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvcreate --size 400G vg --name data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Information about the LVs can be displayed with the &lt;tt class="docutils literal"&gt;lvdisplay&lt;/tt&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="encrypt"&gt;
&lt;h3&gt;1. Encrypt&lt;/h3&gt;
&lt;p&gt;Configure LUKS encryption on the newly-created LV ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup luksFormat /dev/vg/data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open LV &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vg-data_crypt&lt;/span&gt;&lt;/tt&gt;, format with a filesystem, and mount ... &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup open /dev/vg/data vg-data_crypt&lt;/span&gt;
&lt;span class="c1"&gt;# mkfs.ext4 -m 1 /dev/mapper/vg-data_crypt&lt;/span&gt;
&lt;span class="c1"&gt;# mount /dev/mapper/vg-data_crypt /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When finished, unmount the filesystem and close the encrypted LV ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# umount /mnt&lt;/span&gt;
&lt;span class="c1"&gt;# cryptsetup close /dev/mapper/vg-data_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mountpoint"&gt;
&lt;h3&gt;2. Mountpoint&lt;/h3&gt;
&lt;p&gt;I create a dedicated mountpoint for the LV in &lt;tt class="docutils literal"&gt;/media&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# mkdir /media/crypt_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; and allow mounting by a non-root user ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/mapper/vg-data_crypt /media/crypt_data        ext4    relatime,noauto,user       &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the LV and mount ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup open /dev/vg/data vg-data_crypt&lt;/span&gt;
$ mount /media/crypt_data
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;For setting up LVM from the beginning and learning about its tools the LVM entries on &lt;a class="reference external" href="https://wiki.debian.org/LVM"&gt;wiki.debian.org&lt;/a&gt; and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/LVM"&gt;wiki.archlinux.org&lt;/a&gt; are very helpful!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Reserved blocks can be used by privileged system processes to write to disk - useful if a full filesystem blocks users from writing - and reduce disk fragmentation. On large non-root partitions extra space can be gained by reducing the default 5% reserve to 1% with option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-m&lt;/span&gt; &amp;lt;percent&amp;gt;&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="lvm"></category><category term="crypto"></category><category term="linux"></category></entry><entry><title>Automatic security updates on Debian</title><link href="http://www.circuidipity.com/unattended-upgrades.html" rel="alternate"></link><published>2017-05-07T10:56:00-04:00</published><updated>2017-05-07T10:56:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-07:/unattended-upgrades.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #2 .:&lt;/a&gt; Fetch the latest fixes, install, and reboot (if necessary). Hands-free!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install unattended-upgrades apt-listchanges
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration file for the unattended-upgrades package is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/apt.conf.d/50unattended-upgrades&lt;/span&gt;&lt;/tt&gt;. This section controls which packages are upgraded and security updates are uncommented and enabled by …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #2 .:&lt;/a&gt; Fetch the latest fixes, install, and reboot (if necessary). Hands-free!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install unattended-upgrades apt-listchanges
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration file for the unattended-upgrades package is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/apt.conf.d/50unattended-upgrades&lt;/span&gt;&lt;/tt&gt;. This section controls which packages are upgraded and security updates are uncommented and enabled by default ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Origins-Pattern &lt;span class="o"&gt;{&lt;/span&gt;
    //
    &lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;origin=Debian,codename=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;distro_codename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,label=Debian-Security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uncomment the following line to have mail sent to root when Debian auto-installs packages ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Mail &lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm a working mail setup is in place. A package that provides &lt;tt class="docutils literal"&gt;mailx&lt;/tt&gt; must be installed ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dpkg -l &lt;span class="p"&gt;|&lt;/span&gt; grep mailx
ii  bsd-mailx                     8.1.2-0.20141216cvs-2      i386         simple mail user agent
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On a laptop consider enabling the &lt;tt class="docutils literal"&gt;MinimalSteps&lt;/tt&gt; option. This allows an upgrade to be interrupted upon shutdown (with a slight delay) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::MinimalSteps &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some security updates can require the system to be rebooted. On a server I enable automatic reboot and set the reboot to occur at a specified time (instead of immediately) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Automatic-Reboot &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Unattended-Upgrade::Automatic-Reboot-Time &lt;span class="s2"&gt;&amp;quot;04:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Activate unattended-upgrades by creating &lt;tt class="docutils literal"&gt;/etc/apt/apt.conf.d/02periodic&lt;/tt&gt;. Sample file ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;// Control parameters &lt;span class="k"&gt;for&lt;/span&gt; cron &lt;span class="nb"&gt;jobs&lt;/span&gt; by /etc/cron.daily/apt //

// Enable the update/upgrade script &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::Enable &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Do &lt;span class="s2"&gt;&amp;quot;apt-get update&amp;quot;&lt;/span&gt; automatically every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::Update-Package-Lists &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Run the &lt;span class="s2"&gt;&amp;quot;unattended-upgrade&amp;quot;&lt;/span&gt; security upgrade script every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disabled&lt;span class="o"&gt;)&lt;/span&gt;
// Requires the package &lt;span class="s2"&gt;&amp;quot;unattended-upgrades&amp;quot;&lt;/span&gt; and will write a log in /var/log/unattended-upgrades
APT::Periodic::Unattended-Upgrade &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Do &lt;span class="s2"&gt;&amp;quot;apt-get autoclean&amp;quot;&lt;/span&gt; every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::AutocleanInterval &lt;span class="s2"&gt;&amp;quot;14&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Send report mail to root ...
//  0:  no report             &lt;span class="o"&gt;(&lt;/span&gt;or null string&lt;span class="o"&gt;)&lt;/span&gt;
//  1:  progress report       &lt;span class="o"&gt;(&lt;/span&gt;actually any string&lt;span class="o"&gt;)&lt;/span&gt;
//  2:  + &lt;span class="nb"&gt;command&lt;/span&gt; outputs     &lt;span class="o"&gt;(&lt;/span&gt;remove -qq, remove 2&amp;gt;/dev/null, add -d&lt;span class="o"&gt;)&lt;/span&gt;
//  3:  + trace on
APT::Periodic::Verbose &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm notifications will be sent to root ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/apt/listchanges.conf
&lt;span class="o"&gt;[&lt;/span&gt;apt&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;frontend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pager
&lt;span class="nv"&gt;email_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;confirm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;save_seen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/apt/listchanges.db
&lt;span class="nv"&gt;which&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;news
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrade information is also logged within the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/var/log/unattended-upgrades&lt;/span&gt;&lt;/tt&gt; directory.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="debian"></category><category term="linux"></category></entry><entry><title>MITx Week 7: Plotting and Final Thoughts</title><link href="http://www.circuidipity.com/mitx-6001x-w7.html" rel="alternate"></link><published>2017-03-19T19:10:00-04:00</published><updated>2017-03-19T19:10:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-03-19:/mitx-6001x-w7.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; Last week of the course! An introduction to plotting graphs in Python. I have experimented a bit &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndStep.py"&gt;writing a script&lt;/a&gt; that collects dates (x_axis) and pedometer measurements (y_axis) from my personal logfile and generates a graph.&lt;/p&gt;
&lt;p&gt;So concludes &lt;strong&gt;MITx 6.00.1x&lt;/strong&gt;. It proved to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; Last week of the course! An introduction to plotting graphs in Python. I have experimented a bit &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndStep.py"&gt;writing a script&lt;/a&gt; that collects dates (x_axis) and pedometer measurements (y_axis) from my personal logfile and generates a graph.&lt;/p&gt;
&lt;p&gt;So concludes &lt;strong&gt;MITx 6.00.1x&lt;/strong&gt;. It proved to be a well-designed course and true to its synopsis of being a &lt;strong&gt;computer science course&lt;/strong&gt; that teaches some fundamental concepts, &lt;strong&gt;not&lt;/strong&gt; a programming course per se. Taken in that spirit (and plan on spending more than the proposed 15 hours a week) its a very worthwhile endeavour. Personally I want to learn more about Python itself and scratch some of my own itches.&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry><entry><title>MITx Week 6: Algorithmic Complexity</title><link href="http://www.circuidipity.com/mitx-6001x-w6.html" rel="alternate"></link><published>2017-03-05T17:49:00-05:00</published><updated>2017-03-05T17:49:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-03-05:/mitx-6001x-w6.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; This week we worked through understanding the inherent complexity of problems and how to reduce them to simpler subproblems which can be solved by algorithms (step-by-step recipes).&lt;/p&gt;
&lt;p&gt;A good example was near the beginning of the course when a bisection search algorithm was employed to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; This week we worked through understanding the inherent complexity of problems and how to reduce them to simpler subproblems which can be solved by algorithms (step-by-step recipes).&lt;/p&gt;
&lt;p&gt;A good example was near the beginning of the course when a bisection search algorithm was employed to progressively halve the search space to zero in on a particular integer or floating point approximation. Another interesting algorithm is &lt;strong&gt;Merge sort&lt;/strong&gt; or &amp;quot;divide-and-conquer&amp;quot; invented by John von Neumann in 1945 for merging &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Merge_sort"&gt;separate sorted lists into a single sorted list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One more week to go in the course. Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry><entry><title>MITx Week 5: Object Oriented Programming</title><link href="http://www.circuidipity.com/mitx-6001x-w5.html" rel="alternate"></link><published>2017-02-26T21:49:00-05:00</published><updated>2017-02-26T21:49:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-02-26:/mitx-6001x-w5.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; This week the focus was on Python &lt;strong&gt;classes&lt;/strong&gt; and &lt;strong&gt;inheritance&lt;/strong&gt; in the context of &lt;strong&gt;object-oriented programming&lt;/strong&gt;. Objects are a combination of data collections and the methods that operate on that data. It allows the programmer to move beyond the built-in types provided by Python (integers …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; This week the focus was on Python &lt;strong&gt;classes&lt;/strong&gt; and &lt;strong&gt;inheritance&lt;/strong&gt; in the context of &lt;strong&gt;object-oriented programming&lt;/strong&gt;. Objects are a combination of data collections and the methods that operate on that data. It allows the programmer to move beyond the built-in types provided by Python (integers, floating point numbers, strings, lists, dictionaries) and roll their own purpose-built types with methods (which is very cool)!&lt;/p&gt;
&lt;p&gt;I am still wrapping my head around the idea but I watched all the lecture videos and completed all the exercises for the week. The problem set involved creating a Python class + methods for encryption and decryption using the &lt;em&gt;Caesar Cipher&lt;/em&gt; ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea of the Caesar Cipher is to pick an integer and shift every letter of your message by that integer. In other words, suppose the shift is k . Then, all instances of the i-th letter of the alphabet that appear in the plaintext should become the (i+k)-th letter of the alphabet in the ciphertext. You will need to be careful with the case in which i + k &amp;gt; 26 (the length of the alphabet). Here is what the whole alphabet looks like shifted three spots to the right:&lt;/p&gt;
&lt;p&gt;Original:  a b c d e f g h i j k l m n o p q r s t u v w x y z&lt;/p&gt;
&lt;p&gt;3-shift:  d e f g h i j k l m n o p q r s t u v w x y z a b c&lt;/p&gt;
&lt;p&gt;Using the above key, we can quickly translate the message &amp;quot;happy&amp;quot; to &amp;quot;kdssb&amp;quot; (note how the 3-shifted alphabet wraps around at the end, so x -&amp;gt; a, y -&amp;gt; b, and z -&amp;gt; c).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The problem template provided a &lt;tt class="docutils literal"&gt;Message&lt;/tt&gt; class and a few helper methods and I had to create new objects and methods to generate dictionaries to encrypt and decrypt plaintext messages. It (eventually) works!&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry><entry><title>MITx Week 4: Testing, Debugging, Exceptions, and Assertions</title><link href="http://www.circuidipity.com/mitx-6001x-w4.html" rel="alternate"></link><published>2017-02-12T22:19:00-05:00</published><updated>2017-02-12T22:19:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-02-12:/mitx-6001x-w4.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I have worked my way through all lectures and exercises and problem sets released to date. This week was all about &lt;strong&gt;defensive programming&lt;/strong&gt;. I will have more to say about this later ... but right now I am deep into the online &lt;strong&gt;Midterm Exam&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I have worked my way through all lectures and exercises and problem sets released to date. This week was all about &lt;strong&gt;defensive programming&lt;/strong&gt;. I will have more to say about this later ... but right now I am deep into the online &lt;strong&gt;Midterm Exam&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry><entry><title>MITx Week 3.5: Textbook and Syntax</title><link href="http://www.circuidipity.com/mitx-6001x-w3-5.html" rel="alternate"></link><published>2017-02-05T22:59:00-05:00</published><updated>2017-02-05T22:59:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-02-05:/mitx-6001x-w3-5.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I have worked my way through all lectures and exercises and problem sets released to date. MITx will release coursework for &lt;em&gt;Week 4&lt;/em&gt; on February 7th.&lt;/p&gt;
&lt;p&gt;I picked up a copy of the (optional) course textbook: &lt;a class="reference external" href="https://mitpress.mit.edu/books/introduction-computation-and-programming-using-python-0"&gt;Introduction to Computation and Programming Using Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I have worked my way through all lectures and exercises and problem sets released to date. MITx will release coursework for &lt;em&gt;Week 4&lt;/em&gt; on February 7th.&lt;/p&gt;
&lt;p&gt;I picked up a copy of the (optional) course textbook: &lt;a class="reference external" href="https://mitpress.mit.edu/books/introduction-computation-and-programming-using-python-0"&gt;Introduction to Computation and Programming Using Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am writing my Python code using the &lt;strong&gt;Neovim&lt;/strong&gt; text editor and I added the &lt;a class="reference external" href="https://github.com/vim-syntastic/syntastic"&gt;Syntastic&lt;/a&gt; syntax checking plugin. It provides a framework for managing syntax files installed separately by the user for various programming languages.&lt;/p&gt;
&lt;div class="section" id="install-and-configure"&gt;
&lt;h2&gt;Install and configure&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Install syntastic plugin using &lt;a class="reference external" href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;. Edit Neovim's &lt;tt class="docutils literal"&gt;init.vim&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Plugin &lt;span class="s1"&gt;&amp;#39;vim-syntastic/syntastic&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and add some recommended defaults for beginners ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; statusline+&lt;span class="o"&gt;=&lt;/span&gt;%#warningmsg#
&lt;span class="nb"&gt;set&lt;/span&gt; statusline+&lt;span class="o"&gt;=&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;SyntasticStatuslineFlag&lt;span class="o"&gt;()}&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; statusline+&lt;span class="o"&gt;=&lt;/span&gt;%*

&lt;span class="nb"&gt;let&lt;/span&gt; g:syntastic_always_populate_loc_list &lt;span class="o"&gt;=&lt;/span&gt; 1
&lt;span class="nb"&gt;let&lt;/span&gt; g:syntastic_auto_loc_list &lt;span class="o"&gt;=&lt;/span&gt; 1
&lt;span class="nb"&gt;let&lt;/span&gt; g:syntastic_check_on_open &lt;span class="o"&gt;=&lt;/span&gt; 1
&lt;span class="nb"&gt;let&lt;/span&gt; g:syntastic_check_on_wq &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Install the &lt;strong&gt;pylint&lt;/strong&gt; package (available in Ubuntu) for checking Python syntax ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install pylint pylint3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Syntastic defaults to using pylint for Python 2 syntax. I am using Python 3 for MITx coursework so I once again modify &lt;tt class="docutils literal"&gt;init.vim&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; g:syntastic_python_pylint_exe &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;python3 -m pylint3&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Onward!&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry><entry><title>The Dark Forest and Death's End</title><link href="http://www.circuidipity.com/deaths-end.html" rel="alternate"></link><published>2017-02-04T20:53:00-05:00</published><updated>2017-02-04T20:53:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-02-04:/deaths-end.html</id><summary type="html">&lt;img alt="Death's End" class="align-left" src="images/deaths-end.jpg" style="width: 150px; height: 225px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;The Dark Forest&lt;/strong&gt; and &lt;strong&gt;Death's End&lt;/strong&gt; &lt;em&gt;by Cixin Liu, translated by Ken Liu&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 978-0765377081 and 978-0765377104)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A few nights ago I finished reading the final volume - &lt;em&gt;Death's End&lt;/em&gt; - in Liu Cixin's &lt;em&gt;Three-Body Problem&lt;/em&gt; trilogy and was so agitated and overwhelmed by the author's vision I had to go out …&lt;/p&gt;</summary><content type="html">&lt;img alt="Death's End" class="align-left" src="images/deaths-end.jpg" style="width: 150px; height: 225px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;The Dark Forest&lt;/strong&gt; and &lt;strong&gt;Death's End&lt;/strong&gt; &lt;em&gt;by Cixin Liu, translated by Ken Liu&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 978-0765377081 and 978-0765377104)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A few nights ago I finished reading the final volume - &lt;em&gt;Death's End&lt;/em&gt; - in Liu Cixin's &lt;em&gt;Three-Body Problem&lt;/em&gt; trilogy and was so agitated and overwhelmed by the author's vision I had to go out in the dark in the snow and cold on the local wilderness trail and walk it off! Its the first work of Chinese science fiction I have read and the three volumes take the reader from the 1960s Cultural Revolution to the end of this Universe.&lt;/p&gt;
&lt;p&gt;The first volume - &lt;a class="reference external" href="http://www.circuidipity.com/three-body-problem.html"&gt;The Three-Body Problem&lt;/a&gt; - has a politically persecuted scientist reveal Earth's location to an alien civilization, which dispatches an invasion fleet to conquer the Solar System. Volume II - &lt;em&gt;The Dark Forest&lt;/em&gt; - reveals &lt;em&gt;dark forest strategy&lt;/em&gt; in a universe filled with hunters silently hunting other hunters, the worst-case scenario of possible universes. The first two books are good but the third volume ... wow. What should we value when everything is ground to dust by Time? How can Nature produce creatures that can contemplate such things? How can Nature produce creatures that can view black scratches on white backgrounds, bound between covers, and think and feel things that are entirely beyond anything of personal experience?&lt;/p&gt;
</content><category term="books"></category></entry><entry><title>MITx Week 3: Lists and Dictionaries</title><link href="http://www.circuidipity.com/mitx-6001x-w3.html" rel="alternate"></link><published>2017-01-29T20:35:00-05:00</published><updated>2017-01-29T20:35:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-01-29:/mitx-6001x-w3.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I finished the &lt;em&gt;Week 2 Problem Set&lt;/em&gt; and am working my way through this week's lectures and exercises for the Python &lt;strong&gt;list&lt;/strong&gt; and &lt;strong&gt;dictionary&lt;/strong&gt; data structures. While the course is &amp;quot;Computer Science and Programming Using Python&amp;quot; and emphasizes the computer science bit, I sought out …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; I finished the &lt;em&gt;Week 2 Problem Set&lt;/em&gt; and am working my way through this week's lectures and exercises for the Python &lt;strong&gt;list&lt;/strong&gt; and &lt;strong&gt;dictionary&lt;/strong&gt; data structures. While the course is &amp;quot;Computer Science and Programming Using Python&amp;quot; and emphasizes the computer science bit, I sought out another resource to shed more light on Python itself and dug into what looks to be a good Creative Commons-licensed programming book: &lt;a class="reference external" href="https://automatetheboringstuff.com/"&gt;Automate the Boring Stuff with Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry></feed>