<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity - Daniel Wayne Armstrong</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feeds/daniel-wayne-armstrong.atom.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2017-01-07T07:56:00-05:00</updated><entry><title>The Unseen World</title><link href="http://www.circuidipity.com/unseen-world.html" rel="alternate"></link><published>2017-01-07T07:56:00-05:00</published><updated>2017-01-07T07:56:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-01-07:/unseen-world.html</id><summary type="html">&lt;img alt="The Unseen World" class="align-right" src="images/unseen_world_cover2.jpg" style="width: 150px; height: 228px;" /&gt;
&lt;p&gt;&lt;strong&gt;The Unseen World&lt;/strong&gt; &lt;em&gt;by Liz Moore&lt;/em&gt; (ISBN: 0393241688) .: The first book I read in 2017 has been doing a slow burn in my head these past few days. Ada Sibelius is the only child of David, a computer scientist and artificial intelligence pioneer at a thinly-disguised 1980s-era MIT. Homeschooled by …&lt;/p&gt;</summary><content type="html">&lt;img alt="The Unseen World" class="align-right" src="images/unseen_world_cover2.jpg" style="width: 150px; height: 228px;" /&gt;
&lt;p&gt;&lt;strong&gt;The Unseen World&lt;/strong&gt; &lt;em&gt;by Liz Moore&lt;/em&gt; (ISBN: 0393241688) .: The first book I read in 2017 has been doing a slow burn in my head these past few days. Ada Sibelius is the only child of David, a computer scientist and artificial intelligence pioneer at a thinly-disguised 1980s-era MIT. Homeschooled by her father and with his fellow researchers as her only childhood friends, Ada is forced to grow up in a hurry when David's health begins a downward spiral. She is placed in the care of one of her father's colleagues and finds herself not only in new surroundings but embroiled in a growing mystery about her father's true identity.&lt;/p&gt;
&lt;p&gt;What does it mean to possess a &lt;em&gt;self&lt;/em&gt;, either biological or digital? One moment to the next I feel attached to a particular identity though I understand that everything is in flux. Years from now (hopefully!) there will be a person that makes the claim to being me. Will that be true? &lt;em&gt;Unseen&lt;/em&gt; is a story about the accretion of memory, its fabrication, transmission, dissolution, and as a means to immortality.&lt;/p&gt;
</content><category term="books"></category></entry><entry><title>GNU GRUB</title><link href="http://www.circuidipity.com/grub.html" rel="alternate"></link><published>2017-01-01T14:34:00-05:00</published><updated>2017-01-01T14:34:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-01-01:/grub.html</id><summary type="html">&lt;p&gt;A few generic tweaks I add to Ubuntu's configuration (location: &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;) of the &lt;strong&gt;GNU GRand Unified Bootloader&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="display-menu"&gt;
&lt;h2&gt;Display menu&lt;/h2&gt;
&lt;p&gt;Default is to hide the boot menu and - after a slight delay - start loading the system. To make the menu visible, comment out the HIDDEN settings and set a …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;A few generic tweaks I add to Ubuntu's configuration (location: &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;) of the &lt;strong&gt;GNU GRand Unified Bootloader&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="display-menu"&gt;
&lt;h2&gt;Display menu&lt;/h2&gt;
&lt;p&gt;Default is to hide the boot menu and - after a slight delay - start loading the system. To make the menu visible, comment out the HIDDEN settings and set a TIMEOUT in seconds ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#GRUB_HIDDEN_TIMEOUT=0&lt;/span&gt;
&lt;span class="c1"&gt;#GRUB_HIDDEN_TIMEOUT_QUIET=true&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_TIMEOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="make-some-noise"&gt;
&lt;h2&gt;Make some noise&lt;/h2&gt;
&lt;p&gt;It is a good thing to start Linux with a bit of song ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Uncomment to get a beep at grub start ... how about &amp;#39;Close Encounters&amp;#39;?&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_INIT_TUNE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;480 900 2 1000 2 800 2 400 2 600 3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="black-screen"&gt;
&lt;h2&gt;Black screen&lt;/h2&gt;
&lt;p&gt;On some devices I run into this issue: &lt;a class="reference external" href="https://bugs.launchpad.net/ubuntu/+source/cryptsetup/+bug/1375435"&gt;&amp;quot;Black screen instead of password prompt for boot encryption&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have to blindly enter the passphrase for my LUKS-encrypted partitions and &lt;tt class="docutils literal"&gt;ALT+F1&lt;/tt&gt; to console. Trying to remove GRUB options &lt;tt class="docutils literal"&gt;splash&lt;/tt&gt; and/or &lt;tt class="docutils literal"&gt;quiet&lt;/tt&gt; results in the inability to enter the passphrase at all and a hard reset is required.&lt;/p&gt;
&lt;p&gt;To fix, add ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Force the kernel to boot in normal text mode with &amp;#39;=text&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_GFXPAYLOAD_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;text
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See: &lt;a class="reference external" href="https://www.gnu.org/software/grub/manual/html_node/gfxpayload.html"&gt;GNU gfxpayload&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="wallpaper"&gt;
&lt;h2&gt;Wallpaper&lt;/h2&gt;
&lt;p&gt;Add a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/generic/boot/grub/grub_moon_jupiter_moons.tga"&gt;background image&lt;/a&gt; saved in &lt;tt class="docutils literal"&gt;.tga&lt;/tt&gt; format to GRUB menu ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Wallpaper&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_BACKGROUND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/boot/grub/grub_moon_jupiter_moons.tga&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;update-grub&lt;/span&gt;&lt;/tt&gt; after any file modifications. Source: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/config/generic/etc/default/grub"&gt;grub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy (hacking) New Year!&lt;/p&gt;
&lt;/div&gt;
</content><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Centauri Oak</title><link href="http://www.circuidipity.com/centauri-oak.html" rel="alternate"></link><published>2016-09-07T15:17:00-04:00</published><updated>2016-09-07T15:17:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-09-07:/centauri-oak.html</id><summary type="html">&lt;p&gt;One of my favourite blogs is &lt;strong&gt;Paul Gilster's&lt;/strong&gt; &lt;a class="reference external" href="http://www.centauri-dreams.org/"&gt;Centauri Dreams&lt;/a&gt;. The frequency and quality of posts is fantastic!&lt;/p&gt;
&lt;p&gt;All the recent news about &lt;strong&gt;Proxima b&lt;/strong&gt; and the &lt;a class="reference external" href="https://breakthroughinitiatives.org/Initiative/3"&gt;Breakthrough Starshot&lt;/a&gt; project spurred me to start reading his earlier book by the same name that inspired the blog. I like this bit …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of my favourite blogs is &lt;strong&gt;Paul Gilster's&lt;/strong&gt; &lt;a class="reference external" href="http://www.centauri-dreams.org/"&gt;Centauri Dreams&lt;/a&gt;. The frequency and quality of posts is fantastic!&lt;/p&gt;
&lt;p&gt;All the recent news about &lt;strong&gt;Proxima b&lt;/strong&gt; and the &lt;a class="reference external" href="https://breakthroughinitiatives.org/Initiative/3"&gt;Breakthrough Starshot&lt;/a&gt; project spurred me to start reading his earlier book by the same name that inspired the blog. I like this bit ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even as a starship embodies our dreams, it also casts light on our history. Lord Collingwood (1748-1810) was Nelson's second in command at the battle of Trafalgar, taking command of the fleet when Nelson was mortally wounded. Collingwood knew that the British oak used in ships built during the Napoleonic wars had been planted during the reign of the Stuarts, some two hundred years earlier, and that it had been designed for future use in the Royal Navy. He would go on to encourage plantings of oak that would be ready for the Navy a hundred and fifty years after his death.&lt;/p&gt;
&lt;p&gt;In an era of quickly fabricated materials, we forget our once deep reliance on the slow processes of nature, and the need to adapt to their rhythms. Interstellar flight demands perspectives as profoundly attuned to its goals as those of Collingwood's foresters, and a commitment to what Tennyson once called &amp;quot;the long result of time.&amp;quot; Alpha Centauri, or other dazzling, distant targets like Epsilon Eridani or Tau Ceti, may one day help us recalibrate our vision, while reminding us that &lt;em&gt;no worthwhile goal has ever been easy&lt;/em&gt; [emphasis added]. (p29-30)&lt;/p&gt;
&lt;/blockquote&gt;
</content><category term="quotes"></category></entry><entry><title>Search for a book using Python and Firefox</title><link href="http://www.circuidipity.com/booktab.html" rel="alternate"></link><published>2016-09-05T19:24:00-04:00</published><updated>2016-09-05T19:24:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-09-05:/booktab.html</id><summary type="html">&lt;p&gt;Get book information from command line arguments or clipboard, open a web browser, and search on Amazon and the &lt;a class="reference external" href="http://torontopubliclibrary.ca/"&gt;Toronto Public Library (TPL)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I read something interesting online about a book or author I start to dig deeper by checking out details on Amazon and availability at my local …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Get book information from command line arguments or clipboard, open a web browser, and search on Amazon and the &lt;a class="reference external" href="http://torontopubliclibrary.ca/"&gt;Toronto Public Library (TPL)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I read something interesting online about a book or author I start to dig deeper by checking out details on Amazon and availability at my local library. Is it possible that Python can improve on this search flow? Why yes it can!&lt;/p&gt;
&lt;p&gt;I discovered two new Python modules and one new concept:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/2/library/webbrowser.html"&gt;webbrowser&lt;/a&gt; for opening tabs and URLs in a webbrowser;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/pyperclip"&gt;pyperclip&lt;/a&gt; to retrieve text from a Linux clipboard;&lt;/li&gt;
&lt;li&gt;a gentle introduction to object-oriented programming by refactoring code and creating &lt;strong&gt;class objects&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 0:&lt;/strong&gt; On Ubuntu/Debian for Python3, install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install python3-pyperclip xclip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Create a Python module [&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bernersLee.py"&gt;source&lt;/a&gt;] that opens new tabs and URLs in Firefox ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import webbrowser, pyperclip

class Browser&lt;span class="o"&gt;()&lt;/span&gt;:
    &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;Super browser powers&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    def __init__&lt;span class="o"&gt;(&lt;/span&gt;self&lt;span class="o"&gt;)&lt;/span&gt;:
        &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;Set a default browser.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        self.browser &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;firefox&amp;#39;&lt;/span&gt;

    def open_search_tab&lt;span class="o"&gt;(&lt;/span&gt;self, web_address&lt;span class="o"&gt;)&lt;/span&gt;:
        &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;        Open browser tab for address retrieved from command line arguments&lt;/span&gt;
&lt;span class="s2"&gt;        or clipboard&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; len&lt;span class="o"&gt;(&lt;/span&gt;sys.argv&lt;span class="o"&gt;)&lt;/span&gt; &amp;gt; 1:
            &lt;span class="c1"&gt;# Get search item from command line&lt;/span&gt;
            &lt;span class="nv"&gt;search_item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;.join&lt;span class="o"&gt;(&lt;/span&gt;sys.argv&lt;span class="o"&gt;[&lt;/span&gt;1:&lt;span class="o"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;:
            &lt;span class="c1"&gt;# Get search item from clipboard&lt;/span&gt;
            &lt;span class="nv"&gt;search_item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pyperclip.paste&lt;span class="o"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; self.browser in webbrowser._browsers:
            &lt;span class="nv"&gt;www&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; webbrowser.get&lt;span class="o"&gt;(&lt;/span&gt;self.browser&lt;span class="o"&gt;)&lt;/span&gt;.open
        &lt;span class="k"&gt;else&lt;/span&gt;:
            &lt;span class="nv"&gt;www&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; webbrowser.open

        www&lt;span class="o"&gt;(&lt;/span&gt;web_address + search_item&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Setup a script [&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bookTab.py"&gt;source&lt;/a&gt;] to call the module, open tabs in the browser, and run searches on Amazon.(com,ca) and the TPL ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
from bernersLee import Browser

def main&lt;span class="o"&gt;()&lt;/span&gt;:
    &lt;span class="nv"&gt;library&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.torontopubliclibrary.ca/search.jsp?Ntt=&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;amazonCa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.amazon.ca/s/ref=nb_sb_noss_1?&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;amazonCom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.amazon.com/s/ref=nb_sb_noss_1?&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;amzSearch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;url=search-alias%3Dstripbooks&amp;amp;field-keywords=&amp;quot;&lt;/span&gt;

    &lt;span class="nv"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Browser&lt;span class="o"&gt;()&lt;/span&gt;
    browser.open_search_tab&lt;span class="o"&gt;(&lt;/span&gt;library&lt;span class="o"&gt;)&lt;/span&gt;
    browser.open_search_tab&lt;span class="o"&gt;(&lt;/span&gt;amazonCa + amzSearch&lt;span class="o"&gt;)&lt;/span&gt;
    browser.open_search_tab&lt;span class="o"&gt;(&lt;/span&gt;amazonCom + amzSearch&lt;span class="o"&gt;)&lt;/span&gt;

main&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cut-and-paste text in the browser, launch &lt;em&gt;bookTab.py&lt;/em&gt; from the &lt;a class="reference external" href="https://davedavenport.github.io/rofi/"&gt;run menu&lt;/a&gt;, and all the tabs+searches open and go to work!&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content><category term="firefox"></category><category term="python"></category><category term="programming"></category></entry><entry><title>Bits of August</title><link href="http://www.circuidipity.com/2016-08-31-bits.html" rel="alternate"></link><published>2016-08-31T09:09:00-04:00</published><updated>2016-08-31T09:09:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-08-31:/2016-08-31-bits.html</id><summary type="html">&lt;p&gt;Just the &lt;strong&gt;good stuff&lt;/strong&gt; ...&lt;/p&gt;
&lt;div class="section" id="restart-network-service-on-ubuntu"&gt;
&lt;h2&gt;0. Restart network service on Ubuntu&lt;/h2&gt;
&lt;p&gt;Sometimes after wake-from-suspend the network connection is down and network-manager's wifi ap list fails to refresh.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Simple systemd way ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl restart NetworkManager.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that doesn't work ... Try using &lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt; to stop and start network-manager directly ...&lt;/p&gt;
&lt;!-- code-block::bash

$ sudo nmcli networking off
$ sudo nmcli networking on --&gt;
&lt;p&gt;Old-fashioned SysV …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Just the &lt;strong&gt;good stuff&lt;/strong&gt; ...&lt;/p&gt;
&lt;div class="section" id="restart-network-service-on-ubuntu"&gt;
&lt;h2&gt;0. Restart network service on Ubuntu&lt;/h2&gt;
&lt;p&gt;Sometimes after wake-from-suspend the network connection is down and network-manager's wifi ap list fails to refresh.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Simple systemd way ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl restart NetworkManager.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that doesn't work ... Try using &lt;tt class="docutils literal"&gt;nmcli&lt;/tt&gt; to stop and start network-manager directly ...&lt;/p&gt;
&lt;!-- code-block::bash

$ sudo nmcli networking off
$ sudo nmcli networking on --&gt;
&lt;p&gt;Old-fashioned SysV init script method still works on 16.04 ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /etc/init.d/networking restart
    ... or ...
$ sudo /etc/init.d/network-manager restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Last resort ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ifdown -a  &lt;span class="c1"&gt;# -a brings down all interfaces&lt;/span&gt;
$ sudo ifup -a
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="microphone-problem-on-thinkpad-x230-running-ubuntu-16-04"&gt;
&lt;h2&gt;1. Microphone problem on Thinkpad x230 running Ubuntu 16.04&lt;/h2&gt;
&lt;p&gt;No sound input and &lt;strong&gt;mic&lt;/strong&gt; not detected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Get capture device ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ arecord -l
card 0: ... device 0: ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and edit &lt;tt class="docutils literal"&gt;/etc/pulse/default.pa&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;load-module&lt;/span&gt; &lt;span class="pre"&gt;module-alsa-source&lt;/span&gt; device=hw:0,0&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Kill and respawn pulseaudio ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pulseaudio -k
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frozen-ssh-session"&gt;
&lt;h2&gt;2. Frozen SSH session&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Use the key-combo &lt;strong&gt;Enter, Shift + `, .&lt;/strong&gt; [Enter, Tilde, Period]  to drop the connection.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="local-install-of-python-modules-as-non-root-user"&gt;
&lt;h2&gt;3. Local install of Python modules as non-root user&lt;/h2&gt;
&lt;p&gt;Example ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip3 install exifread
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... libraries are installed to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.local/lib/python-ver/&lt;/span&gt;&lt;/tt&gt; and the bins are placed in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.local/bin/&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Add &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.local/bin&lt;/span&gt;&lt;/tt&gt; to user's $PATH.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="set-power-management-on-hard-drive"&gt;
&lt;h2&gt;4. Set power management on hard drive&lt;/h2&gt;
&lt;p&gt;Get information on drive ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo hdparm -I /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Too aggressive power management can reduce lifespan of drive due to frequent parking and spindown. For my &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;netbook server&lt;/a&gt; I want &amp;quot;kinder, gentler&amp;quot; settings.&lt;/p&gt;
&lt;p&gt;From &lt;tt class="docutils literal"&gt;man hdparm&lt;/tt&gt; ...&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-B&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;Get/set Advanced Power Management feature ... low value means aggressive power management and a high value means better performance. Possible settings range from values 1 through 127 (which permit spin-down), and values 128 through 254 (which do not permit spin-down) ... A value of 255 tells hdparm to disable APM altogether ...&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-S&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;Put the drive into idle (low-power) mode, and also set the standby (spindown) timeout for the drive ... A value of zero means &amp;quot;timeouts are disabled&amp;quot; ...&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;On the netbook I run ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    $ sudo hdparm -B &lt;span class="m"&gt;254&lt;/span&gt; -S &lt;span class="m"&gt;0&lt;/span&gt; /dev/sda

    /dev/sda:
setting Advanced Power Management level to 0xfe &lt;span class="o"&gt;(&lt;/span&gt;254&lt;span class="o"&gt;)&lt;/span&gt;
setting standby to &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;off&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;APM_level&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; 254
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;strong&gt;udev rules&lt;/strong&gt; to setup at boot. Existing rule ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /lib/udev/rules.d/85-hdparm.rules
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;block&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[sh]d[a-z]&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/lib/udev/hdparm&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and make my own &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/udev/rules.d/85-hdparm.rules&lt;/span&gt;&lt;/tt&gt; (rules in &lt;tt class="docutils literal"&gt;/etc/udev/rules.d&lt;/tt&gt; have the &lt;a class="reference external" href="http://manpages.ubuntu.com/manpages/wily/man7/udev.7.html"&gt;highest priority&lt;/a&gt;) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;block&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sda&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/sbin/hdparm -B 254 -S 0 /dev/sda&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="bits"></category><category term="network"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Command line tools: htop</title><link href="http://www.circuidipity.com/htop.html" rel="alternate"></link><published>2016-08-22T17:09:00-04:00</published><updated>2016-08-22T17:09:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-08-22:/htop.html</id><summary type="html">&lt;img alt="htop" src="/images/screenshot/htop.png" style="width: 940px; height: 354px;" /&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;top&lt;/tt&gt; command displays Linux processes, and one of the first packages I install on a new Linux setup is the enhanced, interactive &lt;a class="reference external" href="http://hisham.hm/htop/"&gt;htop&lt;/a&gt; viewer. Good-looking and easy to use: see CPU and MEMORY usage at a glance, system load and uptime, kill wonky processes, and more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt; On Ubuntu …&lt;/p&gt;</summary><content type="html">&lt;img alt="htop" src="/images/screenshot/htop.png" style="width: 940px; height: 354px;" /&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;top&lt;/tt&gt; command displays Linux processes, and one of the first packages I install on a new Linux setup is the enhanced, interactive &lt;a class="reference external" href="http://hisham.hm/htop/"&gt;htop&lt;/a&gt; viewer. Good-looking and easy to use: see CPU and MEMORY usage at a glance, system load and uptime, kill wonky processes, and more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt; On Ubuntu/Debian ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install htop lsof
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="helpful-commands"&gt;
&lt;h2&gt;Helpful Commands&lt;/h2&gt;
&lt;p&gt;To search for a specific &lt;em&gt;process ID&lt;/em&gt; (PID) just input the number in the htop window and ENTER to select.&lt;/p&gt;
&lt;p&gt;Menu function keys &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-&amp;gt;F10&lt;/span&gt;&lt;/tt&gt; may conflict with desktop environment settings. Fortunately there are many keycode shortcuts, and these are the ones I find most useful ...&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;h&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;help menu&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;t&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;toggles the tree view which displays all related processes&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;l&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show all files opened by a process (uses &lt;tt class="docutils literal"&gt;lsof&lt;/tt&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;u&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;select a user and display only processes belonging to that ID&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;/&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;search for process by keyword&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;\&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;filter processes by keyword&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;f&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;follow a process&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;.&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;sort menu, &lt;tt class="docutils literal"&gt;Shift + i&lt;/tt&gt; will invert the sort&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;p&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;shortcut to sort processes by CPU ...&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;m&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;... by MEMORY ...&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;t&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;... or TIME&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Space&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;toggle a tag (useful for selecting multiple processes to &lt;tt class="docutils literal"&gt;kill&lt;/tt&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Shift + u&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;remove all tags&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;k&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;kill process menu&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;q&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;quit&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="shell"></category><category term="tools"></category><category term="linux"></category></entry><entry><title>New life for an old laptop as a Linux home server</title><link href="http://www.circuidipity.com/laptop-home-server.html" rel="alternate"></link><published>2016-08-16T21:47:00-04:00</published><updated>2016-08-29T15:15:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-08-16:/laptop-home-server.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Home Server Project #0.1 .:&lt;/a&gt; &lt;strong&gt;Netbooks&lt;/strong&gt; ... remember those small, (a few) Linux-powered laptops from several years ago? I dusted off my old &lt;strong&gt;Asus 900HA&lt;/strong&gt; netbook and put it to work as a &lt;a class="reference external" href="http://www.circuidipity.com/tag-server.html"&gt;home server&lt;/a&gt;. Good times!&lt;/p&gt;
&lt;p&gt;Running your own home server is a fun learning experience and offers several advantages …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Home Server Project #0.1 .:&lt;/a&gt; &lt;strong&gt;Netbooks&lt;/strong&gt; ... remember those small, (a few) Linux-powered laptops from several years ago? I dusted off my old &lt;strong&gt;Asus 900HA&lt;/strong&gt; netbook and put it to work as a &lt;a class="reference external" href="http://www.circuidipity.com/tag-server.html"&gt;home server&lt;/a&gt;. Good times!&lt;/p&gt;
&lt;p&gt;Running your own home server is a fun learning experience and offers several advantages.&lt;/p&gt;
&lt;p&gt;Second-hand laptops -  retired in favour of more current and powerful machines - can still deliver plenty of oomph for running a personal server. Frugal with power and come equipped with their own built-in UPS (battery)!&lt;/p&gt;
&lt;p&gt;Install a stable, well-tested Linux distribution and provide services such as network printing and &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;storage (NAS)&lt;/a&gt;, perform &lt;a class="reference external" href="http://www.circuidipity.com/incremental-backups-rsnapshot.html"&gt;backups&lt;/a&gt;, host &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;web services&lt;/a&gt; and much more. Start with a minimal base configuration of &lt;a class="reference external" href="http://www.circuidipity.com/tag-ubuntu.html"&gt;Ubuntu&lt;/a&gt; and gain access to tens of thousands of packages ready to install.&lt;/p&gt;
&lt;p&gt;Privacy may be important to you. Hosting your own server running your own services gives more control over your data.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Hardware:&lt;/strong&gt; Asus 900HA netbook with 9&amp;quot; display, 1GB RAM, a 500GB hard drive (very easy replacement of original drive - just unscrew the netbook's bottom panel), built-in ethernet/wifi, webcam, and a host of ports (3xUSB2, VGA, sound, SD card slot). Neat and compact device!&lt;/p&gt;
&lt;div class="section" id="install-ubuntu"&gt;
&lt;h3&gt;0. Install Ubuntu&lt;/h3&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/ubuntu-trusty-install.html"&gt;visual screenshot tour&lt;/a&gt; of installing Ubuntu 16.04 - a &lt;a class="reference external" href="https://wiki.ubuntu.com/Releases"&gt;Long Term Support (LTS)&lt;/a&gt; release. Ubuntu's &lt;strong&gt;minimal install image&lt;/strong&gt; (32bit for the netbook) makes it easy to create a console-only base configuration that can be later customized for various tasks.&lt;/p&gt;
&lt;p&gt;I make a few modifications to my usual desktop install routine that are more appropriate for configuring a home server ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Storage:&lt;/strong&gt; I divide the netbook's internal storage into 3 partitions ...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 is a 24GB &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda2 is a 2GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; partition using a &lt;strong&gt;random key&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;sda3 uses the remaining space as a &lt;strong&gt;unmounted&lt;/strong&gt; encrypted partition (setup post-install)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Mount point none" class="align-center" src="images/screenshot/ubuntuInstall/mount_point_none.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;I don't want an unattended server halting in the boot process waiting for a passphrase for &lt;tt class="docutils literal"&gt;sda3_crypt&lt;/tt&gt; or any necessary mountpoints to reside on that partition. After a successful first boot I configure the encrypted partition to be mounted manually to &lt;tt class="docutils literal"&gt;/media&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updates:&lt;/strong&gt; I like to select &lt;tt class="docutils literal"&gt;Install security updates automatically&lt;/tt&gt; for a device running unattended with long uptimes ...&lt;/p&gt;
&lt;img alt="Install security updates" class="align-center" src="images/screenshot/ubuntuInstall/300-1.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;&lt;strong&gt;Tasks:&lt;/strong&gt; Select &lt;tt class="docutils literal"&gt;[*] standard system utilities&lt;/tt&gt;  and the few extras included in &lt;tt class="docutils literal"&gt;[*] Basic Ubuntu server&lt;/tt&gt; ...&lt;/p&gt;
&lt;img alt="Software selection" class="align-center" src="images/screenshot/ubuntuInstall/301-1.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;Finish up and reboot!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="static-network-address"&gt;
&lt;h3&gt;1. Static network address&lt;/h3&gt;
&lt;p&gt;Login to the new home server and check which network interfaces are detected and settings ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ip a
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Wired&lt;/strong&gt; interfaces are usually auto-configured by default and assigned an IP address courtesy of DHCP.&lt;/p&gt;
&lt;p&gt;To assign the server a &lt;strong&gt;static&lt;/strong&gt; address (recommended), deactivate the wired interface and create a new entry in &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt;. Sample entry for &lt;tt class="docutils literal"&gt;enp3s0&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# The primary network interface&lt;/span&gt;
auto enp3s0
&lt;span class="c1"&gt;#iface enp3s0 inet dhcp&lt;/span&gt;
iface enp3s0 inet static
    address 192.168.1.88
    netmask 255.255.255.0
    gateway 192.168.1.1
    dns-nameservers 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bring up|down interface with &lt;tt class="docutils literal"&gt;sudo if{up,down} enp3s0&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ssh"&gt;
&lt;h3&gt;2. SSH&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;Install OpenSSH, create crypto keys, and disable password logins&lt;/a&gt; to boost server security.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="encrypted-storage"&gt;
&lt;h3&gt;3. Encrypted storage&lt;/h3&gt;
&lt;p&gt;Configure the encrypted partition created by Ubuntu during the install to be mounted by a user, starting with the creation of a mountpoint in &lt;tt class="docutils literal"&gt;/media&lt;/tt&gt; for the storage ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir /media/sda3_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlock the partition with the passphrase created during the install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo cryptsetup open /dev/sda3 sda3_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; by creating a consistent mountpoint for the partition ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/mapper/sda3_crypt /media/sda3_crypt        ext4    relatime,noauto,user       &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mount the partition ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mount /media/sda3_crypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="set-power-management-on-hard-drive"&gt;
&lt;h3&gt;4. Set power management on hard drive&lt;/h3&gt;
&lt;p&gt;Default settings on the netbook frequently park and spindown the drive, generating an audible &amp;quot;click&amp;quot; sound. Too aggressive power management can reduce lifespan of drive. I want &amp;quot;kinder, gentler&amp;quot; settings.&lt;/p&gt;
&lt;p&gt;Get information on drive ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo hdparm -I /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From &lt;tt class="docutils literal"&gt;man hdparm&lt;/tt&gt; ...&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-B&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;Get/set Advanced Power Management feature ... low value means aggressive power management and a high value means better performance. Possible settings range from values 1 through 127 (which permit spin-down), and values 128 through 254 (which do not permit spin-down) ... A value of 255 tells hdparm to disable APM altogether ...&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-S&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;Put the drive into idle (low-power) mode, and also set the standby (spindown) timeout for the drive ... A value of zero means &amp;quot;timeouts are disabled&amp;quot; ...&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;On the netbook I run ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo hdparm -B &lt;span class="m"&gt;254&lt;/span&gt; -S &lt;span class="m"&gt;0&lt;/span&gt; /dev/sda

/dev/sda:
setting Advanced Power Management level to 0xfe &lt;span class="o"&gt;(&lt;/span&gt;254&lt;span class="o"&gt;)&lt;/span&gt;
setting standby to &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;off&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;APM_level&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; 254
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;strong&gt;udev rules&lt;/strong&gt; to setup at boot. Existing rule ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /lib/udev/rules.d/85-hdparm.rules
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;block&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[sh]d[a-z]&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/lib/udev/hdparm&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and make my own &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/udev/rules.d/85-hdparm.rules&lt;/span&gt;&lt;/tt&gt; (rules in &lt;tt class="docutils literal"&gt;/etc/udev/rules.d&lt;/tt&gt; have the &lt;a class="reference external" href="http://manpages.ubuntu.com/manpages/wily/man7/udev.7.html"&gt;highest priority&lt;/a&gt;) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;block&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sda&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/sbin/hdparm -B 254 -S 0 /dev/sda&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="services"&gt;
&lt;h3&gt;5. Services&lt;/h3&gt;
&lt;p&gt;What to do next? &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Some of the services I use ...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="server"></category><category term="network"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>$HOME slash bin</title><link href="http://www.circuidipity.com/homebin.html" rel="alternate"></link><published>2016-08-08T16:20:00-04:00</published><updated>2016-09-05T21:45:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-08-08:/homebin.html</id><summary type="html">&lt;img alt="Infinite loop" class="align-right" src="images/infinite-loop-not-300.png" style="width: 300px; height: 400px;" /&gt;
&lt;p&gt;Bit by bit I build my collection of working scripts and experiments in my &lt;a class="reference external" href="https://github.com/vonbrownie/homebin"&gt;home directory&lt;/a&gt;. Programming right now in &lt;a class="reference external" href="http://www.circuidipity.com/tag-python.html"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/Library.sh"&gt;Library.sh&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;library of functions for bash shell scripts (more: &lt;a class="reference external" href="http://www.circuidipity.com/shell-script-library.html"&gt;&amp;quot;A library for shell scripts&amp;quot;&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bernersLee.py"&gt;bernersLee.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;a set of classes to support my web hacks&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bookTab.py"&gt;bookTab …&lt;/a&gt;&lt;/dt&gt;&lt;/dl&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="Infinite loop" class="align-right" src="images/infinite-loop-not-300.png" style="width: 300px; height: 400px;" /&gt;
&lt;p&gt;Bit by bit I build my collection of working scripts and experiments in my &lt;a class="reference external" href="https://github.com/vonbrownie/homebin"&gt;home directory&lt;/a&gt;. Programming right now in &lt;a class="reference external" href="http://www.circuidipity.com/tag-python.html"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/Library.sh"&gt;Library.sh&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;library of functions for bash shell scripts (more: &lt;a class="reference external" href="http://www.circuidipity.com/shell-script-library.html"&gt;&amp;quot;A library for shell scripts&amp;quot;&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bernersLee.py"&gt;bernersLee.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;a set of classes to support my web hacks&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/bookTab.py"&gt;bookTab.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;get book information from command line arguments or clipboard, open web browser, and search Amazon and the Toronto Public Library (more: &lt;a class="reference external" href="http://www.circuidipity.com/booktab.html"&gt;&amp;quot;Search for a book using Python and Firefox&amp;quot;&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/collatz.py"&gt;collatz.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;explore the &lt;em&gt;Collatz sequence&lt;/em&gt;, sometimes called &amp;quot;the simplest impossible math problem&amp;quot;&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndBook.py"&gt;dateAndBook.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;collect books I have read and the dates I finished reading them from my daily logfile and write to a new logfile&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndStep.py"&gt;dateAndStep.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;collect dates (x_axis) and pedometer measurements (y_axis) from my daily logfile and write to a new logfile + generate a graph&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndWeight.py"&gt;dateAndWeight.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;collect dates (x_axis) and weight measurements (y_axis) from my daily logfile and write to a new logfile + generate a graph&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndY.py"&gt;dateAndY.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;a set of classes to support collecting dates (x_axis) and measurements (y_axis) from a logfile and write to a new logfile and generate a graph&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/daysUntil.py"&gt;daysUntil.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;how many days until: yyyy mm dd&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/debtBuster.py"&gt;debtBuster.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;find the smallest monthly payment to the cent such that we can pay off a debt within &lt;em&gt;n&lt;/em&gt; months&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dldsply"&gt;dldsply&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;enable|disable extended desktop using XRandR&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dlg"&gt;dlg&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;daily activity log + git commits&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dmenu-run.sh"&gt;dmenu-run.sh&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;tt class="docutils literal"&gt;dmenu&lt;/tt&gt; configuration&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/magic8ball.py"&gt;magic8ball.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Magic 8 Ball peers into the future and retrieves the answer to your questions&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/mapTab.py"&gt;mapTab.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;get a street address from command line arguments or clipboard and open web browser to the Google Maps page for the address&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/paVolume"&gt;paVolume&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;pulseaudio volume control (more: &lt;a class="reference external" href="http://www.circuidipity.com/pavolume.html"&gt;&amp;quot;Shell script: paVolume&amp;quot;&lt;/a&gt;)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/raiseRedLantern.py"&gt;raiseRedLantern.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;a set of classes to add notification capabilities to scripts&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/rePhoneAndEmail.py"&gt;rePhoneAndEmail.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;find and extract phone numbers and email addresses on the clipboard&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/reSearch.py"&gt;reSearch.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;find matches for regex patterns in file(s)&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/teleportHomeTo"&gt;teleportHomeTo&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;sync $HOME to DESTINATION&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/teleportHomeToSSH"&gt;teleportHomeToSSH&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;sync $HOME to remote DESTINATION using SSH keys&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/timeToCount.py"&gt;timeToCount.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;measure clock time for a device to count from 0 to &lt;em&gt;x&lt;/em&gt; in increments of 1&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/tplWatch.py"&gt;tplWatch.py&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;check to see if Toronto Public Library has added an item to catalogue&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/vboxshot"&gt;vboxshot&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;capture screenshot of a virtualbox session&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/xtra"&gt;xtra&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;tt class="docutils literal"&gt;xinit&lt;/tt&gt; extra config&lt;/dd&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/yt-audio"&gt;yt-audio&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;download online video and convert to audio (more: &lt;a class="reference external" href="http://www.circuidipity.com/youtube-dl.html"&gt;&amp;quot;Download videos using youtube-dl&amp;quot;&lt;/a&gt;)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="programming"></category><category term="shell"></category><category term="python"></category><category term="linux"></category></entry><entry><title>LPTHW Exercise 22: What Do You Know So Far?</title><link href="http://www.circuidipity.com/lpthw-e22.html" rel="alternate"></link><published>2016-06-05T14:40:00-04:00</published><updated>2016-06-05T14:40:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-06-05:/lpthw-e22.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://learnpythonthehardway.org/book/"&gt;Learn Python the Hard Way by Zed Shaw .:&lt;/a&gt; A review of my recent Python journey ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;print&lt;/strong&gt; Output result of expression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;python script.py&lt;/strong&gt; Run &lt;em&gt;script.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#&lt;/strong&gt; Comment out a line of script. Anything after the pound symbol is ignored.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/strong&gt; Block quotes ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;(O&amp;lt; .: Hello world!&lt;/span&gt;
&lt;span class="s2"&gt;(/)_&lt;/span&gt;
&lt;span class="s2"&gt;.....&lt;/span&gt;
&lt;span class="s2"&gt;.....&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;variable&lt;/strong&gt; A memory location …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://learnpythonthehardway.org/book/"&gt;Learn Python the Hard Way by Zed Shaw .:&lt;/a&gt; A review of my recent Python journey ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;print&lt;/strong&gt; Output result of expression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;python script.py&lt;/strong&gt; Run &lt;em&gt;script.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#&lt;/strong&gt; Comment out a line of script. Anything after the pound symbol is ignored.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/strong&gt; Block quotes ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;(O&amp;lt; .: Hello world!&lt;/span&gt;
&lt;span class="s2"&gt;(/)_&lt;/span&gt;
&lt;span class="s2"&gt;.....&lt;/span&gt;
&lt;span class="s2"&gt;.....&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;variable&lt;/strong&gt; A memory location that holds data and given an identifying name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;integer&lt;/strong&gt; Whole numbers&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;float&lt;/strong&gt; Decimals&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;round()&lt;/strong&gt; Round a floating number ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; round&lt;span class="o"&gt;(&lt;/span&gt;5.67888&lt;span class="o"&gt;)&lt;/span&gt;
6.0
&amp;gt;&amp;gt;&amp;gt; round&lt;span class="o"&gt;(&lt;/span&gt;5.67888, 2&lt;span class="o"&gt;)&lt;/span&gt;
5.68
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;string&lt;/strong&gt; Sequence of characters (text).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;len&lt;/strong&gt; Length of a string.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;data type&lt;/strong&gt; Type of data stored in memory. Example: &lt;tt class="docutils literal"&gt;int&lt;/tt&gt; (integers), &lt;tt class="docutils literal"&gt;float&lt;/tt&gt; (decimals), &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; (strings) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; type&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
&amp;lt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;str&amp;#39;&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; int&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; type&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
&amp;lt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int&amp;#39;&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; float&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; type&lt;span class="o"&gt;(&lt;/span&gt;a&lt;span class="o"&gt;)&lt;/span&gt;
&amp;lt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;float&amp;#39;&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="math-operators"&gt;
&lt;h2&gt;Math Operators&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;+&lt;/strong&gt; Addition (or concatenate strings).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-&lt;/strong&gt; Subtraction&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/&lt;/strong&gt; Division. Rounds down to integer. Returns a floating number if one of the numbers is a float.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*&lt;/strong&gt; Multiplication&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;%&lt;/strong&gt; Modulus. Caculate remainder after division.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;+=&lt;/strong&gt; Shorthand for &amp;quot;plus itself&amp;quot;. Also &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-=&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;*=&lt;/tt&gt; ... Ex: &lt;tt class="docutils literal"&gt;x = x + y&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;x+= y&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PEMMDAS&lt;/strong&gt; Order of priority of math operations ...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Parantheses&lt;/li&gt;
&lt;li&gt;Exponents&lt;/li&gt;
&lt;li&gt;Multiplication and Modulus&lt;/li&gt;
&lt;li&gt;Division&lt;/li&gt;
&lt;li&gt;Addition and Substraction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;... and operations of equal priority are evaluated from left-to-right ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;5&lt;/span&gt; % 3
2
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; * &lt;span class="m"&gt;5&lt;/span&gt; % 3
1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comparison-operators"&gt;
&lt;h2&gt;Comparison Operators&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;&lt;/strong&gt; Less than&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&lt;/strong&gt; Greater than&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;=&lt;/strong&gt; Less than or equal to&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;=&lt;/strong&gt; Greater than or equal to&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;==&lt;/strong&gt; Equal to&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;=&lt;/strong&gt; Assign value on the right to variable on the left (&lt;strong&gt;not&lt;/strong&gt; a comparator).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;boolean&lt;/strong&gt; A test for truth values: &lt;tt class="docutils literal"&gt;True&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;False&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Boolean operators have an order of operations. After any math or comparison operations evaluate, Python evaluates the &lt;tt class="docutils literal"&gt;not&lt;/tt&gt; operators first, then the &lt;tt class="docutils literal"&gt;and&lt;/tt&gt; operators, then the &lt;tt class="docutils literal"&gt;or&lt;/tt&gt; operators ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; not &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; 4
True
&amp;gt;&amp;gt;&amp;gt; not &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;4&lt;/span&gt; and &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; 4
False
&amp;gt;&amp;gt;&amp;gt; not &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;4&lt;/span&gt; and &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;4&lt;/span&gt; or &lt;span class="m"&gt;2&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; 4
True
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="format-and-escape-characters"&gt;
&lt;h2&gt;Format and Escape Characters&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;%d&lt;/strong&gt; Digit&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;%s&lt;/strong&gt; String&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;%r&lt;/strong&gt; Raw&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;n&lt;/strong&gt; New line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;t&lt;/strong&gt; Tab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s2"&gt;&amp;quot;I \&amp;quot;may\&amp;quot; have %d %s tickets\nfor the \t%r\tnext weekend.&amp;quot;&lt;/span&gt; % &lt;span class="o"&gt;(&lt;/span&gt;3, &lt;span class="s1"&gt;&amp;#39;free&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;LPTHW Bootcamp&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
I &lt;span class="s2"&gt;&amp;quot;may&amp;quot;&lt;/span&gt; have &lt;span class="m"&gt;3&lt;/span&gt; free tickets
&lt;span class="k"&gt;for&lt;/span&gt; the         &lt;span class="s1"&gt;&amp;#39;LPTHW Bootcamp&amp;#39;&lt;/span&gt;        next weekend.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="input-and-extras"&gt;
&lt;h2&gt;Input and Extras&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;raw_input()&lt;/strong&gt; Get user input (changed to &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt; in Python 3).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;int(raw_input())&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;float(raw_input())&lt;/strong&gt; Convert user input into an integer|float ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; int&lt;span class="o"&gt;(&lt;/span&gt;raw_input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Age? &amp;gt; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
Age? &amp;gt; 104
&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s2"&gt;&amp;quot;You must be doing something right to make it to %d years old!&amp;quot;&lt;/span&gt; % age
You must be doing something right to make it to &lt;span class="m"&gt;104&lt;/span&gt; years old!
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;import&lt;/strong&gt; Add modules (libraries) of Python code to my script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;modules&lt;/strong&gt; Features&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pydoc&lt;/strong&gt; Show documentation from Python modules. Can read in the console or start a webserver and read documentation in the browser ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pydoc -p 1234
pydoc server ready at http://localhost:1234/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;argv&lt;/strong&gt; Module that enables a script to accept command line arguments ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from sys import argv
script, first, second, &lt;span class="nv"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; argv
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reading-and-writing"&gt;
&lt;h2&gt;Reading and Writing&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;open()&lt;/strong&gt; Open an external file in my script. Default file mode is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;read-only&lt;/span&gt;&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;r&lt;/tt&gt; if none is specified.&lt;/p&gt;
&lt;p&gt;Commonly-used modes include ...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;r&lt;/tt&gt; Open text file for reading. Stream is positioned at the beginning of the file.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;r+&lt;/tt&gt; Open for reading and writing. Stream is positioned at the beginning of the file.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;w&lt;/tt&gt; Truncate file to zero length or create text file for writing. Stream is positioned at the beginning of the file.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;w+&lt;/tt&gt; Open for reading and writing. File is created if it does not exist, otherwise it is truncated. Stream is positioned at the beginning of the file.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;a&lt;/tt&gt; Open for writing. File is created if it does not exist. Stream is positioned at the end of the file.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;a+&lt;/tt&gt; Open for reading and writing. File is created if it does not exist. Stream is positioned at the end of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;read()&lt;/strong&gt; Read the contents of the opened file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;readline()&lt;/strong&gt; Read just one line of the file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;write()&lt;/strong&gt; Write a string to the file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;seek()&lt;/strong&gt; Set the current position in the file. Beginning of file is &lt;tt class="docutils literal"&gt;seek(0)&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;close()&lt;/strong&gt; Close the file ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; open&lt;span class="o"&gt;(&lt;/span&gt;filename&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;txt.read&lt;span class="o"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;O&amp;lt; .: Hello world!
&lt;span class="o"&gt;(&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt;_

&amp;gt;&amp;gt;&amp;gt; txt.seek&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# Important: return to the top of the file before reading, otherwise I just read an empty string&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; txt.read&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;(O&amp;lt; .: Hello world!\n(/)_\n&amp;#39;&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; txt.close&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; open&lt;span class="o"&gt;(&lt;/span&gt;filename, &lt;span class="s1"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; txt.write&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt; * 10&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; txt.seek&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;txt.read&lt;span class="o"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;O&amp;lt; .: Hello world!
&lt;span class="o"&gt;(&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt;_
..........
&amp;gt;&amp;gt;&amp;gt; txt.close&lt;span class="o"&gt;()&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="functions"&gt;
&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;function&lt;/strong&gt; A named section of my script that executes a task when called.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;def&lt;/strong&gt; &amp;quot;Defines&amp;quot; a new function. Ex: &lt;tt class="docutils literal"&gt;def &lt;span class="pre"&gt;some_function_name():&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;method&lt;/strong&gt; Same thing as a function, except it is called on a value. Ex: the &lt;tt class="docutils literal"&gt;seek()&lt;/tt&gt; method ... &lt;tt class="docutils literal"&gt;txt.seek(0)&lt;/tt&gt;. Each data type has its own set of methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;argument&lt;/strong&gt; Input parameters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;parameter&lt;/strong&gt; A variable an argument is stored in when a function is called.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;return&lt;/strong&gt; Value that a function call evaluates to&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;exists&lt;/strong&gt; Checks if a file exists. Returns True or False. Part of the &lt;tt class="docutils literal"&gt;os.path&lt;/tt&gt; module.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;01.&lt;/strong&gt; Run a script from within python interactive mode ...&lt;/p&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; execfile('some_script.py')
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;02.&lt;/strong&gt; &lt;tt class="docutils literal"&gt;format()&lt;/tt&gt; Positional formatting ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s2"&gt;&amp;quot;{0} {1} {0} zero ...&amp;quot;&lt;/span&gt;.format&lt;span class="o"&gt;(&lt;/span&gt;1, &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt; two &lt;span class="m"&gt;1&lt;/span&gt; zero ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;03.&lt;/strong&gt; &lt;tt class="docutils literal"&gt;from __future__ import&lt;/tt&gt; Allows me to bring Python 3 features into Python 2. Example ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from __future__ import print_function
print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;There are&amp;#39;&lt;/span&gt;, cars, &lt;span class="s1"&gt;&amp;#39;cars available.&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... prints a concatenated statement (otherwise the above &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; in Python 2 makes the commas treat things as a tuple).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from __future__ import division
print 8/7  &lt;span class="c1"&gt;# prints 1.1428571428571428&lt;/span&gt;
print 8//7 &lt;span class="c1"&gt;# prints 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... makes division into a float. Python 2 would otherwise return &lt;tt class="docutils literal"&gt;1&lt;/tt&gt; for both calculations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04.&lt;/strong&gt; &lt;tt class="docutils literal"&gt;textwrap.dedent&lt;/tt&gt; A useful module+method for indenting quotes in code while the output is aligned to margin.&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="programming"></category></entry><entry><title>Minimal to Morebuntu</title><link href="http://www.circuidipity.com/20160501.html" rel="alternate"></link><published>2016-05-01T11:58:00-04:00</published><updated>2016-05-01T11:59:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2016-05-01:/20160501.html</id><summary type="html">&lt;img alt="Ubuntu under-construction" class="align-right" src="images/ubuntu-crane-300.png" style="width: 300px; height: 300px;" /&gt;
&lt;p&gt;Start with a &lt;strong&gt;minimal install of Ubuntu 16.04 &amp;quot;Xenial Xerus&amp;quot;&lt;/strong&gt; and roll a &lt;strong&gt;Morebuntu&lt;/strong&gt; customized with the &lt;strong&gt;i3 tiling window manager&lt;/strong&gt; plus a collection of desktop applications.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I use Ubuntu's &lt;a class="reference external" href="https://help.ubuntu.com/community/Installation/MinimalCD"&gt;minimal install image&lt;/a&gt; to create a console-only base configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="minimal-ubuntu"&gt;
&lt;h2&gt;0. Minimal Ubuntu&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Start here:&lt;/strong&gt; A &lt;a class="reference external" href="http://www.circuidipity.com/ubuntu-trusty-install.html"&gt;visual walk-through …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="Ubuntu under-construction" class="align-right" src="images/ubuntu-crane-300.png" style="width: 300px; height: 300px;" /&gt;
&lt;p&gt;Start with a &lt;strong&gt;minimal install of Ubuntu 16.04 &amp;quot;Xenial Xerus&amp;quot;&lt;/strong&gt; and roll a &lt;strong&gt;Morebuntu&lt;/strong&gt; customized with the &lt;strong&gt;i3 tiling window manager&lt;/strong&gt; plus a collection of desktop applications.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I use Ubuntu's &lt;a class="reference external" href="https://help.ubuntu.com/community/Installation/MinimalCD"&gt;minimal install image&lt;/a&gt; to create a console-only base configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="minimal-ubuntu"&gt;
&lt;h2&gt;0. Minimal Ubuntu&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Start here:&lt;/strong&gt; A &lt;a class="reference external" href="http://www.circuidipity.com/ubuntu-trusty-install.html"&gt;visual walk-through of a sample Ubuntu setup&lt;/a&gt; that makes use of an entire storage device divided into 3 partitions: an unencrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition, and encrypted &lt;tt class="docutils literal"&gt;swap + home&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-x"&gt;
&lt;h2&gt;1. Install X&lt;/h2&gt;
&lt;p&gt;After a successful first boot and network active ... setup the X environment ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install xorg xinput xbindkeys xbacklight xvkbd fonts-liberation ttf-ubuntu-font-family
$ sudo apt install rxvt-unicode-256color xfonts-terminus
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="window-manager"&gt;
&lt;h2&gt;2. Window Manager&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Lots&lt;/strong&gt; of choices! I like the &lt;a class="reference external" href="http://www.circuidipity.com/i3-tiling-window-manager.html"&gt;lightweight and delightful i3 window manager&lt;/a&gt;, with the latest packages provided by the i3 project's &lt;a class="reference external" href="https://i3wm.org/docs/repositories.html"&gt;Ubuntu repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Styling:&lt;/strong&gt; I use &lt;a class="reference external" href="http://www.ravefinity.com/p/download-ambiance-radiance-colors.html"&gt;Ambiance Colors&lt;/a&gt; + &lt;a class="reference external" href="http://www.ravefinity.com/p/vibrancy-colors-gtk-icon-theme.html"&gt;Vibrancy Color Icon&lt;/a&gt; themes. Download the &lt;tt class="docutils literal"&gt;deb&lt;/tt&gt; packages and install with &lt;tt class="docutils literal"&gt;sudo dpkg &lt;span class="pre"&gt;-i&lt;/span&gt; *.deb&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Depends: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gtk2-engines-{murrine,pixbuf}&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install gnome-themes-standard gtk2-engines-murrine gtk2-engines-pixbuf lxappearance qt4-qtconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Theming for QT5 apps can be configured using the &lt;tt class="docutils literal"&gt;qt5ct&lt;/tt&gt; utility. Download the package &lt;a class="reference external" href="http://ppa.launchpad.net/nilarimogard/webupd8/ubuntu/pool/main/q/qt5ct/"&gt;available on the WebUpd8 PPA&lt;/a&gt; and install.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="applications"&gt;
&lt;h2&gt;3. Applications&lt;/h2&gt;
&lt;p&gt;Install some favourite desktop packages ...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;editor&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;terminal&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rxvt-unicode&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;tmux&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;net&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;firefox&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;transmission-gtk&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multimedia&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ubuntu-restricted-extras&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;vlc&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;rhythmbox&lt;/tt&gt; (with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-install-recommends&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;images&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;eog&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;scrot&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;geeqie&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;gimp&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docs&lt;/strong&gt; - &lt;tt class="docutils literal"&gt;libreoffice&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;qpdfview&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install vim rxvt-unicode tmux most
$ sudo apt --no-install-recommends install rhythmbox
$ sudo apt install pulseaudio pulseaudio-utils pavucontrol gstreamer1.0-pulseaudio alsa-utils sox
$ sudo apt install firefox default-jre icedtea-plugin transmission-gtk
$ sudo apt install ubuntu-restricted-extras ffmpeg rhythmbox-plugins vlc
$ sudo apt install eog scrot geeqie gimp gimp-help-en gimp-data-extras
$ sudo apt install libreoffice libreoffice-help-en-us libreoffice-gnome qpdfview
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="update-alternatives"&gt;
&lt;h2&gt;4. Update-alternatives&lt;/h2&gt;
&lt;p&gt;Configure symbolic links that determine default commands ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo update-alternatives --config editor
$ sudo update-alternatives --config pager
$ sudo update-alternatives --config x-terminal-emulator
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="morebuntu"&gt;
&lt;h2&gt;5. Morebuntu&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/scripts/morebuntu.sh"&gt;morebuntu shell script&lt;/a&gt; that covers most of steps 1-4.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="ubuntu"></category><category term="linux"></category><category term="i3"></category><category term="shell"></category><category term="programming"></category></entry></feed>