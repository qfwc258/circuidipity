==========================================
Search for a book using Python and Firefox
==========================================

:date: 2016-09-05 19:24:00
:slug: booktab
:tags: firefox, python, programming

Get book information from command line arguments or clipboard, open a web browser, and search on Amazon and the `Toronto Public Library (TPL) <http://torontopubliclibrary.ca/>`_.

When I read something interesting online about a book or author I start to dig deeper by checking out details on Amazon and availability at my local library. Is it possible that Python can improve on this search flow? Why yes it can!

I discovered two new Python modules and one new concept:

* `webbrowser <https://docs.python.org/2/library/webbrowser.html>`_ for opening tabs and URLs in a webbrowser;

* `pyperclip <https://pypi.python.org/pypi/pyperclip>`_ to retrieve text from a Linux clipboard;

* a gentle introduction to object-oriented programming by refactoring code and creating **class objects**

**Step 0:** On Ubuntu/Debian for Python3, install ...

.. code-block:: bash

	$ sudo apt install python3-pyperclip xclip

**Step 1:** Create a Python module [`source <https://github.com/vonbrownie/homebin/blob/master/bernersLee.py>`__] that opens new tabs and URLs in Firefox ...

.. code-block:: bash

    import webbrowser, pyperclip
    
    class Browser():
        """Super browser powers"""
        
        def __init__(self):
            """Set a default browser."""
            self.browser = 'firefox'
        
        def open_search_tab(self, web_address):
            """
            Open browser tab for address retrieved from command line arguments
            or clipboard
            """
            if len(sys.argv) > 1:
                # Get search item from command line
                search_item = ' '.join(sys.argv[1:])
            else:
                # Get search item from clipboard
                search_item = pyperclip.paste()
                
            if self.browser in webbrowser._browsers:
                www = webbrowser.get(self.browser).open
            else:
                www = webbrowser.open
                
            www(web_address + search_item)

**Step 2:** Setup a script [`source <https://github.com/vonbrownie/homebin/blob/master/bookTab.py>`__] to call the module, open tabs in the browser, and run searches on Amazon.(com,ca) and the TPL ...

.. code-block:: bash

    #!/usr/bin/env python3
    from bernersLee import Browser
    
    def main():
        library = "https://www.torontopubliclibrary.ca/search.jsp?Ntt="
        amazonCa = "https://www.amazon.ca/s/ref=nb_sb_noss_1?"
        amazonCom = "https://www.amazon.com/s/ref=nb_sb_noss_1?"
        amzSearch = "url=search-alias%3Dstripbooks&field-keywords="
        
        browser = Browser()
        browser.open_search_tab(library)
        browser.open_search_tab(amazonCa + amzSearch)
        browser.open_search_tab(amazonCom + amzSearch)
        
    main()

Cut-and-paste text in the browser, launch *bookTab.py* from the `run menu <https://davedavenport.github.io/rofi/>`_, and all the tabs+searches open and go to work!

Happy hacking!
