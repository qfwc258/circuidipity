<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feed.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2014-05-28T00:00:00-04:00</updated><entry><title>Duplicate Debian package selection on multiple machines</title><link href="http://www.circuidipity.com/dpkg-duplicate.html" rel="alternate"></link><updated>2014-05-28T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-28:dpkg-duplicate.html</id><summary type="html">&lt;p&gt;I am happy with the selection of packages installed on my &lt;a class="reference external" href="http://www.circuidipity.com/c720-sidbook.html"&gt;Debian-powered laptop&lt;/a&gt; and discovered an easy method to &lt;strong&gt;duplicate&lt;/strong&gt; the configuration on another machine.&lt;/p&gt;
&lt;p&gt;On the 'master' machine generate a list of installed packages...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg --get-selections | grep -v deinstall &amp;gt; deb-pkg-list.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Move the generated list to the target machine. Configure the package manager to duplicate the selection on the new system...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ PKGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-cache dumpavail &amp;gt; &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --merge-avail &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rm -f &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --clear-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --set-selections &amp;lt; deb-pkg-list.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get dselect-upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/dpkgDup"&gt;shell script&lt;/a&gt; that includes the above steps for generating and restoring package lists.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/dpkgDup"&gt;dpkgDup&lt;/a&gt;, &lt;a class="reference external" href="http://debian-handbook.info/browse/wheezy/sect.apt-get.html"&gt;Debian Administrator's Handbook&lt;/a&gt;&lt;/p&gt;
</summary><category term="debian"></category><category term="linux"></category></entry><entry><title>Policykit upgrade generates user permission problems</title><link href="http://www.circuidipity.com/policykit-upgrade-user-permission.html" rel="alternate"></link><updated>2014-05-15T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-15:policykit-upgrade-user-permission.html</id><summary type="html">&lt;p&gt;After a recent upgrade on my 64-bit systems running Debian Sid/Unstable and Openbox I discovered user permission problems with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;nm-applet&lt;/strong&gt; - &amp;quot;(32) Not authorized to control networking&amp;quot; - refusing to make new wireless connections&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;xfce4-power-manager --dump&lt;/strong&gt; shows suspend/reboot/shutdown as disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Openbox launches with &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;exec &lt;span class="pre"&gt;ck-launch-session&lt;/span&gt; &lt;span class="pre"&gt;dbus-launch&lt;/span&gt; &lt;span class="pre"&gt;openbox-session&lt;/span&gt;&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xinitrc&lt;/span&gt;&lt;/tt&gt;. Online searching for fixes generates a lot of information about policykit, consolekit, and systemd but the current problems narrowed down to the most recent upgrade of polkit-related packages in Debian.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(Temporary) Fix:&lt;/strong&gt; Downgrade the problematic packages from versions &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-5&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-4&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 0:&lt;/strong&gt; Removing the current polkit packages will also remove a number of related packages including network-manager and break the net connection. Previous good &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-4&lt;/span&gt;&lt;/tt&gt; versions of the affected packages were still available in &lt;tt class="docutils literal"&gt;/var/cache/apt/archives&lt;/tt&gt;... otherwise download packages from &lt;a class="reference external" href="http://snapshot.debian.org/"&gt;snapshot.debian.org&lt;/a&gt;. For 64-bit amd64:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-gobject-1-0_0.105-4_amd64.deb"&gt;libpolkit-gobject-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-agent-1-0_0.105-4_amd64.deb"&gt;libpolkit-agent-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-backend-1-0_0.105-4_amd64.deb"&gt;libpolkit-backend-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/policykit-1_0.105-4_amd64.deb"&gt;policykit-1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Remove the troublesome packages. Take note of the dependencies also removed for later restoration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get remove libpolkit-gobject-1-0:amd64 libpolkit-agent-1-0:amd64 libpolkit-backend-1-0:amd64 policykit-1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install the downgrade packages and place them &amp;quot;on hold&amp;quot; to block &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; from trying to upgrade again to newer (broken) versions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-gobject-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-agent-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-backend-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i policykit-1_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-gobject-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-agent-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-backend-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;policykit-1 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg get-selections | grep &lt;span class="s2"&gt;&amp;quot;pol&amp;quot;&lt;/span&gt;  &lt;span class="c"&gt;# confirm pkgs are now on hold&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Restore dependencies... my own system as an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install accountsservice colord consolekit cups-pk-helper gnome-control-center network-manager-gnome &lt;span class="se"&gt;\&lt;/span&gt;
packagekit packagekit-tools policykit-1-gnome upower xfce4-power-manager
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://forums.debian.net/viewtopic.php?f=5&amp;amp;t=114412"&gt;UPower Suspend/Hibernate: not authorized&lt;/a&gt;&lt;/p&gt;
</summary><category term="debian"></category><category term="linux"></category></entry><entry><title>Creating new commands with alias</title><link href="http://www.circuidipity.com/alias-commands.html" rel="alternate"></link><updated>2014-05-13T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-13:alias-commands.html</id><summary type="html">&lt;p&gt;An &lt;strong&gt;alias&lt;/strong&gt; is useful for setting desirable options for a shell command or creating new commands using the structure &lt;tt class="docutils literal"&gt;alias &lt;span class="pre"&gt;name='string&lt;/span&gt;&lt;/tt&gt;. Multiple commands can be placed on a single line by separating them with a semicolon &lt;tt class="docutils literal"&gt;alias &lt;span class="pre"&gt;name='command0;&lt;/span&gt; command1; command2&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Check for aliases already set in the environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove the alias for command &lt;tt class="docutils literal"&gt;foo&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;unalias &lt;/span&gt;foo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create new aliases:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -aFlhv --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;dpkgg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dpkg -l | grep&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;aaa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sudo apt-get update; sudo apt-get dist-upgrade; sudo apt-get autoremove&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;ls   &lt;span class="c"&gt;# display information about a command&lt;/span&gt;
ls is aliased to &lt;span class="s1"&gt;&amp;#39;ls -aFlhv --color=auto&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aliases created at the prompt persist only for the duration of the current session. Make them permanent by adding them to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.bashrc&lt;/span&gt;&lt;/tt&gt;. Examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;df -hT&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;colordiff&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;dpkgg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dpkg -l | grep&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;grep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;halt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl poweroff&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;mkdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mkdir -p -v&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;psg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ps aux | grep&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias pwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pwd -P&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;reboot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl reboot&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias suspend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl suspend&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</summary><category term="shell"></category><category term="linux"></category></entry><entry><title>Enable forward search in Bash history</title><link href="http://www.circuidipity.com/forward-search-bash.html" rel="alternate"></link><updated>2014-05-10T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-10:forward-search-bash.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-R&lt;/span&gt;&lt;/tt&gt; enables reverse incremental searches through the Bash shell history and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; runs forward searches. However &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; collides with XON/XOFF flow control in my terminal and disables that feature in history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Disable XON/XOFF in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.bashrc&lt;/span&gt;&lt;/tt&gt;...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;stty -ixon
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bonus: Hitting &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; by mistake in vim no longer disables output to the terminal.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://stackoverflow.com/questions/791765/unable-to-forward-search-bash-history-similarly-as-with-ctrl-r"&gt;Unable to forward search Bash history similarly as with CTRL-r&lt;/a&gt;&lt;/p&gt;
</summary><category term="shell"></category><category term="linux"></category></entry><entry><title>From Chromebook to Sidbook</title><link href="http://www.circuidipity.com/c720-sidbook.html" rel="alternate"></link><updated>2014-05-09T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-09:c720-sidbook.html</id><summary type="html">&lt;p&gt;A guide for replacing Chrome OS with &lt;strong&gt;Debian &amp;quot;Sid&amp;quot; Unstable&lt;/strong&gt; on the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="Debianized Acer C720" class="align-right" src="images/sidbook.png" style="width: 300px; height: 161px;" /&gt;
&lt;p&gt;Running a full-featured Linux on this little laptop is a delight: lightweight, several hours battery life, inexpensive, and snappy using my preferred window manager (&lt;a class="reference external" href="http://openbox.org/"&gt;Openbox&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;There are a few different configurations of this device... mine is the &lt;a class="reference external" href="http://us.acer.com/ac/en/US/content/model-datasheet/NX.SHEAA.002"&gt;C720-2848&lt;/a&gt; non-touchscreen model with 2GB RAM and 16GB SSD.&lt;/p&gt;
&lt;div class="section" id="step-0-recovery-image"&gt;
&lt;h2&gt;Step 0 - Recovery Image&lt;/h2&gt;
&lt;p&gt;Create a recovery image of Chrome OS in case you need to restore the Chromebook to its default configuration. This will require a spare USB stick of 4GB or better...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Log into the Chromebook and let it auto update, as there sometimes are firmware updates... check the updating status in the browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://help&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Insert the USB stick, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://imageburner&lt;/span&gt;&lt;/tt&gt; and follow the directions to generate a recovery image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://support.google.com/chromebook/answer/1080595?hl=en"&gt;Create a Chromebook recovery image&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-debian-installer"&gt;
&lt;h2&gt;Step 1 - Debian Installer&lt;/h2&gt;
&lt;p&gt;I use &lt;a class="reference external" href="http://grml.org/"&gt;GRML 2014.03&lt;/a&gt; installed on a USB stick as my Debian install media.&lt;/p&gt;
&lt;p&gt;Sources: Creating a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt; and &lt;a class="reference external" href="http://www.circuidipity.com/grml-debootstrap.html"&gt;installing Debian using grml-debootstrap&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-developer-mode"&gt;
&lt;h2&gt;Step 2 - Developer Mode&lt;/h2&gt;
&lt;p&gt;Before booting the Debian installer the Chromebook needs to be put into developer mode...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;With the Chromebook off... Hold down &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ESC-F3&lt;/span&gt;&lt;/tt&gt; (Refresh) keys and power on the device&lt;/li&gt;
&lt;li&gt;Invoke Recovery, and at the Recovery screen press &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Ctrl-D&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Device will prompt for confirmation, press &lt;tt class="docutils literal"&gt;ENTER&lt;/tt&gt; and the system reboots into developer mode&lt;/li&gt;
&lt;li&gt;'Scary' white boot screen appears and you need to press &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Ctrl-D&lt;/span&gt;&lt;/tt&gt; to continue boot&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Switching between developer and normal (non-developer) modes will remove user accounts and their associated information from your Chromebook.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-usb-boot-and-legacy-bios"&gt;
&lt;h2&gt;Step 3 - USB Boot and Legacy BIOS&lt;/h2&gt;
&lt;p&gt;Open up a shell in Chrome OS by pressing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Ctrl-Alt-T&lt;/span&gt;&lt;/tt&gt; and enter &lt;tt class="docutils literal"&gt;shell&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Enable &lt;tt class="docutils literal"&gt;dev_boot_usb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dev_boot_legacy&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_usb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connect the USB install stick, reboot the Chromebook and press &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-L&lt;/span&gt;&lt;/tt&gt; at the white splash screen to enter legacy boot mode.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.chromium.org/chromium-os"&gt;Chromium OS&lt;/a&gt; developer information for the &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook"&gt;Acer C720 Chromebook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-install-debian"&gt;
&lt;h2&gt;Step 4 - Install Debian&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/grml-debootstrap.html"&gt;grml-debootstrap instructions&lt;/a&gt; for installing Debian Wheezy, configuring TRIM support for the SSD, and my &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/debian_post_install"&gt;post-install script&lt;/a&gt; for upgrading and configuring Debian's sid/unstable branch.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;After Debian is successfully installed the white boot screen will continue to appear at boot time. Keep pressing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-L&lt;/span&gt;&lt;/tt&gt; to fire up GRUB... &lt;strong&gt;DO NOT&lt;/strong&gt; follow the suggestion to press spacebar and proceed, or &lt;a class="reference external" href="http://www.reddit.com/r/chrubuntu/comments/1v7i0i/what_will_happen_if_i_press_the_spacebar_on_the/"&gt;your system may be wiped&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-5-touchpad"&gt;
&lt;h2&gt;Step 5 - Touchpad&lt;/h2&gt;
&lt;p&gt;After installing Debian the C720 touchpad is non-functional and requires compiling new kernel modules and creating a synaptic touchpad config file...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Compile new kernel modules using the &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/sid-c720-kern-mods.sh"&gt;sid-c720-kern-mods.sh&lt;/a&gt; script... Confirmed &lt;strong&gt;working&lt;/strong&gt; in kernel &lt;tt class="docutils literal"&gt;3.13.10&lt;/tt&gt; and &lt;strong&gt;not working&lt;/strong&gt; in &lt;tt class="docutils literal"&gt;3.14.x&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Create touchpad config &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/50-c720-touchpad.conf"&gt;50-c720-touchpad.conf&lt;/a&gt; in &lt;tt class="docutils literal"&gt;/etc/X11/xorg.conf.d&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/X11/xorg.conf.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/50-c720-touchpad.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify this file to adjust timeouts, add tap-mouse actions (2-finger tap = right-click, 3-finger tap = middle-click), and 2-finger scrolling.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Touchpad Synaptics&lt;/a&gt; and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook#configuration"&gt;C720 configuration&lt;/a&gt; on the Arch Wiki&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-6-suspend"&gt;
&lt;h2&gt;Step 6 - Suspend&lt;/h2&gt;
&lt;p&gt;Enable suspend|resume under &lt;strong&gt;systemd&lt;/strong&gt; (for sysv-init see &lt;em&gt;Helpful Resources&lt;/em&gt; at bottom)...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/cros-sound-suspend.sh"&gt;cros-sound-suspend.sh&lt;/a&gt; (make it executable) in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/systemd/system-sleep&lt;/span&gt;&lt;/tt&gt; and...&lt;/li&gt;
&lt;li&gt;... &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/cros-acpi-wakeup.conf"&gt;cros-acpi-wakeup.conf&lt;/a&gt; in &lt;tt class="docutils literal"&gt;/etc/tmpfiles.d&lt;/tt&gt; to restore sound and touchpad after suspend&lt;/li&gt;
&lt;li&gt;Configure &lt;tt class="docutils literal"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/tt&gt; setting in &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash add_efi_memmap boot=local noresume noswap i915.modeset=1 tpm_tis.force=1 tpm_tis.interrupts=0 nmi_watchdog=panic,lapic&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and update the grub config...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://plus.google.com/+PedroLarroy/posts/6CgQypQukMa"&gt;Chrubuntu resume fix&lt;/a&gt; on Google+, &lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=1364521#p1364521"&gt;Acer C720 thread&lt;/a&gt; in Arch Forums, and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Allow_users_to_shutdown"&gt;systemctl user controls&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-7-keyboard-shortcuts"&gt;
&lt;h2&gt;Step 7 - Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;The top row on the keyboard with the shortcut icons (brightness, volume, etc.) identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the Search key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as the &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Create keyboard shortcuts in Openbox to modify the sound, brightness, and page movement settings by first installing...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;amixer - command line mixer&lt;/li&gt;
&lt;li&gt;xbacklight - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;xdotool - simulate keyboard/mouse input&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install alsa-utils xbacklight xdotool
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and creating keybindings in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.config/openbox/rc.xml&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="section" id="sound"&gt;
&lt;h3&gt;Sound&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;!-- Keybindings &lt;span class="k"&gt;for &lt;/span&gt;Acer C720 volume keys: mute/down/up --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master toggle&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F9&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master 5%- unmute&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F10&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master 5%+ unmute&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="display-brightness"&gt;
&lt;h3&gt;Display Brightness&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;!-- Keybingings &lt;span class="k"&gt;for &lt;/span&gt;Acer C720 brightness keys: lower/raise --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F6&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xbacklight - 10&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F7&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xbacklight + 10&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="page-up-page-down-home-end"&gt;
&lt;h3&gt;Page-Up, Page-Down, Home, End&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &amp;lt;!-- Keybindings &lt;span class="k"&gt;for &lt;/span&gt;Page-Up, Page-Down, Home, End --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A-Up&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Page_Up&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A-Down&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
       &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Page_Down&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C-A-Up&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Home&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C-A-Down&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers End&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="power-key"&gt;
&lt;h2&gt;Power Key&lt;/h2&gt;
&lt;p&gt;The power key ignores any configuration in the window manager and triggers poweroff without delay when pressed (easy to do by accident as its positioned next to &lt;tt class="docutils literal"&gt;backspace&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;If you want to disable the power key... modify &lt;tt class="docutils literal"&gt;/etc/systemd/logind.conf&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;HandlePowerKey=ignore&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;Helpful Resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/tree/master/extra/c720/debian"&gt;C720 config files&lt;/a&gt; and the output of &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/lshw.txt"&gt;lshw&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/lspci.txt"&gt;lspci&lt;/a&gt;, and &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/lsusb.txt"&gt;lsusb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/liangcj/AcerC720CrunchBang"&gt;CrunchBang Linux on the C720&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook"&gt;Arch Linux wiki entry for the C720&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.reddit.com/r/chrubuntu/comments/1rsxkd/list_of_fixes_for_xubuntu_1310_on_the_acer_c720/"&gt;List of fixes for Xubuntu 13.10 on the C720&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="chrome"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>Ubuntu 14.04 and Virtualbox</title><link href="http://www.circuidipity.com/ubuntu1404-virtualbox.html" rel="alternate"></link><updated>2014-04-27T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-04-27:ubuntu1404-virtualbox.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; is virtualization software that allows a Linux user to HOST multiple GUEST operating systems as &lt;em&gt;virtual machines&lt;/em&gt; (VMs). Its a cool tool for playing with different Linux distros and experimenting with configurations.&lt;/p&gt;
&lt;p&gt;In this HOWTO I install Virtualbox on a Debian HOST and create an Ubuntu GUEST virtual machine.&lt;/p&gt;
&lt;div class="section" id="step-0-install-virtualbox-on-host"&gt;
&lt;h2&gt;Step 0 - Install VirtualBox on HOST&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential dkms module-assistant linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install virtualbox virtualbox-dkms virtualbox-qt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Virtualbox kernel modules are built via &lt;em&gt;Dynamic Kernel Module Support&lt;/em&gt; (&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support"&gt;DKMS&lt;/a&gt;). After installing the virtualbox packages the &lt;tt class="docutils literal"&gt;vbox&lt;/tt&gt; modules should be auto-built and -loaded ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsmod | grep vbox
vboxpci                19066  0
vboxnetadp             13155  0
vboxnetflt             23571  0
vboxdrv               190057  4 vboxnetflt,vboxnetadp,vboxpci
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I add my USERNAME to the &lt;tt class="docutils literal"&gt;vboxusers&lt;/tt&gt; group...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser YOUR_USERNAME vboxusers
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-create-the-ubuntu-guest"&gt;
&lt;h2&gt;Step 1 - Create the Ubuntu GUEST&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;Default Machine Folder&lt;/em&gt; where VM images are stored is &lt;tt class="docutils literal"&gt;$HOME/Virtualbox VMs&lt;/tt&gt; (this can be modified in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;File-&amp;gt;Preferences-&amp;gt;General&lt;/span&gt;&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;See the &lt;a class="reference external" href="http://www.virtualbox.org/manual/UserManual.html"&gt;User Manual&lt;/a&gt; for creating a GUEST virtual machine. I use the &lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/current/images/netboot/"&gt;Ubuntu mini.iso installer&lt;/a&gt; to create a new virtual machine with a minimal system configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-guest-additions"&gt;
&lt;h2&gt;Step 2 - GUEST Additions&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Guest Additions&lt;/em&gt; provide extra features such as the ability to tweak display settings and add a shared folder that can accessed by both HOST and GUEST machines.&lt;/p&gt;
&lt;p&gt;On the new Ubuntu GUEST run...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential module-assistant linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt; dkms
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo m-a prepare
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser YOUR_USERNAME vboxsf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the virtualbox modules need to be rebuilt for any reason for the running kernel...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;uname -r | sudo xargs -n1 /usr/lib/dkms/dkms_autoinstaller start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot Ubuntu GUEST and &lt;tt class="docutils literal"&gt;vbox&lt;/tt&gt; drivers should now be loaded...&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;lsmod | grep vbox
vboxguest
vboxsf
vboxvideo
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-guest-configuration"&gt;
&lt;h2&gt;Step 3 - GUEST Configuration&lt;/h2&gt;
&lt;p&gt;Tweak display settings by going to the Virtualbox &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Machine-&amp;gt;Settings...-&amp;gt;Display&lt;/span&gt;&lt;/tt&gt; setting and move the slider to add more video memory and enable 3d acceleration.&lt;/p&gt;
&lt;img alt="Display Settings" class="align-center" src="images/20121207-display.png" style="width: 662px; height: 502px;" /&gt;
&lt;p&gt;With VirtualBox guest additions the display and resolution can be changed when running X...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ps aux | grep VBox
/usr/sbin/VBoxService
/usr/bin/VBoxClient --clipboard
/usr/bin/VBoxClient --display
/usr/bin/VBoxClient --seamless
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If GUEST does not use a graphical login manager to launch its desktop then modify &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xinitrc&lt;/span&gt;&lt;/tt&gt; to start VBoxClient services...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;VBoxClient --clipboard &amp;amp;
VBoxClient --display &amp;amp;
VBoxClient --seamless &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next create a shared folder on HOST. Make it accessible to GUEST by going to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Machine-&amp;gt;Settings...-&amp;gt;Shared&lt;/span&gt; Folders&lt;/tt&gt; and click &lt;tt class="docutils literal"&gt;Add Shared Folder&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Auto-Mount&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="Shared Folder Settings" class="align-center" src="images/20121207-shared-folders.png" style="width: 662px; height: 502px;" /&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="virtual environments"></category><category term="debian"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>No udevd no auto-mount</title><link href="http://www.circuidipity.com/no-udevd-no-automount.html" rel="alternate"></link><updated>2014-04-14T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-04-14:no-udevd-no-automount.html</id><summary type="html">&lt;p&gt;Problem: Auto-mounting USB storage devices fails in &lt;tt class="docutils literal"&gt;thunar&lt;/tt&gt; file manager.&lt;/p&gt;
&lt;p&gt;I ran into a situation today where changing from &lt;tt class="docutils literal"&gt;init 2&lt;/tt&gt; -&amp;gt; &lt;tt class="docutils literal"&gt;init 1&lt;/tt&gt; -&amp;gt; &lt;tt class="docutils literal"&gt;init 2&lt;/tt&gt; failed to restart the udev daemon and rendered USB mounting non-functional.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIX:&lt;/strong&gt; Confirm &lt;tt class="docutils literal"&gt;udevd&lt;/tt&gt; is running and - if not - start the daemon ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ps ax | grep udevd
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service udev start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and after plugging in a USB stick additional udisk activity is generated ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ps ax | grep udisk | awk &lt;span class="s1"&gt;&amp;#39;{print $5}&amp;#39;&lt;/span&gt;
/usr/lib/gvfs/gvfs-udisks2-volume-monitor
/usr/lib/udisks2/udisksd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope it helps!&lt;/p&gt;
</summary><category term="linux"></category></entry><entry><title>Install Debian using grml-debootstrap</title><link href="http://www.circuidipity.com/grml-debootstrap.html" rel="alternate"></link><updated>2014-04-08T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-04-08:grml-debootstrap.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://grml.org/"&gt;Grml&lt;/a&gt; is a Debian-based Linux distribution optimized for running off USB sticks and taking care of sysadmin duties. One of its cool programs that I have been exploring is &lt;a class="reference external" href="http://grml.org/grml-debootstrap/"&gt;grml-debootstrap&lt;/a&gt; ... a console application that makes it very easy to set custom options and install Debian.&lt;/p&gt;
&lt;p&gt;Here is a step-by-step process using grml-debootstrap to implement the following sample installation on a solid-state drive (SSD):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;create encrypted root + swap&lt;/li&gt;
&lt;li&gt;install Debian &lt;em&gt;wheezy&lt;/em&gt; (stable)&lt;/li&gt;
&lt;li&gt;upgrade to Debian &lt;em&gt;sid&lt;/em&gt; (unstable) rolling release&lt;/li&gt;
&lt;li&gt;configure &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Solid_State_Drives"&gt;TRIM&lt;/a&gt; on the SSD to maximize performance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: Debian installation with &lt;a class="reference external" href="http://michael-prokop.at/blog/2014/02/28/state-of-the-art-debianwheezy-deployments-with-grub-and-lvmsw-raidcrypto/"&gt;GRUB2 + GPT + LUKS crypto&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="step-0-prepare-usb-boot-device"&gt;
&lt;h2&gt;Step 0 - Prepare USB boot device&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://grml.org/download/"&gt;Download&lt;/a&gt; a Grml 32- or 64-bit ISO (or the 2-in-1 &lt;strong&gt;grml96&lt;/strong&gt; [my choice]) and simply &lt;tt class="docutils literal"&gt;dd&lt;/tt&gt; the image to a spare USB device.&lt;/p&gt;
&lt;p&gt;An alternate, more flexible approach (does not take over the entire drive) is &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;transforming a USB stick into a GRUB boot device&lt;/a&gt; then adding the grml ISO as a menu entry that can co-exist with &lt;a class="reference external" href="http://www.circuidipity.com/grubs.html"&gt;multiple Linux distros&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-boot-network-and-partitions"&gt;
&lt;h2&gt;Step 1 - Boot, network and partitions&lt;/h2&gt;
&lt;p&gt;Boot Grml with the &lt;em&gt;toram&lt;/em&gt; option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;grml64-full&lt;/span&gt; - advanced options &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; copy Grml to RAM&lt;/tt&gt;. This way we can make use of the USB boot device as storage for any extra packages or scripts we might want to use on the new Debian system.&lt;/p&gt;
&lt;p&gt;Use the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;grml-network&lt;/span&gt;&lt;/tt&gt; command to launch an interactive configuration of network interfaces. A sample entry generated for wifi in &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iface wlan0 inet dhcp
    wireless-mode auto
    wireless-essid MY_ROUTER
    wpa-ssid SSID
    wpa-psk PASSWORD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A sample &lt;em&gt;GUID Partition Table&lt;/em&gt; (GPT) layout:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 - BIOS boot partition - 2MB&lt;/li&gt;
&lt;li&gt;sda2 - boot - 200MB&lt;/li&gt;
&lt;li&gt;sda3 - swap - 1GB&lt;/li&gt;
&lt;li&gt;sda4 - root - remaining space&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create the above using &lt;tt class="docutils literal"&gt;parted&lt;/tt&gt; (note: any changes are executed instantly) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;parted -a optimal /dev/sda
print
mklabel gpt
unit mib
mkpart primary 1 3
name 1 grub
&lt;span class="nb"&gt;set &lt;/span&gt;1 bios_grub on
mkpart primary 3 203
name 2 boot
mkpart primary 203 1203
name 3 swap
mkpart primary 1203 -1
name 4 root
print
quit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that a partition is properly aligned query it using &lt;tt class="docutils literal"&gt;blockdev&lt;/tt&gt; ('0' return = aligned) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;blockdev --getalignoff /dev/&amp;lt;partition&amp;gt;
0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="http://git.grml.org/?p=grml-live.git;a=blob_plain;f=templates/GRML/grml-cheatcodes.txt;hb=HEAD"&gt;Grml boot cheatcodes&lt;/a&gt;, the &lt;a class="reference external" href="https://www.gnu.org/software/grub/manual/html_node/BIOS-installation.html"&gt;BIOS Boot Partition&lt;/a&gt;, and &lt;a class="reference external" href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&amp;amp;chap=4"&gt;partitioning disks using parted&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-cryptsetup"&gt;
&lt;h2&gt;Step 2 - Cryptsetup&lt;/h2&gt;
&lt;p&gt;Set the newly-created root partition for encrypted storage and create filesystems for &lt;tt class="docutils literal"&gt;boot&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;crypt-root&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;cryptsetup &amp;gt;&amp;gt; /etc/debootstrap/packages  &lt;span class="c"&gt;# only necessary for Grml &amp;lt;=2013.09&lt;/span&gt;
cryptsetup luksFormat -c aes-xts-plain64 -s 256 /dev/sda4
cryptsetup luksOpen /dev/sda4 crypt_root
mkfs.ext4 /dev/sda2
mkfs.ext4 /dev/mapper/crypt_root
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-install-debian"&gt;
&lt;h2&gt;Step 3 - Install Debian&lt;/h2&gt;
&lt;p&gt;Any extra packages to be installed can be added to the list in &lt;tt class="docutils literal"&gt;/etc/debootstrap/packages&lt;/tt&gt; and scripts to customize the setup can be placed in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/debootstrap/chroot-scripts/&lt;/span&gt;&lt;/tt&gt;. Check out the &lt;a class="reference external" href="http://grml.org/grml-debootstrap/"&gt;grml-debootstrap HOWTO&lt;/a&gt; for many possible options ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mount -t ext4 /dev/mapper/crypt_root /media
mkdir /media/boot
mount -t ext4 /dev/sda2 /media/boot
&lt;span class="c"&gt;# optional: with &amp;#39;toram&amp;#39; usb stick can be mounted to /media... check /etc/fstab for auto-generated entries&lt;/span&gt;
grml-debootstrap --target /media --password &lt;span class="s2"&gt;&amp;quot;PASSWORD&amp;quot;&lt;/span&gt; --hostname HOSTNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If grml-debootstrap is run with no options a limited interactive menu is provided ... otherwise the necessary Debian packages are downloaded and system setup runs unattended to completion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-adjust-crypttab-fstab-initramfs"&gt;
&lt;h2&gt;Step 4 - Adjust crypttab, fstab, initramfs&lt;/h2&gt;
&lt;p&gt;Next step is to enter &lt;tt class="docutils literal"&gt;chroot&lt;/tt&gt; and perform post-install configuration ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grml-chroot /media /bin/bash
grub-install /dev/sda
update-grub
&lt;span class="c"&gt;# For SSD add the &amp;#39;discard&amp;#39; option&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crypt_root /dev/sda4 none luks,discard&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/crypttab
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;crypt_swap /dev/sda3 /dev/urandom cipher=aes-xts-plain64,size=256,discard,swap&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/crypttab
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/dev/mapper/crypt_root / ext4 noatime,discard,errors=remount-ro 0 1&amp;quot;&lt;/span&gt; &amp;gt; /etc/fstab
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/dev/sda2 /boot ext4 noatime,discard 0 2&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/fstab
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/dev/mapper/crypt_swap none swap sw,discard 0 0&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/fstab
update-initramfs -u -k all
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.linuxjournal.com/content/solid-state-drives-get-one-already"&gt;TRIM configuration on solid-state drives&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-5-sid-and-swappiness"&gt;
&lt;h2&gt;Step 5 - Sid and swappiness&lt;/h2&gt;
&lt;p&gt;It is possible to use grml-debootstrap to directly install a Debian &lt;tt class="docutils literal"&gt;sid/unstable&lt;/tt&gt; setup. But I have experienced greater success by first installing a minimal &lt;tt class="docutils literal"&gt;stable&lt;/tt&gt; system before doing a dist-upgrade to track the &lt;tt class="docutils literal"&gt;unstable&lt;/tt&gt; rolling release.&lt;/p&gt;
&lt;p&gt;Optional: Continuing configuration inside &lt;tt class="docutils literal"&gt;chroot&lt;/tt&gt; ... upgrade &lt;tt class="docutils literal"&gt;wheezy&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;sid&lt;/tt&gt; by modifying &lt;tt class="docutils literal"&gt;/etc/apt/sources.list&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;### unstable ###&lt;/span&gt;
deb http://http.debian.net/debian unstable main contrib non-free
deb-src http://http.debian.net/debian unstable main contrib non-free
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; update &amp;amp;&amp;amp; &lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;dist-upgrade&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Swappiness"&gt;swappiness&lt;/a&gt; parameter controls the preference of the kernel to move processes out of physical memory to the swap partition. Range is 0-100, default is set to 60 and lower values cause the kernel to avoid swapping and higher values prompt more frequent swap use.&lt;/p&gt;
&lt;p&gt;To reduce writes on the SSD set a low value of '1' ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# check current swappiness value&lt;/span&gt;
cat /proc/sys/vm/swappiness
&lt;span class="c"&gt;# temporarily change value&lt;/span&gt;
/sbin/sysctl vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="c"&gt;# permanently change value... modify &amp;#39;vm.swappiness&amp;#39; value in /etc/sysctl.conf...&lt;/span&gt;
vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-6-reboot"&gt;
&lt;h2&gt;Step 6 - Reboot&lt;/h2&gt;
&lt;p&gt;With everything configured to satisfaction ... exit the chroot, unmount partitions, and reboot into the new Debian system ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
umount /media/boot
umount /media
cryptsetup luksClose /dev/mapper/crypt_root
reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and enjoy!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="grml"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>Download videos using youtube-dl</title><link href="http://www.circuidipity.com/youtube-dl.html" rel="alternate"></link><updated>2014-04-01T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-04-01:youtube-dl.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://rg3.github.io/youtube-dl/"&gt;youtube-dl&lt;/a&gt; is a cool command-line program for downloading videos from a whole bunch of online video sites. It can also convert videos into audio files (courtesy of &lt;tt class="docutils literal"&gt;ffmpeg&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;To install on Debian (&lt;tt class="docutils literal"&gt;ffmpeg&lt;/tt&gt; requires &lt;a class="reference external" href="http://www.deb-multimedia.org/"&gt;deb-multimedia&lt;/a&gt;) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install youtube-dl rtmpdump ffmpeg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basic usage ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;youtube-dl https://www.youtube.com/watch?v&lt;span class="o"&gt;=&lt;/span&gt;SOMEiD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... will download the best quality copy (default) of the specified video hosted on YouTube to the current directory.&lt;/p&gt;
&lt;p&gt;To enable audio extraction with a few desirable pre-configured options I create a new &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;youtube-dl-audio&lt;/span&gt;&lt;/tt&gt; alias in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;youtube-dl-audio&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;youtube-dl $1 --output &amp;quot;$HOME/audio/%(title)s-%(upload_date)s.%(ext)s&amp;quot; --restrict-filenames --extract-audio --audio-format &amp;quot;mp3&amp;quot; --audio-quality &amp;quot;0&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... using these options ...&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;$1&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;video URL&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--output&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;$HOME/audio/%(title)s-%(upload_date)s.%(ext)s&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;save file to &lt;em&gt;$HOME/audio/&lt;/em&gt; and rename file using template &lt;em&gt;%(title)s-%(upload_date)s.%(ext)s&lt;/em&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--restrict-filenames&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;removes spaces and non-alphanumeric characters from filename&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--extract-audio&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--audio-format&lt;/span&gt; &amp;quot;mp3&amp;quot;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;create an &lt;em&gt;mp3&lt;/em&gt; audio file and delete the video (or add the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-k&lt;/span&gt;&lt;/tt&gt; option to save video)&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--audio-quality&lt;/span&gt; &amp;quot;0&amp;quot;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;set a value between 0-9 (lower equals better) for VBR or assign a specific bitrate (default is 5|128K)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Reload the config and extract audio from an online video ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class="nv"&gt;$ &lt;/span&gt;youtube-dl-audio https://www.youtube.com/watch?v&lt;span class="o"&gt;=&lt;/span&gt;SOMEiD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;tt class="docutils literal"&gt;man &lt;span class="pre"&gt;youtube-dl&lt;/span&gt;&lt;/tt&gt; for more possibilities!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I skipped the alterations to &lt;tt class="docutils literal"&gt;.bashrc&lt;/tt&gt; and created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/youtube-dl-audio"&gt;youtube-dl-audio&lt;/a&gt; program with a few extra options.&lt;/p&gt;
&lt;p&gt;To use: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/youtube-dl-audio"&gt;download&lt;/a&gt; the script and its companion &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/Library.sh"&gt;Library.sh&lt;/a&gt; to &lt;tt class="docutils literal"&gt;$HOME/bin&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Source: &lt;em&gt;Thanks Paul!&lt;/em&gt;&lt;/p&gt;
</summary><category term="shell"></category><category term="programming"></category><category term="linux"></category></entry><entry><title>Stop SHOUTING and convert Caps_Lock into a Super key</title><link href="http://www.circuidipity.com/super-key.html" rel="alternate"></link><updated>2014-03-31T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-03-31:super-key.html</id><summary type="html">&lt;p&gt;For my Openbox &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-config/blob/master/.config/openbox/rc.xml"&gt;rc.xml configuration&lt;/a&gt; I frequently enlist the &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) key in creating hotkey combos. Since the &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; key is larger, better placed, and rarely used I transformed it into another &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; modifier key. An added bonus is that I can preserve my hotkeys configuration on keyboards lacking a dedicated &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; key (example: my old Thinkpad X31) plus the new Chromebooks have a dedicated &lt;tt class="docutils literal"&gt;Search&lt;/tt&gt; key in the old &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; location that by default acts as a &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; key under Linux.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;xev&lt;/tt&gt; is a neat utility run in the terminal that allows one to press keys and outputs the corresponding &lt;em&gt;keycode&lt;/em&gt;. The &lt;tt class="docutils literal"&gt;Caps_Lock&lt;/tt&gt; key is &lt;tt class="docutils literal"&gt;Keycode 66&lt;/tt&gt;. Create/edit &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/home/USER/.xmodmap&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;! Clear the caps_lock key binding
clear lock
! Convert caps_lock into a super key
keycode &lt;span class="nv"&gt;66&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Super_L
add &lt;span class="nv"&gt;mod4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Super_L
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test the new setting by running &lt;tt class="docutils literal"&gt;xmodmap &lt;span class="pre"&gt;~/.xmodmap&lt;/span&gt;&lt;/tt&gt;. Place the command in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/home/USER/.xinitrc&lt;/span&gt;&lt;/tt&gt; to auto-load when running &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.danplanet.com/blog/2011/04/14/a-super-key-for-people-with-real-keyboards/"&gt;A super key for people with real keyboards&lt;/a&gt;&lt;/p&gt;
</summary><category term="linux"></category></entry></feed>