<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feed.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2017-06-16T09:38:00-04:00</updated><entry><title>Neurocomic</title><link href="http://www.circuidipity.com/neurocomic.html" rel="alternate"></link><published>2017-06-16T09:38:00-04:00</published><updated>2017-06-16T09:38:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-06-16:/neurocomic.html</id><summary type="html">&lt;img alt="Neurocomic cover" class="align-left" src="images/neurocomic.jpg" style="width: 150px; height: 205px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;Neurocomic&lt;/strong&gt; &lt;em&gt;by Dr. Matteo Farinella and Dr. Hana Ros&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 9781907704703)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A wonderful graphic novel sponsored by the Wellcome Trust that takes an expedition through the human brain and where we meet explorers along the way: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Santiago_Ram%C3%B3n_y_Cajal"&gt;Santiago Ramón y Cajal&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Camillo_Golgi"&gt;Camillo Golgi&lt;/a&gt; in the neural forest, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Charles_Scott_Sherrington"&gt;Charles Scott Sherrington …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;img alt="Neurocomic cover" class="align-left" src="images/neurocomic.jpg" style="width: 150px; height: 205px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;Neurocomic&lt;/strong&gt; &lt;em&gt;by Dr. Matteo Farinella and Dr. Hana Ros&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 9781907704703)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A wonderful graphic novel sponsored by the Wellcome Trust that takes an expedition through the human brain and where we meet explorers along the way: &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Santiago_Ram%C3%B3n_y_Cajal"&gt;Santiago Ramón y Cajal&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Camillo_Golgi"&gt;Camillo Golgi&lt;/a&gt; in the neural forest, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Charles_Scott_Sherrington"&gt;Charles Scott Sherrington&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Bernard_Katz"&gt;Bernard Katz&lt;/a&gt; down in the synaptic control room readying a release of vesicles, paratrooping neurotransmitters, fending off giant squid with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Alan_Lloyd_Hodgkin"&gt;Alan Hodgkin&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Andrew_Huxley"&gt;Andrew Huxley&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Eric_Kandel"&gt;Eric Kandel&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Classical_conditioning"&gt;Pavlov (not) feeding the dog&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hans_Berger"&gt;Hans Berger&lt;/a&gt; atop the mountain, finally pushing on to face our (false?) sense of self in the Castle of Consciousness.&lt;/p&gt;
&lt;p&gt;I am really intrigued by Berger's invention of the &lt;strong&gt;electroencephalogram&lt;/strong&gt; in 1924 and what reading the electrical activity of the brain actually represents, and how we could possibly tease more data out of the patterns. It sounds like the kind of &lt;strong&gt;affordable and noninvasive&lt;/strong&gt; (bonus!) tech that lends itself to happy hacking!&lt;/p&gt;
</content><category term="books"></category></entry><entry><title>Verify a PGP signature with GnuPG</title><link href="http://www.circuidipity.com/verify-pgp-signature-gnupg.html" rel="alternate"></link><published>2017-06-10T09:00:00-04:00</published><updated>2017-06-10T09:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-06-10:/verify-pgp-signature-gnupg.html</id><summary type="html">&lt;p&gt;I setup &lt;a class="reference external" href="https://www.gnupg.org/"&gt;GNU Privacy Guard&lt;/a&gt; (&lt;strong&gt;GnuPG&lt;/strong&gt; or &lt;strong&gt;GPG&lt;/strong&gt;) - a free software implementation of OpenPGP - and use the utility to verify the PGP signatures of files.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Using a &lt;strong&gt;PGP private/public keypair&lt;/strong&gt; to create a &lt;strong&gt;digital signature&lt;/strong&gt; for a file certifies its integrity. A developer signs a package with …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I setup &lt;a class="reference external" href="https://www.gnupg.org/"&gt;GNU Privacy Guard&lt;/a&gt; (&lt;strong&gt;GnuPG&lt;/strong&gt; or &lt;strong&gt;GPG&lt;/strong&gt;) - a free software implementation of OpenPGP - and use the utility to verify the PGP signatures of files.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Using a &lt;strong&gt;PGP private/public keypair&lt;/strong&gt; to create a &lt;strong&gt;digital signature&lt;/strong&gt; for a file certifies its integrity. A developer signs a package with their private key and the receiver verifies the signature with the public key. If the package has been modified or corrupted in transmission the verification will fail.&lt;/p&gt;
&lt;div class="section" id="install-gnupg"&gt;
&lt;h3&gt;0. Install GnuPG&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install gnupg dirmngr
$ gpg --version
gpg &lt;span class="o"&gt;(&lt;/span&gt;GnuPG&lt;span class="o"&gt;)&lt;/span&gt; 2.1.18
libgcrypt 1.7.6-beta
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First time invoking &lt;tt class="docutils literal"&gt;gpg &lt;span class="pre"&gt;--list-keys&lt;/span&gt;&lt;/tt&gt; with an empty &lt;strong&gt;keyring&lt;/strong&gt; generates a config directory in $HOME ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --list-keys
gpg: directory &lt;span class="s1"&gt;&amp;#39;/home/dwa/.gnupg&amp;#39;&lt;/span&gt; created
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Default config files are &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/gpg.conf&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/dirmngr.conf&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="keyserver"&gt;
&lt;h3&gt;1. Keyserver&lt;/h3&gt;
&lt;p&gt;Many keys are stored on a &lt;strong&gt;keyserver&lt;/strong&gt;. I choose the &lt;a class="reference external" href="https://riseup.net/en/security/message-security/openpgp/best-practices#selecting-a-keyserver-and-configuring-your-machine-to-refresh-your-keyring"&gt;recommended sks keyserver pool&lt;/a&gt;. Download the &lt;strong&gt;sks-keyservers.net CA&lt;/strong&gt; and verify the certificate ... &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget https://sks-keyservers.net/sks-keyservers.netCA.pem -P ~/.gnupg/
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.gnupg
$ openssl verify -trusted sks-keyservers.netCA.pem -check_ss_sig sks-keyservers.netCA.pem
sks-keyservers.netCA.pem: OK
$ openssl x509 -in sks-keyservers.netCA.pem -noout -text &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;X509v3 Subject Key Identifier&amp;quot;&lt;/span&gt; -A1 &lt;span class="p"&gt;|&lt;/span&gt; tail -n1
    E4:C3:2A:09:14:67:D8:4D:52:12:4E:93:3C:13:E8:A0:8D:DA:B6:F3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and compare with the &lt;a class="reference external" href="https://sks-keyservers.net/verify_tls.php"&gt;key identifier recorded at sks-keyservers.net.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add the keyserver and the CA to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gnupg/dirmngr.conf&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keyserver hkps://hkps.pool.sks-keyservers.net
hkp-cacert ~/.gnupg/sks-keyservers.netCA.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: &lt;a class="reference external" href="https://riseup.net/en/security/message-security/openpgp/best-practices"&gt;OpenPGP Best Practices&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="verify-a-pgp-signature"&gt;
&lt;h3&gt;2. Verify a PGP signature&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.debian.org/CD/verify"&gt;Verifying authenticity of Debian installer images:&lt;/a&gt; &amp;quot;Cryptographically strong checksum algorithms (SHA256 and SHA512) are available for every release ... To ensure that the checksums files themselves are correct, use GnuPG to verify them against the accompanying signature files.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Download the &lt;strong&gt;minimal network installer&lt;/strong&gt; and the signed checksum files ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget https://cdimage.debian.org/cdimage/release/current/amd64/iso-cd/debian-8.8.0-amd64-netinst.iso
$ wget https://cdimage.debian.org/cdimage/release/current/amd64/iso-cd/SHA512SUMS
$ wget https://cdimage.debian.org/cdimage/release/current/amd64/iso-cd/SHA512SUMS.sign
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Display the signing key ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --verify SHA512SUMS.sign SHA512SUMS
gpg: Signature made Sun &lt;span class="m"&gt;07&lt;/span&gt; May &lt;span class="m"&gt;2017&lt;/span&gt; 02:28:21 PM EDT
gpg:                using RSA key DA87E80D6294BE9B
gpg: Can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t check signature: No public key
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Show details of the key on the keyserver ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --search-keys DA87E80D6294BE9B
gpg: data source: https://gozer.rediris.es:443
&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; Debian CD signing key &amp;lt;debian-cd@lists.debian.org&amp;gt;
  &lt;span class="m"&gt;4096&lt;/span&gt; bit RSA key DA87E80D6294BE9B, created: 2011-01-05
  Keys 1-1 of &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DA87E80D6294BE9B&amp;quot;&lt;/span&gt;.  Enter number&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;, N&lt;span class="o"&gt;)&lt;/span&gt;ext, or Q&lt;span class="o"&gt;)&lt;/span&gt;uit &amp;gt; n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Import the key from the keyserver ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --recv-keys DA87E80D6294BE9B
gpg: key DA87E80D6294BE9B: public key &lt;span class="s2"&gt;&amp;quot;Debian CD signing key &amp;lt;debian-cd@lists.debian.org&amp;gt;&amp;quot;&lt;/span&gt; imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 1
gpg:               imported: 1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Display the keyring containing our new key ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --list-keys
/home/dwa/.gnupg/pubring.kbx
----------------------------
pub   rsa4096 2011-01-05 &lt;span class="o"&gt;[&lt;/span&gt;SC&lt;span class="o"&gt;]&lt;/span&gt;
    DF9B9C49EAA9298432589D76DA87E80D6294BE9B
    uid           &lt;span class="o"&gt;[&lt;/span&gt; unknown&lt;span class="o"&gt;]&lt;/span&gt; Debian CD signing key &amp;lt;debian-cd@lists.debian.org&amp;gt;
    sub   rsa4096 2011-01-05 &lt;span class="o"&gt;[&lt;/span&gt;E&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After importing the signing key ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gpg --verify SHA512SUMS.sign SHA512SUMS
gpg: Signature made Sun &lt;span class="m"&gt;07&lt;/span&gt; May &lt;span class="m"&gt;2017&lt;/span&gt; 02:28:21 PM EDT
gpg:                using RSA key DA87E80D6294BE9B
gpg: Good signature from &lt;span class="s2"&gt;&amp;quot;Debian CD signing key &amp;lt;debian-cd@lists.debian.org&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;unknown&lt;span class="o"&gt;]&lt;/span&gt;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: DF9B 9C49 EAA9 &lt;span class="m"&gt;2984&lt;/span&gt; &lt;span class="m"&gt;3258&lt;/span&gt;  9D76 DA87 E80D &lt;span class="m"&gt;6294&lt;/span&gt; BE9B
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The warning about &lt;tt class="docutils literal"&gt;key is not certified with a trusted signature&lt;/tt&gt; means GnuPG verified the key matches the signature but cannot guarantee the key really belongs to the developer. It is up to me to decide how much confidence to place in the authenticity of the key.&lt;/p&gt;
&lt;p&gt;For this Debian-provided signature file I compare the &lt;tt class="docutils literal"&gt;Primary key fingerprint&lt;/tt&gt; line to the key fingerprints recorded on &lt;a class="reference external" href="https://www.debian.org/CD/verify"&gt;the Debian website.&lt;/a&gt; Looks good! &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="verify-file-integrity"&gt;
&lt;h3&gt;3. Verify file integrity&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sha512sum --ignore-missing --check SHA512SUMS
debian-8.8.0-amd64-netinst.iso: OK
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Verifying &lt;a class="reference external" href="https://github.com/riseupnet/riseup_help/issues/145"&gt;keyserver pool certificate.&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://lkml.org/lkml/2016/8/15/445"&gt;DO NOT TRUST ANYTHING SHORTER THAN THE FINGERPRINTS.&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="gpg"></category><category term="crypto"></category><category term="shell"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>The Diving-Bell and the Butterfly</title><link href="http://www.circuidipity.com/diving-bell-and-the-butterfly.html" rel="alternate"></link><published>2017-06-09T07:30:00-04:00</published><updated>2017-06-09T07:30:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-06-09:/diving-bell-and-the-butterfly.html</id><summary type="html">&lt;img alt="book cover" class="align-left" src="images/diving-bell-and-the-butterfly.jpg" style="width: 150px; height: 243px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;The Diving-Bell and the Butterfly&lt;/strong&gt; &lt;em&gt;by Jean-Dominique Bauby&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 1857027795)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;On December, 1995 the 42-year-old author, editor-in-chief of &lt;em&gt;Elle&lt;/em&gt; magazine in Paris, suffered a massive brain-stem stroke. When he awoke from a coma three weeks later his mind made a rapid recovery but his body lay broken. His condition is …&lt;/p&gt;</summary><content type="html">&lt;img alt="book cover" class="align-left" src="images/diving-bell-and-the-butterfly.jpg" style="width: 150px; height: 243px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;The Diving-Bell and the Butterfly&lt;/strong&gt; &lt;em&gt;by Jean-Dominique Bauby&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;(ISBN: 1857027795)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;On December, 1995 the 42-year-old author, editor-in-chief of &lt;em&gt;Elle&lt;/em&gt; magazine in Paris, suffered a massive brain-stem stroke. When he awoke from a coma three weeks later his mind made a rapid recovery but his body lay broken. His condition is known as &amp;quot;locked-in syndrome&amp;quot; and he was paralyzed from head to toe with the exception of (a later) slight movement of the neck and the ability to blink his left eyelid.&lt;/p&gt;
&lt;p&gt;But what an eye! With one blink for yes, two for no, a system for translating blinks to alphabetic characters and a patient transcriber, he narrates this story of holding on to humanity with humour and of an imagination that can still roam free. Do we need to suffer tragedy before we can learn to be courageous and grateful and kind? &lt;em&gt;&amp;quot;Regret for a vanished past, and above all remorse for lost opportunities ... the women we were unable to love, the chances we failed to seize, the moments of happiness we allowed to drift away. Today it seems to me that my whole life was nothing but a string of those small near misses. A race whose result we know beforehand, but in which we fail to bet on the winner.&amp;quot;&lt;/em&gt;&lt;/p&gt;
</content><category term="books"></category></entry><entry><title>Scanner udev rule</title><link href="http://www.circuidipity.com/scanner-udev-rule.html" rel="alternate"></link><published>2017-06-07T14:56:00-04:00</published><updated>2017-06-07T14:56:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-06-07:/scanner-udev-rule.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;[ Problem ]&lt;/strong&gt; Client error trying to scan to a &lt;strong&gt;Brother MFC-J450DW&lt;/strong&gt; configured as a &lt;a class="reference external" href="http://www.circuidipity.com/network-printer-scanner.html"&gt;network scanner&lt;/a&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scanimage: open of device net:192.168.... failed: Invalid argument
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scanner &lt;strong&gt;does&lt;/strong&gt; accept jobs from the server. User belongs to the &lt;tt class="docutils literal"&gt;lp&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lpadmin&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;scanner&lt;/tt&gt; groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[ Fix! ]&lt;/strong&gt; Set world-writable permission on the scanner bus device …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;[ Problem ]&lt;/strong&gt; Client error trying to scan to a &lt;strong&gt;Brother MFC-J450DW&lt;/strong&gt; configured as a &lt;a class="reference external" href="http://www.circuidipity.com/network-printer-scanner.html"&gt;network scanner&lt;/a&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scanimage: open of device net:192.168.... failed: Invalid argument
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scanner &lt;strong&gt;does&lt;/strong&gt; accept jobs from the server. User belongs to the &lt;tt class="docutils literal"&gt;lp&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lpadmin&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;scanner&lt;/tt&gt; groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[ Fix! ]&lt;/strong&gt; Set world-writable permission on the scanner bus device ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsusb
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 006: ID 04f9:02fa Brother Industries, Ltd
$ ls /dev/bus/usb/001/006
crw-rw-r-- &lt;span class="m"&gt;1&lt;/span&gt; root lp 189, &lt;span class="m"&gt;5&lt;/span&gt; Jun  &lt;span class="m"&gt;6&lt;/span&gt; 17:24 /dev/bus/usb/001/006
$ sudo chmod &lt;span class="m"&gt;666&lt;/span&gt; /dev/bus/usb/001/006
$ ls /dev/bus/usb/001/006
crw-rw-rw- &lt;span class="m"&gt;1&lt;/span&gt; root lp 189, &lt;span class="m"&gt;5&lt;/span&gt; Jun  &lt;span class="m"&gt;6&lt;/span&gt; 17:24 /dev/bus/usb/001/006
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and it works. But when device is unplugged and re-plugged back in again it will be created with the old permissions.&lt;/p&gt;
&lt;p&gt;A more enduring fix is to create a &lt;strong&gt;udev rule&lt;/strong&gt; with desired permissions. First, retrieve the &lt;tt class="docutils literal"&gt;idVendor&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;idDevice&lt;/tt&gt; of the scanner ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsusb &lt;span class="p"&gt;|&lt;/span&gt; grep Brother
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device 006: ID 04f9:02fa Brother Industries, Ltd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... then create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/udev/rules.d/61-scanner.rules&lt;/span&gt;&lt;/tt&gt; for &lt;strong&gt;04f9:02fa&lt;/strong&gt; with desired permissions ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;SUBSYSTEMS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb&amp;quot;&lt;/span&gt;, ATTRS&lt;span class="o"&gt;{&lt;/span&gt;idVendor&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;04f9&amp;quot;&lt;/span&gt;, ATTRS&lt;span class="o"&gt;{&lt;/span&gt;idProduct&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;02fa&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GROUP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lp&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0666&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload rules ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo udevadm control --reload
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or simply disconnect and re-connect scanner to test ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls /dev/bus/usb/001/007
crw-rw-rw- &lt;span class="m"&gt;1&lt;/span&gt; root lp 189, &lt;span class="m"&gt;6&lt;/span&gt; Jun  &lt;span class="m"&gt;6&lt;/span&gt; 18:45 /dev/bus/usb/001/007
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content><category term="scanner"></category><category term="network"></category><category term="shell"></category><category term="linux"></category></entry><entry><title>Command line tools: rTorrent</title><link href="http://www.circuidipity.com/rtorrent.html" rel="alternate"></link><published>2017-06-05T21:40:00-04:00</published><updated>2017-06-05T21:40:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-06-05:/rtorrent.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #10 .:&lt;/a&gt; A text-based &lt;strong&gt;BitTorrent client&lt;/strong&gt; that - combined with &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; - makes a cool lightweight torrent server.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I can &lt;tt class="docutils literal"&gt;ssh&lt;/tt&gt; into my home server, start a tmux session and create multiple windows, run &lt;strong&gt;rTorrent&lt;/strong&gt; in a window to start seeding a Linux &lt;tt class="docutils literal"&gt;iso&lt;/tt&gt;, detach from session and …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #10 .:&lt;/a&gt; A text-based &lt;strong&gt;BitTorrent client&lt;/strong&gt; that - combined with &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; - makes a cool lightweight torrent server.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;I can &lt;tt class="docutils literal"&gt;ssh&lt;/tt&gt; into my home server, start a tmux session and create multiple windows, run &lt;strong&gt;rTorrent&lt;/strong&gt; in a window to start seeding a Linux &lt;tt class="docutils literal"&gt;iso&lt;/tt&gt;, detach from session and server, and return later to find everything in place and the &lt;tt class="docutils literal"&gt;iso&lt;/tt&gt; uploading.&lt;/p&gt;
&lt;div class="section" id="install"&gt;
&lt;h3&gt;0. Install&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install rtorrent
$ mkdir -p ~/rtorrent/config.d
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="start-and-config"&gt;
&lt;h3&gt;1. Start and config&lt;/h3&gt;
&lt;p&gt;Create an rTorrent executable startup script &lt;tt class="docutils literal"&gt;~/rtorrent/start&lt;/tt&gt; with the &lt;a class="reference external" href="https://rtorrent-docs.readthedocs.io/en/latest/cookbook.html#the-rtorrent-command-line"&gt;details provided in the rTorrent cookbook.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download and save the &lt;a class="reference external" href="https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template"&gt;default configuration template&lt;/a&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.rtorrentrc&lt;/span&gt;&lt;/tt&gt;. Open the file and comment out (deactivate) the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Distributed_hash_table"&gt;dht&lt;/a&gt; and &lt;strong&gt;watch directory&lt;/strong&gt; settings ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#dht.mode.set = disable&lt;/span&gt;
&lt;span class="c1"&gt;#protocol.pex.set = no&lt;/span&gt;
&lt;span class="c1"&gt;#trackers.use_udp.set = no&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#schedule2 = watch_start, 10, 10, ((load.start, (cat, (cfg.watch), &amp;quot;start/*.torrent&amp;quot;)))&lt;/span&gt;
&lt;span class="c1"&gt;#schedule2 = watch_load, 11, 10, ((load.normal, (cat, (cfg.watch), &amp;quot;load/*.torrent&amp;quot;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember to configure &lt;strong&gt;port forwarding&lt;/strong&gt; on the &lt;a class="reference external" href="http://www.circuidipity.com/20141006.html"&gt;home router firewall&lt;/a&gt;  for ports &lt;tt class="docutils literal"&gt;network.port_range.set&lt;/tt&gt; (default &lt;tt class="docutils literal"&gt;50000&lt;/tt&gt;) and &lt;tt class="docutils literal"&gt;dht.port.set&lt;/tt&gt; (configured below).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="config-fragments"&gt;
&lt;h3&gt;2. Config fragments&lt;/h3&gt;
&lt;p&gt;Customize the config by creating some &lt;a class="reference external" href="https://rtorrent-docs.readthedocs.io/en/latest/use-cases.html#load-drop-in-config-fragments"&gt;drop in config fragments&lt;/a&gt; in &lt;tt class="docutils literal"&gt;~/rtorrent/config.d&lt;/tt&gt;. For my setup I create fragments to establish bandwidth quotas, enable dht and require encrypted traffic, and set a directory that rTorrent watches for new torrent files ...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bandwidth.rc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Global bandwidth .: download_rate = 100 / upload_rate = 20&amp;quot;&lt;/span&gt;
throttle.global_down.max_rate.set_kb &lt;span class="o"&gt;=&lt;/span&gt; 100
throttle.global_up.max_rate.set_kb &lt;span class="o"&gt;=&lt;/span&gt; 20
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;dht.rc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DHT support = auto&amp;quot;&lt;/span&gt;
dht.mode.set &lt;span class="o"&gt;=&lt;/span&gt; auto
dht.port.set &lt;span class="o"&gt;=&lt;/span&gt; 6881
protocol.pex.set &lt;span class="o"&gt;=&lt;/span&gt; yes
trackers.use_udp.set &lt;span class="o"&gt;=&lt;/span&gt; yes
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;encryption.rc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Encryption = required&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;encryption&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require,require_RC4,allow_incoming,try_outgoing
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;watch.rc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Watch directory enabled.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;schedule2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; watch_directory,5,5, &lt;span class="o"&gt;((&lt;/span&gt;load.start, &lt;span class="o"&gt;(&lt;/span&gt;cat, &lt;span class="o"&gt;(&lt;/span&gt;cfg.watch&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;*.torrent&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)))&lt;/span&gt;
&lt;span class="nv"&gt;schedule2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; untied_directory,5,5,stop_untied&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;schedule2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; tied_directory,5,5,start_tied&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="run"&gt;
&lt;h3&gt;3. Run&lt;/h3&gt;
&lt;p&gt;Launch &lt;tt class="docutils literal"&gt;~/rtorrent/start&lt;/tt&gt; and a basic rTorrent setup is now up and running. Check out the &lt;a class="reference external" href="http://getos.org/rtorrent_ref.pdf"&gt;cheatsheet&lt;/a&gt; for navigating around the interface and the &lt;a class="reference external" href="https://rtorrent-docs.readthedocs.io/en/latest/overview.html#"&gt;rTorrent docs&lt;/a&gt; and the torrent client's &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/RTorrent"&gt;entry on the Arch Wiki&lt;/a&gt; for details and ideas for more advanced configs.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="rtorrent"></category><category term="shell"></category><category term="network"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>Network printer + scanner</title><link href="http://www.circuidipity.com/network-printer-scanner.html" rel="alternate"></link><published>2017-05-27T19:10:00-04:00</published><updated>2017-05-27T19:10:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-27:/network-printer-scanner.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #9 .:&lt;/a&gt; Configure a printer + scanner to receive jobs across the local network.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Multi-purpose printer is an &lt;strong&gt;HP Deskjet 2130&lt;/strong&gt; connected to a &lt;strong&gt;home server running Debian&lt;/strong&gt; at IP address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="printer-and-scanner-packages"&gt;
&lt;h3&gt;0. Printer and scanner packages&lt;/h3&gt;
&lt;p&gt;Install a complete set of CUPS (printer …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #9 .:&lt;/a&gt; Configure a printer + scanner to receive jobs across the local network.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Multi-purpose printer is an &lt;strong&gt;HP Deskjet 2130&lt;/strong&gt; connected to a &lt;strong&gt;home server running Debian&lt;/strong&gt; at IP address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="printer-and-scanner-packages"&gt;
&lt;h3&gt;0. Printer and scanner packages&lt;/h3&gt;
&lt;p&gt;Install a complete set of CUPS (printer) and SANE (scanner) packages on the server and grant (example) username &lt;tt class="docutils literal"&gt;foo&lt;/tt&gt; admin privileges ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# apt install task-print-server&lt;/span&gt;
&lt;span class="c1"&gt;# adduser foo lp&lt;/span&gt;
&lt;span class="c1"&gt;# adduser foo lpadmin&lt;/span&gt;
&lt;span class="c1"&gt;# adduser foo scanner&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="device-drivers-and-firmware"&gt;
&lt;h3&gt;1. Device drivers and firmware&lt;/h3&gt;
&lt;p&gt;Attach the printer to server ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsusb
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
Bus &lt;span class="m"&gt;002&lt;/span&gt; Device 004: ID 03f0:e111 Hewlett-Packard
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some printers require additional drivers and firmware from the vendor. Libre software &lt;strong&gt;HPLIP&lt;/strong&gt; adds support for the Deskjet and is packaged for Debian/Ubuntu ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt install hplip printer-driver-hpijs
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: &lt;a class="reference external" href="http://hplipopensource.com/hplip-web/about.html"&gt;HP Linux Imaging and Printing&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="web-admin-remote-access"&gt;
&lt;h3&gt;2. Web admin remote access&lt;/h3&gt;
&lt;p&gt;Primary configuration of CUPS is done in &lt;tt class="docutils literal"&gt;/etc/cups/cupsd.conf&lt;/tt&gt; and a web interface is provided for administration. Modify default settings that permit only localhost access to the admin panel to allow access to all machines on local network &lt;tt class="docutils literal"&gt;192.168.1.*&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Only listen for connections from the local machine.&lt;/span&gt;
&lt;span class="c1"&gt;#Listen localhost:631&lt;/span&gt;
&lt;span class="c1"&gt;# Listen for connections from local and remote machines.&lt;/span&gt;
Port 631

&lt;span class="c1"&gt;# Show shared printers on the local network.&lt;/span&gt;
Browsing On
BrowseLocalProtocols dnssd

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Web interface setting...&lt;/span&gt;
WebInterface Yes

&lt;span class="c1"&gt;# Restrict access to the server...&lt;/span&gt;
&amp;lt;Location /&amp;gt;
Order allow,deny
Allow from 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c1"&gt;# Restrict access to the admin pages...&lt;/span&gt;
&amp;lt;Location /admin&amp;gt;
Order allow,deny
Allow from 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c1"&gt;# Restrict access to configuration files...&lt;/span&gt;
&amp;lt;Location /admin/conf&amp;gt;
AuthType Default
Require user @SYSTEM
Order allow,deny
Allow from 192.168.1.*
&amp;lt;/Location&amp;gt;

&lt;span class="c1"&gt;# Restrict access to log files...&lt;/span&gt;
&amp;lt;Location /admin/log&amp;gt;
AuthType Default
Require user @SYSTEM
Order allow,deny
Allow from 192.168.1.*
&amp;lt;/Location&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart CUPS ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl restart cups.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Server at address &lt;tt class="docutils literal"&gt;192.168.1.88&lt;/tt&gt; has admin functions available via browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://192.168.1.88:631/admin&lt;/span&gt;&lt;/tt&gt; (Firefox warns &lt;em&gt;Your connection is not secure&lt;/em&gt; on first connect; add an exception for the CUPS ssl certificate).&lt;/p&gt;
&lt;img alt="CUPS Admin" class="align-center" src="images/cups-admin.png" style="width: 900px; height: 304px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="add-the-printer"&gt;
&lt;h3&gt;3. Add the printer&lt;/h3&gt;
&lt;p&gt;Select &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Administration-&amp;gt;Printers-&amp;gt;Add&lt;/span&gt; Printer&lt;/tt&gt; and login with the username assigned previously to the &lt;tt class="docutils literal"&gt;lpadmin&lt;/tt&gt; group.&lt;/p&gt;
&lt;img alt="CUPS local printer" class="align-center" src="images/cups-local-printer.png" style="width: 900px; height: 540px;" /&gt;
&lt;img alt="CUPS add printer" class="align-center" src="images/cups-add-printer.png" style="width: 900px; height: 450px;" /&gt;
&lt;img alt="CUPS printer model" class="align-center" src="images/cups-printer-model.png" style="width: 900px; height: 600px;" /&gt;
&lt;img alt="CUPS printer" class="align-center" src="images/cups-printer.png" style="width: 900px; height: 500px;" /&gt;
&lt;p&gt;Test the configuration by selecting &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Maintenance-&amp;gt;Print&lt;/span&gt; Test Page&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Printer settings are saved to &lt;tt class="docutils literal"&gt;/etc/cups/printers.conf&lt;/tt&gt;. On the command line, check printer status with &lt;tt class="docutils literal"&gt;lpstat&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lpstat -t
scheduler is running
no system default destination
device &lt;span class="k"&gt;for&lt;/span&gt; HP_DeskJet_2130_series: hp:/usb/DeskJet_2130_series?serial&lt;span class="o"&gt;=&lt;/span&gt;CN674...
HP_DeskJet_2130_series accepting requests since Sat &lt;span class="m"&gt;27&lt;/span&gt; May &lt;span class="m"&gt;2017&lt;/span&gt; 11:16:37 AM EDT
printer HP_DeskJet_2130_series is idle.  enabled since Sat &lt;span class="m"&gt;27&lt;/span&gt; May &lt;span class="m"&gt;2017&lt;/span&gt; 11:16:37 AM EDT
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="access-printer-from-a-linux-client"&gt;
&lt;h3&gt;4. Access printer from a Linux client&lt;/h3&gt;
&lt;p&gt;Client machines can dispense with running a local CUPS server and its helper tools. To connect directly with the network printer, download ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# apt install cups-client&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;tt class="docutils literal"&gt;client.conf&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir ~/.cups
$ touch ~/.cups/client.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and add the address of the server hosting the scanner to the file ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ServerName 192.168.1.88
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Alternative:&lt;/strong&gt; If the Linux client machine regularly connects to printers on different networks it might prove convenient to download a more complete suite of CUPS packages - &lt;tt class="docutils literal"&gt;apt install cups&lt;/tt&gt; - and add the network printer via the web interface address &lt;tt class="docutils literal"&gt;localhost:631&lt;/tt&gt; or via the native printer config utility included with some desktop environments.&lt;/p&gt;
&lt;p&gt;Link: &lt;a class="reference external" href="https://wiki.debian.org/PrintQueuesCUPS#Printing_Without_a_Local_CUPS_Server"&gt;Printing Without a Local CUPS Server&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="add-the-scanner"&gt;
&lt;h3&gt;5. Add the scanner&lt;/h3&gt;
&lt;p&gt;Detect attached device on the server using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sane-find-scanner&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;scanimage&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sane-find-scanner
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
found USB scanner &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0x03f0 &lt;span class="o"&gt;[&lt;/span&gt;HP&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="nv"&gt;product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0xe111 &lt;span class="o"&gt;[&lt;/span&gt;DeskJet &lt;span class="m"&gt;2130&lt;/span&gt; series&lt;span class="o"&gt;])&lt;/span&gt; at libusb:002:004
$ scanimage -L
device &lt;span class="sb"&gt;`&lt;/span&gt;hpaio:/usb/DeskJet_2130_series?serial&lt;span class="o"&gt;=&lt;/span&gt;CN674...&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; is a Hewlett-Packard DeskJet_2130_series all-in-one
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run a test ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scanimage &amp;gt; test.ppm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and retrieve the (grayscale) image from the server and verify the scanner is working on the local server connection (before enabling remote access to client machines).&lt;/p&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/sane.d/saned.conf&lt;/tt&gt; to share the scanner over the local network ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## Access list&lt;/span&gt;
192.168.1.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setup SANE in &lt;strong&gt;systemd&lt;/strong&gt; and check status ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl enable saned.socket&lt;/span&gt;
&lt;span class="c1"&gt;# systemctl start saned.socket&lt;/span&gt;
$ systemctl status saned.socket
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="access-scanner-from-a-linux-client"&gt;
&lt;h3&gt;6. Access scanner from a Linux client&lt;/h3&gt;
&lt;p&gt;Install scanner tools on the client machine ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# apt install sane-utils&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/sane.d/net.conf&lt;/tt&gt; to point the client towards the address of the server hosting the scanner ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;connect_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 60
192.168.1.88
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify the remote scanner is visible to the client ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scanimage -L
device &lt;span class="sb"&gt;`&lt;/span&gt;net:192.168.1.88:hpaio:/usb/DeskJet_2130_series?serial&lt;span class="o"&gt;=&lt;/span&gt;CN674...&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; is a Hewlett-Packard DeskJet_2130_series all-in-one
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the client fails to find the remote scanner, reboot the server and try again.&lt;/p&gt;
&lt;p&gt;Run a test ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scanimage &amp;gt; test2.ppm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a simple, graphical scanner program give &lt;strong&gt;simple-scan&lt;/strong&gt; a try.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="printer"></category><category term="scanner"></category><category term="network"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>Automatic backups over the LAN</title><link href="http://www.circuidipity.com/backup-over-lan.html" rel="alternate"></link><published>2017-05-19T10:50:00-04:00</published><updated>2017-05-19T10:50:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-19:/backup-over-lan.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #4 .:&lt;/a&gt; Make incremental and automatic backups of a home folder to a local server using &lt;strong&gt;SSH + rsync + cron&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;raised-from-the-dead netbook&lt;/a&gt; on the home network. &lt;strong&gt;Client&lt;/strong&gt; desktop is configured to perform a daily sync of its &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to server.&lt;/p&gt;
&lt;div class="section" id="server-and-client-ssh-keys"&gt;
&lt;h3&gt;0. Server and Client …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #4 .:&lt;/a&gt; Make incremental and automatic backups of a home folder to a local server using &lt;strong&gt;SSH + rsync + cron&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;raised-from-the-dead netbook&lt;/a&gt; on the home network. &lt;strong&gt;Client&lt;/strong&gt; desktop is configured to perform a daily sync of its &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to server.&lt;/p&gt;
&lt;div class="section" id="server-and-client-ssh-keys"&gt;
&lt;h3&gt;0. Server and Client: SSH keys&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;Create cryptographic keys and disable password logins&lt;/a&gt; to make traffic between server and client more secure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="server-backup-directory"&gt;
&lt;h3&gt;1. Server: backup directory&lt;/h3&gt;
&lt;p&gt;Create a directory to store the backup ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p /path/to/backup
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="client-hosts-alias"&gt;
&lt;h3&gt;2. Client: hosts alias&lt;/h3&gt;
&lt;p&gt;Set the IP address and hostname of server in &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;. Sample entry ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;192.168.1.88    netbook.lan
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="client-sync"&gt;
&lt;h3&gt;3. Client: sync&lt;/h3&gt;
&lt;p&gt;Test synching &lt;tt class="docutils literal"&gt;$HOME/&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;netbook.lan:/path/to/backup/&lt;/span&gt;&lt;/tt&gt; with the &lt;tt class="docutils literal"&gt;rsync &lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; option. Example ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync --dry-run --archive --delete --verbose &lt;span class="nv"&gt;$HOME&lt;/span&gt;/ netbook.lan:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything checks out OK drop &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; and re-run the command to make a proper backup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-script"&gt;
&lt;h3&gt;4. Client: script&lt;/h3&gt;
&lt;p&gt;Start piling on the options to rsync and the command quickly becomes awkward and easy to get wrong. Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt; is useful but can generate unpleasant surprises. A few things I &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--exclude&lt;/span&gt;&lt;/tt&gt; from a &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; sync are &lt;tt class="docutils literal"&gt;[Cc]ache&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;[Tt]rash&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;[Tt]humbnails&lt;/tt&gt;, and pay attention to the trailing forward-slash &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; on directories.&lt;/p&gt;
&lt;p&gt;I create a shell script &lt;tt class="docutils literal"&gt;teleportHome.sh&lt;/tt&gt; that makes use of the &lt;tt class="docutils literal"&gt;keychain&lt;/tt&gt; utility to &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;manage SSH keys for password-less logins to servers&lt;/a&gt; and place in &lt;tt class="docutils literal"&gt;$HOME/bin&lt;/tt&gt;. Sample ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;SYNC_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--archive --verbose --delete&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;EXCLUDE_OPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--exclude=*[Cc]ache*/ --exclude=*[Tt]rash*/ --exclude=local/ \&lt;/span&gt;
&lt;span class="s2"&gt;--exclude=*[Tt]humbnail*/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DESTINATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;netbook.lan:/path/to/backup/&amp;quot;&lt;/span&gt;

. &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/.keychain/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-sh
rsync &lt;span class="nv"&gt;$SYNC_OPT&lt;/span&gt; &lt;span class="nv"&gt;$EXCLUDE_OPT&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/ &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DESTINATION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/teleportHome.sh"&gt;teleportHome.sh&lt;/a&gt; - A more complete script that verifies that DESTINATION exists; adds option to include (and exclude) items from a config file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="client-automate"&gt;
&lt;h3&gt;5. Client: automate&lt;/h3&gt;
&lt;p&gt;Automate the backups by running &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; and creating a &lt;strong&gt;cron job&lt;/strong&gt;. Sample entry runs the backup script daily at 02:30 ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# m h  dom mon dow   command&lt;/span&gt;
&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; * * * . /home/USERNAME/.keychain/&lt;span class="k"&gt;$(&lt;/span&gt;/bin/hostname&lt;span class="k"&gt;)&lt;/span&gt;-sh&lt;span class="p"&gt;;&lt;/span&gt; /home/USERNAME/bin/teleportHome.sh netbook.lan:/path/to/backup/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="network"></category><category term="ssh"></category><category term="crypto"></category><category term="linux"></category></entry><entry><title>LVM and encrypted Logical Volumes</title><link href="http://www.circuidipity.com/lvm-crypt-lv.html" rel="alternate"></link><published>2017-05-13T16:43:00-04:00</published><updated>2017-05-13T16:43:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-13:/lvm-crypt-lv.html</id><summary type="html">&lt;p&gt;I have been playing with the &lt;strong&gt;Logical Volume Manager&lt;/strong&gt; (LVM) on my recent Debian installs. Instead of creating a traditional partition layout on a hard drive, LVM adds a layer of abstraction over physical storage that allows the creation of &amp;quot;virtual&amp;quot; partitions.&lt;/p&gt;
&lt;p&gt;For my &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;netbook home server setup&lt;/a&gt; I used …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been playing with the &lt;strong&gt;Logical Volume Manager&lt;/strong&gt; (LVM) on my recent Debian installs. Instead of creating a traditional partition layout on a hard drive, LVM adds a layer of abstraction over physical storage that allows the creation of &amp;quot;virtual&amp;quot; partitions.&lt;/p&gt;
&lt;p&gt;For my &lt;a class="reference external" href="http://www.circuidipity.com/laptop-home-server.html"&gt;netbook home server setup&lt;/a&gt; I used the Debian installer's manual partitioning tools to assign a partition to LVM, create a &lt;strong&gt;Volume Group&lt;/strong&gt; (VG) and &lt;strong&gt;Logical Volumes&lt;/strong&gt; (LVs), with plenty of storage space to spare. &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; After a successful first boot I configure an encrypted container for data storage that is manually mounted by a non-root user. I don't want an unattended server halting in the boot process waiting for a passphrase or any necessary boot mountpoints to reside on an encrypted partition.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Scan my netbook for devices visible to LVM ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvmdiskscan&lt;/span&gt;
/dev/vg/root              &lt;span class="o"&gt;[&lt;/span&gt;      14.90 GiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/sda1                 &lt;span class="o"&gt;[&lt;/span&gt;     487.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/vg/swap              &lt;span class="o"&gt;[&lt;/span&gt;     952.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
/dev/sda2                 &lt;span class="o"&gt;[&lt;/span&gt;     465.28 GiB&lt;span class="o"&gt;]&lt;/span&gt; LVM physical volume
/dev/mapper/vg-swap_crypt &lt;span class="o"&gt;[&lt;/span&gt;     952.00 MiB&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="m"&gt;3&lt;/span&gt; disks
&lt;span class="m"&gt;1&lt;/span&gt; partition
&lt;span class="m"&gt;0&lt;/span&gt; LVM physical volume whole disks
&lt;span class="m"&gt;1&lt;/span&gt; LVM physical volume
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check for free space in the volume group ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgdisplay&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
Free  PE / Size       &lt;span class="m"&gt;115060&lt;/span&gt; / 449.45 GiB
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="create"&gt;
&lt;h3&gt;0. Create&lt;/h3&gt;
&lt;p&gt;I create a 400GB &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; logical volume in the volume group ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvcreate --size 400G vg --name data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Information about the LVs can be displayed with the &lt;tt class="docutils literal"&gt;lvdisplay&lt;/tt&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="encrypt"&gt;
&lt;h3&gt;1. Encrypt&lt;/h3&gt;
&lt;p&gt;Configure LUKS encryption on the newly-created LV ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup luksFormat /dev/vg/data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open LV &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;vg-data_crypt&lt;/span&gt;&lt;/tt&gt;, format with a filesystem, and mount ... &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup open /dev/vg/data vg-data_crypt&lt;/span&gt;
&lt;span class="c1"&gt;# mkfs.ext4 -m 1 /dev/mapper/vg-data_crypt&lt;/span&gt;
&lt;span class="c1"&gt;# mount /dev/mapper/vg-data_crypt /mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When finished, unmount the filesystem and close the encrypted LV ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# umount /mnt&lt;/span&gt;
&lt;span class="c1"&gt;# cryptsetup close /dev/mapper/vg-data_crypt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mountpoint"&gt;
&lt;h3&gt;2. Mountpoint&lt;/h3&gt;
&lt;p&gt;I create a dedicated mountpoint for the LV in &lt;tt class="docutils literal"&gt;/media&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# mkdir /media/crypt_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/fstab&lt;/tt&gt; and allow mounting by a non-root user ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/mapper/vg-data_crypt /media/crypt_data        ext4    relatime,noauto,user       &lt;span class="m"&gt;0&lt;/span&gt;       0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the LV and mount ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cryptsetup open /dev/vg/data vg-data_crypt&lt;/span&gt;
$ mount /media/crypt_data
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;For setting up LVM from the beginning and learning about its tools the LVM entries on &lt;a class="reference external" href="https://wiki.debian.org/LVM"&gt;wiki.debian.org&lt;/a&gt; and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/LVM"&gt;wiki.archlinux.org&lt;/a&gt; are very helpful!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Reserved blocks can be used by privileged system processes to write to disk - useful if a full filesystem blocks users from writing - and reduce disk fragmentation. On large non-root partitions extra space can be gained by reducing the default 5% reserve to 1% with option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-m&lt;/span&gt; &amp;lt;percent&amp;gt;&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="lvm"></category><category term="crypto"></category><category term="linux"></category></entry><entry><title>Automatic security updates on Debian</title><link href="http://www.circuidipity.com/unattended-upgrades.html" rel="alternate"></link><published>2017-05-07T10:56:00-04:00</published><updated>2017-05-07T10:56:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-05-07:/unattended-upgrades.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #2 .:&lt;/a&gt; Fetch the latest fixes, install, and reboot (if necessary). Hands-free!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install unattended-upgrades apt-listchanges
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration file for the unattended-upgrades package is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/apt.conf.d/50unattended-upgrades&lt;/span&gt;&lt;/tt&gt;. This section controls which packages are upgraded and security updates are uncommented and enabled by …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/home-server.html"&gt;PROJECT: Home Server #2 .:&lt;/a&gt; Fetch the latest fixes, install, and reboot (if necessary). Hands-free!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;Install ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install unattended-upgrades apt-listchanges
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration file for the unattended-upgrades package is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/apt/apt.conf.d/50unattended-upgrades&lt;/span&gt;&lt;/tt&gt;. This section controls which packages are upgraded and security updates are uncommented and enabled by default ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Origins-Pattern &lt;span class="o"&gt;{&lt;/span&gt;
    //
    &lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;origin=Debian,codename=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;distro_codename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,label=Debian-Security&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uncomment the following line to have mail sent to root when Debian auto-installs packages ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Mail &lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm a working mail setup is in place. A package that provides &lt;tt class="docutils literal"&gt;mailx&lt;/tt&gt; must be installed ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dpkg -l &lt;span class="p"&gt;|&lt;/span&gt; grep mailx
ii  bsd-mailx                     8.1.2-0.20141216cvs-2      i386         simple mail user agent
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On a laptop consider enabling the &lt;tt class="docutils literal"&gt;MinimalSteps&lt;/tt&gt; option. This allows an upgrade to be interrupted upon shutdown (with a slight delay) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::MinimalSteps &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some security updates can require the system to be rebooted. On a server I enable automatic reboot and set the reboot to occur at a specified time (instead of immediately) ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Unattended-Upgrade::Automatic-Reboot &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Unattended-Upgrade::Automatic-Reboot-Time &lt;span class="s2"&gt;&amp;quot;04:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Activate unattended-upgrades by creating &lt;tt class="docutils literal"&gt;/etc/apt/apt.conf.d/02periodic&lt;/tt&gt;. Sample file ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;// Control parameters &lt;span class="k"&gt;for&lt;/span&gt; cron &lt;span class="nb"&gt;jobs&lt;/span&gt; by /etc/cron.daily/apt //

// Enable the update/upgrade script &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::Enable &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Do &lt;span class="s2"&gt;&amp;quot;apt-get update&amp;quot;&lt;/span&gt; automatically every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::Update-Package-Lists &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Run the &lt;span class="s2"&gt;&amp;quot;unattended-upgrade&amp;quot;&lt;/span&gt; security upgrade script every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disabled&lt;span class="o"&gt;)&lt;/span&gt;
// Requires the package &lt;span class="s2"&gt;&amp;quot;unattended-upgrades&amp;quot;&lt;/span&gt; and will write a log in /var/log/unattended-upgrades
APT::Periodic::Unattended-Upgrade &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Do &lt;span class="s2"&gt;&amp;quot;apt-get autoclean&amp;quot;&lt;/span&gt; every n-days &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;disable&lt;span class="o"&gt;)&lt;/span&gt;
APT::Periodic::AutocleanInterval &lt;span class="s2"&gt;&amp;quot;14&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// Send report mail to root ...
//  0:  no report             &lt;span class="o"&gt;(&lt;/span&gt;or null string&lt;span class="o"&gt;)&lt;/span&gt;
//  1:  progress report       &lt;span class="o"&gt;(&lt;/span&gt;actually any string&lt;span class="o"&gt;)&lt;/span&gt;
//  2:  + &lt;span class="nb"&gt;command&lt;/span&gt; outputs     &lt;span class="o"&gt;(&lt;/span&gt;remove -qq, remove 2&amp;gt;/dev/null, add -d&lt;span class="o"&gt;)&lt;/span&gt;
//  3:  + trace on
APT::Periodic::Verbose &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Confirm notifications will be sent to root ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/apt/listchanges.conf
&lt;span class="o"&gt;[&lt;/span&gt;apt&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;frontend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pager
&lt;span class="nv"&gt;email_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;confirm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="nv"&gt;save_seen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/apt/listchanges.db
&lt;span class="nv"&gt;which&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;news
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upgrade information is also logged within the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/var/log/unattended-upgrades&lt;/span&gt;&lt;/tt&gt; directory.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</content><category term="debian"></category><category term="linux"></category></entry><entry><title>MITx Week 7: Plotting and Final Thoughts</title><link href="http://www.circuidipity.com/mitx-6001x-w7.html" rel="alternate"></link><published>2017-03-19T19:10:00-04:00</published><updated>2017-03-19T19:10:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2017-03-19:/mitx-6001x-w7.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; Last week of the course! An introduction to plotting graphs in Python. I have experimented a bit &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndStep.py"&gt;writing a script&lt;/a&gt; that collects dates (x_axis) and pedometer measurements (y_axis) from my personal logfile and generates a graph.&lt;/p&gt;
&lt;p&gt;So concludes &lt;strong&gt;MITx 6.00.1x&lt;/strong&gt;. It proved to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/mitx-6001x.html"&gt;MITx and the Python DUDE .:&lt;/a&gt; Last week of the course! An introduction to plotting graphs in Python. I have experimented a bit &lt;a class="reference external" href="https://github.com/vonbrownie/homebin/blob/master/dateAndStep.py"&gt;writing a script&lt;/a&gt; that collects dates (x_axis) and pedometer measurements (y_axis) from my personal logfile and generates a graph.&lt;/p&gt;
&lt;p&gt;So concludes &lt;strong&gt;MITx 6.00.1x&lt;/strong&gt;. It proved to be a well-designed course and true to its synopsis of being a &lt;strong&gt;computer science course&lt;/strong&gt; that teaches some fundamental concepts, &lt;strong&gt;not&lt;/strong&gt; a programming course per se. Taken in that spirit (and plan on spending more than the proposed 15 hours a week) its a very worthwhile endeavour. Personally I want to learn more about Python itself and scratch some of my own itches.&lt;/p&gt;
&lt;p&gt;Onward!&lt;/p&gt;
</content><category term="python"></category><category term="programming"></category><category term="mooc"></category></entry></feed>