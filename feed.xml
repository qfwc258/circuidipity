<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feed.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2015-02-25T19:47:00-05:00</updated><entry><title>Ubuntu Keyboard Shortcuts</title><link href="http://www.circuidipity.com/ubuntu-keyboard-shortcuts.html" rel="alternate"></link><updated>2015-02-25T19:47:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-25:ubuntu-keyboard-shortcuts.html</id><summary type="html">&lt;img alt="Ubuntu" class="align-right" src="images/logo-ubuntu_cof-white_orange-hex-2.png" style="width: 214px; height: 214px;" /&gt;
&lt;p&gt;I am exploring &lt;strong&gt;keyboard shortcuts&lt;/strong&gt; to improve workflow efficiency and happy to discover that Ubuntu's &lt;strong&gt;Unity&lt;/strong&gt; desktop is configured very keyboard-friendly by default. Below are the Ubuntu/application key combos that I find most useful...&lt;/p&gt;
&lt;div class="section" id="launcher"&gt;
&lt;h2&gt;Launcher&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Super&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open Dash&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;Super(Hold)&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;display shortcuts&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between Launcher applications&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-(1-9)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;run application (1-9) on Launcher&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F2&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;run command&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="switching"&gt;
&lt;h2&gt;Switching&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between running apps&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Alt-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch between running apps from all workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-S&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show and select workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Alt-(Left,Right,Up,Down)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;navigate between workspaces&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="windows"&gt;
&lt;h2&gt;Windows&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Super-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show windows in current workspace&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Super-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;show windows in all workspaces&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-Up&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;maximize window&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-Down&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;minimize window&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-Space&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open window menu&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F4&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close window&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="applications"&gt;
&lt;h2&gt;Applications&lt;/h2&gt;
&lt;div class="section" id="firefox"&gt;
&lt;h3&gt;Firefox&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-T&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open new tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-Tab&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch tab backwards&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-L&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;enter new address/search&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;F5&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;reload page&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-terminal"&gt;
&lt;h3&gt;Gnome Terminal&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-T&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;open new tab&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-(1-9)&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;switch to tab {1-9}&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;close tab&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class="section" id="bash"&gt;
&lt;h4&gt;Bash&lt;/h4&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-A&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move to the start of the line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-E&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move to the end of the line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-B&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move back one word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-F&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;move forward one word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-W&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;erase a word&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-U&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;erase a line&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-L&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;clear screen&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-R&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;reverse incremental search of history&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="tmux"&gt;
&lt;h4&gt;Tmux&lt;/h4&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux cheatsheet&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-screenshot"&gt;
&lt;h3&gt;Gnome Screenshot&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;PrtScr&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;screenshot&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Alt-PrtScr&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;window screenshot&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Shift-PrtScr&lt;/span&gt;&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;selected area screenshot&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="custom"&gt;
&lt;h2&gt;Custom&lt;/h2&gt;
&lt;div class="section" id="move-windows-between-displays"&gt;
&lt;h3&gt;Move windows between displays&lt;/h3&gt;
&lt;p&gt;At home I connect my &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Ubuntubook&lt;/a&gt; to an external 24&amp;quot; display to form a combined desktop across the 2 devices. I use &lt;strong&gt;Compiz&lt;/strong&gt; to create a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Control-Super-W&lt;/span&gt;&lt;/tt&gt; key combo to move windows back and forth between displays:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo compizconfig-settings-manager compiz-plugins-extra
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the Dash and run &lt;tt class="docutils literal"&gt;compiz settings manager&lt;/tt&gt;. Enable and select the &lt;tt class="docutils literal"&gt;Window Management &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Put&lt;/tt&gt; plugin and configure a key shortcut for &lt;tt class="docutils literal"&gt;Put to Next Output&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="Compiz Put Plugin" class="align-center" src="images/compiz_put.png" style="width: 899px; height: 565px;" /&gt;
&lt;img alt="Compiz Put to Next Output" class="align-center" src="images/compiz_put_next.png" style="width: 899px; height: 565px;" /&gt;
&lt;p&gt;Built-in screen &lt;tt class="docutils literal"&gt;(1366x768)&lt;/tt&gt; and external display &lt;tt class="docutils literal"&gt;(1920x1080)&lt;/tt&gt; form a combined desktop of different resolutions. Select &lt;tt class="docutils literal"&gt;Put &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Misc. Options &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Activate &amp;quot;Avoid Offscreen&amp;quot;&lt;/tt&gt; to ensure maximized windows are properly resized when moved between displays.&lt;/p&gt;
&lt;p&gt;Logout and back in to activate modifications.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://askubuntu.com/questions/141752/keyboard-shortcut-to-move-windows-between-monitors"&gt;Move windows between monitors&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chromebook-keyboard-shortcuts"&gt;
&lt;h3&gt;Chromebook keyboard shortcuts&lt;/h3&gt;
&lt;p&gt;Top row on my Ubuntubook keyboard has a series of shortcut icons (brightness, volume, etc.) that identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the &lt;tt class="docutils literal"&gt;Search&lt;/tt&gt; key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Enable these keyboard shortcuts in Ubuntu by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbindkeys&lt;/tt&gt; - associate keys to shell commands&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xbacklight&lt;/tt&gt; - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pulseaudio-utils&lt;/span&gt;&lt;/tt&gt; - manage sound with pactl&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;xvkbd&lt;/tt&gt; - send characters to another client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xbindkeys xbacklight pulseaudio-utils xvkbd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Chromebook to (L)ubuntubook&lt;/a&gt; for a sample configuration.&lt;/p&gt;
&lt;p&gt;Next thing is to start working on my touch-typing!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Tiny Tiny RSS</title><link href="http://www.circuidipity.com/ttrss.html" rel="alternate"></link><updated>2015-02-11T18:40:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-11:ttrss.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #7 &amp;gt;&amp;gt;&lt;/a&gt; Install and self-host the &lt;strong&gt;Tiny Tiny RSS&lt;/strong&gt; news reader and aggregator and access news feeds over the web from anywhere.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="web-server-and-database"&gt;
&lt;h2&gt;0. Web server and database&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tt-rss.org/redmine/projects/tt-rss/wiki"&gt;Tiny Tiny RSS&lt;/a&gt; is a PHP application that require a proxy web server and a database back-end to store content. See &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;PHP + Nginx + PostgreSQL&lt;/a&gt; for necessary prerequites to host TTRSS. &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="database"&gt;
&lt;h2&gt;1. Database&lt;/h2&gt;
&lt;p&gt;Create a new PostgreSQL database to hold the content of RSS feeds. Launch the interactive console front-end &lt;tt class="docutils literal"&gt;psql&lt;/tt&gt; and create a new user &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;www-data&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[2]&lt;/a&gt; and database &lt;tt class="docutils literal"&gt;ttrss&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -u postgres psql
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# CREATE USER &amp;quot;www-data&amp;quot; WITH PASSWORD &amp;#39;newpasswd&amp;#39;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# CREATE DATABASE ttrss WITH OWNER &amp;quot;www-data&amp;quot;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# GRANT ALL PRIVILEGES ON DATABASE ttrss to &amp;quot;www-data&amp;quot;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# \quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="peer-authentication"&gt;
&lt;h3&gt;1.1 Peer authentication&lt;/h3&gt;
&lt;p&gt;Later when running the TTRSS &lt;tt class="docutils literal"&gt;update.php&lt;/tt&gt; script you may run into &lt;tt class="docutils literal"&gt;Peer authentication failed for user&lt;/tt&gt; errors. Fix this issue by editing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/postgresql/9.*/main/pg_hba.conf&lt;/span&gt;&lt;/tt&gt; and change &lt;tt class="docutils literal"&gt;peer&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# &amp;quot;local&amp;quot; is for Unix domain socket connections only&lt;/span&gt;
&lt;span class="nb"&gt;local   &lt;/span&gt;all             all                                     peer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... to &lt;tt class="docutils literal"&gt;trust&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;local   &lt;/span&gt;all             all                                     trust
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and reload the database server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service postgresql reload
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://askubuntu.com/questions/274441/pg-connect-unable-to-connect-to-postgresql-server"&gt;Unable to connect to postgresql server&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ttrss"&gt;
&lt;h2&gt;2. TTRSS&lt;/h2&gt;
&lt;p&gt;Download the latest &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Tiny-Tiny-RSS-X.X.X.tar.gz&lt;/span&gt;&lt;/tt&gt; from &lt;a class="reference external" href="https://github.com/gothfox/Tiny-Tiny-RSS/releases"&gt;Releases&lt;/a&gt;, unpack, and change permissions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tar xvzf Tiny-Tiny-RSS-X.X.X.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;mv Tiny-Tiny-RSS-X.X.X ttrss
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ttrss
&lt;span class="nv"&gt;$ &lt;/span&gt;chmod -R 777 cache/images/ cache/js/ cache/export/ cache/upload/ feed-icons/ lock/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx"&gt;
&lt;h2&gt;3. Nginx&lt;/h2&gt;
&lt;p&gt;Move the &lt;tt class="docutils literal"&gt;ttrss&lt;/tt&gt; directory into Nginx's &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;document root&lt;/a&gt; directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mv ../ttrss /usr/share/nginx/www/
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chown -R www-data.www-data /usr/share/nginx/www/ttrss
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;server block&lt;/a&gt; (virtual host) for TTRSS. Sample &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-available/ttrss&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[3]&lt;/a&gt; configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
    listen  80; &lt;span class="c"&gt;## listen for ipv4; this line is default and implied&lt;/span&gt;

    root /usr/share/nginx/www/ttrss;
    index index.html index.htm index.php;

    access_log /var/log/nginx/ttrss_access.log;
    error_log /var/log/nginx/ttrss_error.log info;

    server_name localhost;

    location / &lt;span class="o"&gt;{&lt;/span&gt;
        index           index.php;
    &lt;span class="o"&gt;}&lt;/span&gt;

    location ~ &lt;span class="se"&gt;\.&lt;/span&gt;php&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
        try_files &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 404; &lt;span class="c"&gt;#Prevents autofixing of path which could be used for exploit&lt;/span&gt;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save changes and enable the new block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/nginx/sites-enabled
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ln -s /etc/nginx/sites-available/ttrss
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service nginx restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configure"&gt;
&lt;h2&gt;4. Configure&lt;/h2&gt;
&lt;p&gt;Navigate to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://your.server.ip.address&lt;/span&gt;&lt;/tt&gt; and configure TTRSS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Database &lt;span class="nb"&gt;type&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;select &lt;/span&gt;PostgreSQL&lt;span class="o"&gt;]&lt;/span&gt;
Username: www-data
Password: &lt;span class="o"&gt;[&lt;/span&gt;database password created earlier&lt;span class="o"&gt;]&lt;/span&gt;
Database Name: ttrss
Hostname: &lt;span class="o"&gt;[&lt;/span&gt;leave blank&lt;span class="o"&gt;]&lt;/span&gt;
Port: 5432
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Press &lt;tt class="docutils literal"&gt;Test configuration&lt;/tt&gt; button, then &lt;tt class="docutils literal"&gt;Initialize database&lt;/tt&gt;, and finally &lt;tt class="docutils literal"&gt;Save configuration&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Navigate back to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://YOUR.SERVER.IP.ADDRESS&lt;/span&gt;&lt;/tt&gt; and login &lt;tt class="docutils literal"&gt;Username: &amp;quot;admin&amp;quot; Password: &amp;quot;password&amp;quot;&lt;/tt&gt;. In the top-right go to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Actions-&amp;gt;Preferences&lt;/span&gt;&lt;/tt&gt; to make further changes to the default settings. Create a new user account for RSS reading (vs logging in all the time as &lt;tt class="docutils literal"&gt;admin&lt;/tt&gt;) and change the &lt;tt class="docutils literal"&gt;admin&lt;/tt&gt; password.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="updates"&gt;
&lt;h2&gt;5. Updates&lt;/h2&gt;
&lt;p&gt;Configure TTRSS to periodically update the RSS feeds with new content. First, test the included &lt;tt class="docutils literal"&gt;update.php&lt;/tt&gt; script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/usr/bin/php /usr/share/nginx/www/ttrss/update.php --feeds --quiet
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the script returns no errors use &lt;tt class="docutils literal"&gt;cron&lt;/tt&gt; to run the script periodically. Add a new job to &lt;tt class="docutils literal"&gt;crontab&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;crontab -e
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample TTRSS job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;*/30 * * * * /usr/bin/php /usr/share/nginx/www/ttrss/update.php --feeds --quiet
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;6. Helpful resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-ttrss-with-nginx-for-debian-7-on-a-vps"&gt;How to install TTRSS with Nginx for Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://davidbeath.com/posts/installing-tiny-tiny-rss-from-scratch.html"&gt;Installing TTRSS from scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;PHP + Nginx + PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy reading (and hacking)!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Alternative host setups can replace &lt;tt class="docutils literal"&gt;nginx&lt;/tt&gt; web server with &lt;tt class="docutils literal"&gt;apache&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;postgresql&lt;/tt&gt; database with &lt;tt class="docutils literal"&gt;mysql&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;sqlite&lt;/tt&gt;. However the TTRSS community recommends the above combination as the optimal setup for lightweight servers like the Raspberry Pi.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;PostgreSQL maintains its own users and passwords, which are separate from the Linux user accounts. It is not required that your PostgreSQL usernames match the Linux usernames. See &lt;a class="reference external" href="http://www.linuxtopia.org/online_books/database_guides/Practical_PostgreSQL_database/c15679_002.htm"&gt;Practical PostgreSQL     database&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Make TTRSS hosted on a home server accessible from the outside over the web by configuring a &lt;strong&gt;dynamic DNS&lt;/strong&gt; service (I like &lt;a class="reference external" href="http://www.duckdns.org/"&gt;duckdns.org&lt;/a&gt;). Example: Create a &lt;tt class="docutils literal"&gt;myhomepi&lt;/tt&gt; domain on the DDNS service and modify &lt;tt class="docutils literal"&gt;server_name localhost;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;server_name myhomepi.duckdns.org;&lt;/tt&gt;. See &lt;a class="reference external" href="http://www.circuidipity.com/ddns-openwrt.html"&gt;DDNS and OpenWrt&lt;/a&gt; for details.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="web"></category><category term="linux"></category></entry><entry><title>PHP + Nginx + PostgreSQL</title><link href="http://www.circuidipity.com/php-nginx-postgresql.html" rel="alternate"></link><updated>2015-02-11T17:00:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-09:php-nginx-postgresql.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #6 &amp;gt;&amp;gt;&lt;/a&gt; As a requirement to host web applications like &lt;a class="reference external" href="http://www.circuidipity.com/ttrss.html"&gt;Tiny Tiny RSS&lt;/a&gt; on my Raspberry Pi I install &lt;strong&gt;PHP&lt;/strong&gt;, the lightweight web server &lt;strong&gt;Nginx&lt;/strong&gt;, and the &lt;strong&gt;PostgreSQL&lt;/strong&gt; database.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="php"&gt;
&lt;h2&gt;0. PHP&lt;/h2&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install php5 php5-fpm php-apc php5-curl php5-cli php5-pgsql php5-gd php5-mcrypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To improve security edit &lt;tt class="docutils literal"&gt;/etc/php5/fpm/php.ini&lt;/tt&gt; and change &lt;strong&gt;pathinfo&lt;/strong&gt; to &lt;tt class="docutils literal"&gt;0&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cgi.fix_pathinfo&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart PHP:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service php5-fpm restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx"&gt;
&lt;h2&gt;1. Nginx&lt;/h2&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install nginx
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service nginx start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that the web server is running, open a browser and navigate to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://your.raspberry.ip.address&lt;/span&gt;&lt;/tt&gt;. If you see &lt;tt class="docutils literal"&gt;Welcome to nginx!&lt;/tt&gt; the server is installed correctly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="host-multiple-domains"&gt;
&lt;h2&gt;2. Host multiple domains&lt;/h2&gt;
&lt;p&gt;Nginx is capable of serving up multiple web domains or &lt;strong&gt;server blocks&lt;/strong&gt; (virtual hosts) from the same server:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;block content is placed in subfolders located in &lt;tt class="docutils literal"&gt;/usr/share/nginx/www&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;configuration in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-available&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;a server block is made active by setting a symbolic link in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-enabled&lt;/span&gt;&lt;/tt&gt; to its config file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When combined with a &lt;a class="reference external" href="http://www.circuidipity.com/ddns-openwrt.html"&gt;free DDNS service&lt;/a&gt; (I like &lt;a class="reference external" href="http://duckdns.org/"&gt;duckdns.org&lt;/a&gt;) multiple custom domains can be hosted on a home server.&lt;/p&gt;
&lt;p&gt;Steps to create a sample &lt;tt class="docutils literal"&gt;myHomePi&lt;/tt&gt; server block to host &lt;tt class="docutils literal"&gt;www.myhomepi.com&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="section" id="cname"&gt;
&lt;h3&gt;2.1 CNAME&lt;/h3&gt;
&lt;p&gt;Create a new &lt;strong&gt;CNAME&lt;/strong&gt; record at the domain registrar to redirect (example) &lt;tt class="docutils literal"&gt;www.myhomepi.com&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;myhomepi.duckdns.org&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="document-root"&gt;
&lt;h3&gt;2.2 Document Root&lt;/h3&gt;
&lt;p&gt;Create a new root directory to hold the contents of &lt;tt class="docutils literal"&gt;myHomePi&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /usr/share/nginx/www/myHomePi
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo chown -R &lt;span class="nv"&gt;$USER&lt;/span&gt;.&lt;span class="nv"&gt;$USER&lt;/span&gt; /usr/share/nginx/www/myHomePi
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="index-html"&gt;
&lt;h3&gt;2.3 Index.html&lt;/h3&gt;
&lt;p&gt;Create a sample &lt;tt class="docutils literal"&gt;/usr/share/nginx/www/myHomePi/index.html&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;myHomePi&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body &lt;span class="nv"&gt;bgcolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;white&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;Welcome to myHomePi!&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="server-block"&gt;
&lt;h3&gt;2.4 Server Block&lt;/h3&gt;
&lt;p&gt;I use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-available/default&lt;/span&gt;&lt;/tt&gt; as a template for the new &lt;tt class="docutils literal"&gt;myHomePi&lt;/tt&gt; configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/nginx/sites-available
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp default myHomePi
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify these lines for the custom domain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;listen 80;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;server_name www.myHomePi.com;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Activate the new server block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/nginx/sites-enabled
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ln -s ../sites-available/myHomePi
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service nginx restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="port-forwarding"&gt;
&lt;h3&gt;2.5 Port Forwarding&lt;/h3&gt;
&lt;p&gt;Configure &lt;a class="reference external" href="http://www.circuidipity.com/20141006.html"&gt;port forwarding on the home router&lt;/a&gt; to redirect traffic on port 80 to the internal IP address of the nginx server. Point your browser to &lt;tt class="docutils literal"&gt;www.myHomePi.com&lt;/tt&gt;. Success (hopefully)! :-)&lt;/p&gt;
&lt;p&gt;Repeat the above steps to add more domains. The limiting factor is the &lt;strong&gt;upload bandwidth&lt;/strong&gt; provided by the home ISP (typically a fraction of the download speed).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="postgresql"&gt;
&lt;h2&gt;3. PostgreSQL&lt;/h2&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install postgresql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch the PostgreSQL interactive console front-end &lt;tt class="docutils literal"&gt;psql&lt;/tt&gt; as &lt;tt class="docutils literal"&gt;postgres&lt;/tt&gt; user and set a new password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -u postgres psql
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# \password postgres&lt;/span&gt;
Enter new password: &lt;span class="o"&gt;[&lt;/span&gt;newpasswd&lt;span class="o"&gt;]&lt;/span&gt;
Enter it again: &lt;span class="o"&gt;[&lt;/span&gt;newpasswd&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# \quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a new user &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;www-data&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; and database &lt;tt class="docutils literal"&gt;mydb&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo -u postgres psql
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# CREATE USER &amp;quot;www-data&amp;quot; WITH PASSWORD &amp;#39;newpasswd&amp;#39;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# CREATE DATABASE mydb WITH OWNER &amp;quot;www-data&amp;quot;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# GRANT ALL PRIVILEGES ON DATABASE mydb to &amp;quot;www-data&amp;quot;;&lt;/span&gt;
&lt;span class="nv"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# \quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save any changes and reload the database server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service postgresql reload
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="helpful-resources"&gt;
&lt;h2&gt;4. Helpful resources&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-14-04"&gt;How to install the LEMP stack on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-14-04-lts"&gt;Set up Nginx Server Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://help.ubuntu.com/community/PostgreSQL"&gt;PostgreSQL and Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linuxtopia.org/online_books/database_guides/Practical_PostgreSQL_database/c15679_002.htm"&gt;Practical PostgreSQL database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.circuidipity.com/ddns-openwrt.html"&gt;DDNS and OpenWrt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;div class="section" id="notes"&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;PostgreSQL maintains its own users and passwords, which are separate from the Linux user accounts. It is not required that your PostgreSQL usernames match the Linux usernames. See &lt;a class="reference external" href="http://www.linuxtopia.org/online_books/database_guides/Practical_PostgreSQL_database/c15679_002.htm"&gt;Practical PostgreSQL database&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="web"></category><category term="linux"></category></entry><entry><title>Supercharge a home router using OpenWrt Part 2</title><link href="http://www.circuidipity.com/supercharge-a-home-router-using-openwrt-pt2.html" rel="alternate"></link><updated>2015-02-08T18:16:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-08:supercharge-a-home-router-using-openwrt-pt2.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/pingparade4.html"&gt;PREVIOUS: TL-WR841N router &amp;lt;&amp;lt;&lt;/a&gt; A &lt;strong&gt;home router&lt;/strong&gt; is a much more capable device than its pre-installed software would lead you to believe. &lt;a class="reference external" href="https://openwrt.org/"&gt;OpenWrt&lt;/a&gt; is an embedded Linux distribution that converts cheap, energy-efficient, network-capable devices into much more useful hackable computers.&lt;/p&gt;
&lt;p&gt;Getting its start hacking the original &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Linksys_WRT54G_series#WRT54G"&gt;Linksys WRT54G&lt;/a&gt;, OpenWrt and its volunteer developers now support a &lt;a class="reference external" href="http://wiki.openwrt.org/toh/start"&gt;wide and growing range of hardware&lt;/a&gt;. The project hosts software packages that lay out a smorgasboard of extra possibilities: more network tools with more fine-grained controls, plus a range of server capabilities... manage printers, connect external USB drives for backup, host files/torrents/VOIP/VPNs.&lt;/p&gt;
&lt;p&gt;I replaced the default firmware and now exploring an OpenWrt-supported &lt;a class="reference external" href="http://wiki.openwrt.org/toh/tp-link/tl-wdr3600"&gt;TP-Link TL-WDR3600&lt;/a&gt; router:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;dual 2.4GHz 802.11bgn and 5GHz 802.11an wifi with detachable antennas&lt;/li&gt;
&lt;li&gt;4 Port 10/100/1000 LAN&lt;/li&gt;
&lt;li&gt;1 Port 10/100/1000 WAN&lt;/li&gt;
&lt;li&gt;2 USB 2.0 Ports&lt;/li&gt;
&lt;li&gt;64 MB Flash + 128MB RAM&lt;/li&gt;
&lt;li&gt;[my device has] firmware: 3.13.34 build 130909 rel. 53148n hardware &lt;strong&gt;version: v1.5&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="download-install-image"&gt;
&lt;h2&gt;0. Download install image&lt;/h2&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; OpenWrt builds different install images for different devices. Consult the &lt;a class="reference external" href="http://wiki.openwrt.org/toh/start"&gt;Table of Hardware&lt;/a&gt; to confirm that your router is supported and read the wiki entry for your particular device to identify the correct image. It is &lt;strong&gt;easy to brick a device&lt;/strong&gt; (render inoperable) using an incorrect install image.&lt;/p&gt;
&lt;p&gt;Latest version (2015-02-08) of OpenWrt is &lt;strong&gt;v14.07 &amp;quot;Barrie Breaker&amp;quot;&lt;/strong&gt; and TL-WDR3600 is an &lt;strong&gt;ar71xx&lt;/strong&gt; device. Download the appropriate install image:&lt;/p&gt;
&lt;p&gt;[Link] &lt;a class="reference external" href="https://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/openwrt-ar71xx-generic-tl-wdr3600-v1-squashfs-factory.bin"&gt;openwrt-ar71xx-generic-tl-wdr3600-v1-squashfs-factory.bin&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="flash-router"&gt;
&lt;h2&gt;1. Flash router&lt;/h2&gt;
&lt;p&gt;Log into the TP-Link router web interface &lt;tt class="docutils literal"&gt;address=192.168.0.1&lt;/tt&gt; &lt;tt class="docutils literal"&gt;user=admin&lt;/tt&gt; &lt;tt class="docutils literal"&gt;password=admin&lt;/tt&gt; navigate to the update page &lt;tt class="docutils literal"&gt;System &lt;span class="pre"&gt;Tools-&amp;gt;Firmware&lt;/span&gt; Upgrade&lt;/tt&gt; and select the downloaded &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openwrt-*-squashfs-factory.bin&lt;/span&gt;&lt;/tt&gt; firmware image as the update package. Allow several minutes for the device to write the new OpenWrt firmware; when finished the device will reboot and accessible at new IP address &lt;tt class="docutils literal"&gt;192.168.1.1&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-login"&gt;
&lt;h2&gt;2. First login&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/firstlogin"&gt;Use telnet (no password) to login for the first time&lt;/a&gt; to the new OpenWrt installation. Use &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt; to create a new root password. After changing the password telnet is disabled. Exit and re-login using SSH:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh root@192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/internet.connection"&gt;Setup your internet connection&lt;/a&gt; either by editing &lt;tt class="docutils literal"&gt;/etc/config/network&lt;/tt&gt; or using OpenWrt's &lt;strong&gt;Unified Configuration Interface (UCI)&lt;/strong&gt;. Using my DSL (pppoe) as an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# uci set network.wan.proto=pppoe&lt;/span&gt;
&lt;span class="c"&gt;# uci set network.wan.username=&amp;#39;yougotthisfromyour@isp.su&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# uci set network.wan.password=&amp;#39;yourpassword&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# uci commit network&lt;/span&gt;
&lt;span class="c"&gt;# ifup wan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="web-interface"&gt;
&lt;h2&gt;3. Web interface&lt;/h2&gt;
&lt;p&gt;OpenWrt can be further configured in the console or the &lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/luci.essentials"&gt;LuCI web interface&lt;/a&gt;. LuCI is included by default in the WDR3600 image, otherwise it can be installed using the &lt;tt class="docutils literal"&gt;opkg&lt;/tt&gt; package manager:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# opkg update&lt;/span&gt;
&lt;span class="c"&gt;# opkg install luci&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If installed manually LuCI will not be running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/uhttpd start    # start the web server&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/uhttpd enable   # auto-start at boot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LuCI's default web server &lt;strong&gt;uhttpd&lt;/strong&gt; is configured in &lt;tt class="docutils literal"&gt;/etc/config/uhttpd&lt;/tt&gt; and LuCI itself is configured in &lt;tt class="docutils literal"&gt;/etc/config/luci&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="LuCI login" src="images/pingparade4-1.png" style="width: 960px; height: 300px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration"&gt;
&lt;h2&gt;4. Configuration&lt;/h2&gt;
&lt;p&gt;Secure access to the router using &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH key authentication&lt;/a&gt;. Create &lt;a class="reference external" href="http://www.circuidipity.com/20141001.html"&gt;static leases&lt;/a&gt; for hosts using DHCP and setup &lt;a class="reference external" href="http://www.circuidipity.com/20141006.html"&gt;port forwarding&lt;/a&gt; to reach devices behind the firewall from the world-at-large.&lt;/p&gt;
&lt;p&gt;Its exciting what you can do with these consumer routers once you let it sink in that - with a few dollars and OpenWrt - you have an extremely configurable general purpose computer.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="openwrt"></category><category term="linux"></category></entry><entry><title>Dynamic DNS and OpenWRT</title><link href="http://www.circuidipity.com/ddns-openwrt.html" rel="alternate"></link><updated>2015-02-06T00:02:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-06:ddns-openwrt.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #5 &amp;gt;&amp;gt;&lt;/a&gt; Access a home server from anywhere using Dynamic DNS (DDNS).&lt;/p&gt;
&lt;p&gt;My Raspberry Pi server sits behind a router assigned a &lt;strong&gt;dynamic IP address&lt;/strong&gt; by the ISP. If I want to connect to my Pi over the Internet from anywhere in the world I can use a &lt;strong&gt;DDNS service&lt;/strong&gt; to create a domain name that automatically updates the IP address in the background whenever it changes and redirect traffic to the new location.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="select-a-ddns-service"&gt;
&lt;h2&gt;0. Select a DDNS service&lt;/h2&gt;
&lt;p&gt;I chose the free DDNS service &lt;a class="reference external" href="http://www.duckdns.org/"&gt;duckdns.org&lt;/a&gt; which permits the creation of up to 4 domains in the format &lt;tt class="docutils literal"&gt;your_subdomain_choice.duckdns.org&lt;/tt&gt;. Example: Create the subdomain &lt;tt class="docutils literal"&gt;myPiHomeServer&lt;/tt&gt; and later - after configuring the router - when entering &lt;tt class="docutils literal"&gt;myPiHomeServer.duckdns.org&lt;/tt&gt; I will be redirected to the current IP address assigned to my home network.&lt;/p&gt;
&lt;p&gt;Make note of &lt;a class="reference external" href="http://www.duckdns.org/install.jsp"&gt;http://www.duckdns.org/install.jsp&lt;/a&gt; (while logged in) for customized settings useful for configuring the router for DDNS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configure-openwrt-for-notification"&gt;
&lt;h2&gt;1. Configure OpenWRT for notification&lt;/h2&gt;
&lt;p&gt;Different routers configure DDNS differently but the goal is the same: the ability to notify the DDNS service whenever the IP address assigned by the ISP is modified. I am using an &lt;a class="reference external" href="http://www.circuidipity.com/supercharge-a-home-router-using-openwrt-pt2.html"&gt;OpenWRT-powered router&lt;/a&gt; and these are the steps to configure OpenWRT to use duckdns DDNS:&lt;/p&gt;
&lt;p&gt;Install DDNS packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# opkg update&lt;/span&gt;
&lt;span class="c"&gt;# opkg install luci-app-ddns ddns-scripts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the customized settings from &lt;a class="reference external" href="http://www.duckdns.org/install.jsp"&gt;http://www.duckdns.org/install.jsp&lt;/a&gt; to configure &lt;tt class="docutils literal"&gt;/etc/config/ddns&lt;/tt&gt;. Sample entry for &lt;tt class="docutils literal"&gt;myPiHomeServer&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config service          &lt;span class="s2"&gt;&amp;quot;duckdns&amp;quot;&lt;/span&gt;
option enabled          &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
option service_name     &lt;span class="s2"&gt;&amp;quot;duckdns.org&amp;quot;&lt;/span&gt;
option domain           &lt;span class="s2"&gt;&amp;quot;myPiHomeServer&amp;quot;&lt;/span&gt;
option username         &lt;span class="s2"&gt;&amp;quot;NA&amp;quot;&lt;/span&gt;
option password         &lt;span class="s2"&gt;&amp;quot;string_of_letters_and_digits&amp;quot;&lt;/span&gt;
option ip_source        &lt;span class="s2"&gt;&amp;quot;network&amp;quot;&lt;/span&gt;
option ip_network       &lt;span class="s2"&gt;&amp;quot;wan&amp;quot;&lt;/span&gt;
option force_interval   &lt;span class="s2"&gt;&amp;quot;72&amp;quot;&lt;/span&gt;
option force_unit       &lt;span class="s2"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;
option check_interval   &lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;
option check_unit       &lt;span class="s2"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;
option update_url       &lt;span class="s2"&gt;&amp;quot;http://www.duckdns.org/update?domains=[DOMAIN]&amp;amp;token=[PASSWORD]&amp;amp;ip=[IP]&amp;quot;&lt;/span&gt;
option use_syslog       &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start the daemon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# sh&lt;/span&gt;
&lt;span class="c"&gt;# . /usr/lib/ddns/dynamic_dns_functions.sh&lt;/span&gt;
&lt;span class="c"&gt;# start_daemon_for_all_ddns_sections &amp;quot;wan&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /usr/lib/ddns/dynamic_dns_updater.sh duckdns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In OpenWRT's &lt;tt class="docutils literal"&gt;LuCI&lt;/tt&gt; interface navigate to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;System-&amp;gt;Startup&lt;/span&gt;&lt;/tt&gt; and enable DDNS to ensure the router continues to send IP address changes after reboot and hotplug events.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/ddns.client"&gt;OpenWRT DDNS client&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="port-forwarding"&gt;
&lt;h2&gt;2. Port forwarding&lt;/h2&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.circuidipity.com/20141006.html"&gt;port forwarding HOWTO&lt;/a&gt; to configure OpenWRT to forward traffic directed at one of the router's ports to the listening port on the Pi home server. Example: configure port &lt;tt class="docutils literal"&gt;55555&lt;/tt&gt; on the router to connect to the &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH server&lt;/a&gt; listening on port &lt;tt class="docutils literal"&gt;22&lt;/tt&gt; on the Pi.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="openwrt"></category><category term="linux"></category></entry><entry><title>Network Attached Storage using a Raspberry Pi and SSHFS</title><link href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html" rel="alternate"></link><updated>2015-02-05T18:28:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-05:nas-raspberry-pi-sshfs.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #4 &amp;gt;&amp;gt;&lt;/a&gt; Connect a Pi to external USB storage and create a cheap, cheerful, encrypted traffic NAS device via &lt;strong&gt;SSH Filesystem (SSHFS)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;With a &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Pi-attached 1TB hard drive&lt;/a&gt; hosting a properly configured &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;SSH server&lt;/a&gt; nothing extra is required server-side. On my laptop I install SSHFS, add my username to the &lt;tt class="docutils literal"&gt;FUSE&lt;/tt&gt; group, and create a local &lt;tt class="docutils literal"&gt;piNAS&lt;/tt&gt; mountpoint for the remote filesystem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install sshfs
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser USERNAME fuse
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/piNAS
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log out and back in for new permissions to be activated. To mount the Pi-hosted remote filesystem to the Chromebook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sshfs -o &lt;span class="nv"&gt;idmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;user ip_address_of_the_Pi:/media/your_external_usb_storage ~/piNAS
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Contents of the remote hard drive now appear as local directories and files on the Chromebook. Data transfer between server and client is SSH-encrypted.&lt;/p&gt;
&lt;p&gt;To detach from remote storage unmount the drive using &lt;tt class="docutils literal"&gt;fusermount&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fusermount -u ~/piNAS
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raspberry Pi + SSHFS is no speed demon but its very usable. On my laptop connected to the LAN via wireless I am able to run Rhythmbox playing music and videos in VLC that are remotely hosted on the Pi.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</summary><category term="networks"></category><category term="raspberry pi"></category><category term="linux"></category></entry><entry><title>Links of interest</title><link href="http://www.circuidipity.com/links-20150204.html" rel="alternate"></link><updated>2015-02-04T00:02:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-04:links-20150204.html</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ted.com/talks/deb_roy_the_birth_of_a_word"&gt;Birth of a word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Overcoming &lt;a class="reference external" href="http://www.brainpickings.org/2015/01/07/glenn-kurtz-practicing/"&gt;imposter syndrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How NASA brought the &lt;a class="reference external" href="http://arstechnica.com/science/2013/04/how-nasa-brought-the-monstrous-f-1-moon-rocket-back-to-life/"&gt;F-1 monster moon rocket engine back to life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Panoramic view of the &lt;a class="reference external" href="http://hubblesite.org/newscenter/archive/releases/2015/02"&gt;Andromeda Galaxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MOOC &lt;a class="reference external" href="http://www.marsdd.com/news-and-insights/what-mooc-should-become/"&gt;jumps into the POOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From bacteria to &lt;a class="reference external" href="https://www.youtube.com/watch?v=0HJPilemNns"&gt;interstellar war&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nazi spy &lt;a class="reference external" href="http://www.strangehistory.net/2010/06/27/nazi-kurt-captured-in-arctic-circle-in-1981/"&gt;captured in Labrador in 1981&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;Ten Years to the Singularity if we &lt;a class="reference external" href="http://goertzel.org/TenYearsToTheSingularity.pdf"&gt;Really Really Try&amp;quot; (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Influence of &lt;a class="reference external" href="http://onlinelibrary.wiley.com/enhanced/doi/10.1002/bies.201400071/"&gt;gut bacteria on eating decisions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="links"></category></entry><entry><title>Backup /home</title><link href="http://www.circuidipity.com/backup-home.html" rel="alternate"></link><updated>2015-02-03T00:10:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-03:backup-home.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #3 &amp;gt;&amp;gt;&lt;/a&gt; Make automatic backups of &lt;tt class="docutils literal"&gt;/home&lt;/tt&gt; using a dash of shell scripting + rsync + SSH + cron!&lt;/p&gt;
&lt;p&gt;One of the advantages of setting up a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Linux home server&lt;/a&gt; is providing an always-available location to store backups of important files. A little peace of mind can be gained in a few steps as I describe the simple backup solution I use to automatically mirror my laptop's home directory on the local area network (LAN) server.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="ssh"&gt;
&lt;h2&gt;0. SSH&lt;/h2&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;Secure remote access using SSH keys&lt;/a&gt; to configure SSH for encrypted connections between (Pi) server and (laptop) client. &lt;tt class="docutils literal"&gt;Keychain&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-agent&lt;/span&gt;&lt;/tt&gt;  make it easy to use a passphrase-protected &lt;strong&gt;encryption key&lt;/strong&gt; in automated scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="script"&gt;
&lt;h2&gt;1. Script&lt;/h2&gt;
&lt;div class="section" id="on-the-server"&gt;
&lt;h3&gt;On the server:&lt;/h3&gt;
&lt;p&gt;Create a backup directory to hold the contents of &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/backup-home
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-client"&gt;
&lt;h3&gt;On the client:&lt;/h3&gt;
&lt;p&gt;Create a backup script that uses the &lt;tt class="docutils literal"&gt;rsync&lt;/tt&gt; file-copy tool. A sample &lt;tt class="docutils literal"&gt;myRsync&lt;/tt&gt; script to backup &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;load the details of the SSH key stored in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;mirror &lt;tt class="docutils literal"&gt;$HOME/&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;SERVER_ADDR:~/backup-home/&lt;/span&gt;&lt;/tt&gt; using options &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--archive&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;exclude certain items from the backup like &lt;tt class="docutils literal"&gt;cache&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;trash&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="warning"&gt;WARNING!&lt;/span&gt; Take care nothing important is wiped out using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt;. First run &lt;tt class="docutils literal"&gt;rsync&lt;/tt&gt; in a console with option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; to test settings (example SERVER_ADDR &lt;tt class="docutils literal"&gt;pi&amp;#64;192.168.1.88&lt;/tt&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rsync --verbose --archive --delete --dry-run &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/ pi@192.168.1.88:~/backup-home/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# ~/bin/myRsync&lt;/span&gt;
&lt;span class="nv"&gt;ssh_agent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${HOME}/.keychain/$HOSTNAME-sh&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--verbose --archive --delete&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--exclude=*[Cc]ache* --exclude=*[Tt]rash*&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${HOME}/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pi@192.168.1.88:~/backup_home/&amp;quot;&lt;/span&gt;

. &lt;span class="nv"&gt;$ssh_agent&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="k"&gt;)&lt;/span&gt;
rsync &lt;span class="nv"&gt;$rsync_options&lt;/span&gt; &lt;span class="nv"&gt;$rsync_exclude&lt;/span&gt; &lt;span class="nv"&gt;$rsync_src&lt;/span&gt; &lt;span class="nv"&gt;$rsync_dest&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Place the script in &lt;tt class="docutils literal"&gt;$HOME/bin&lt;/tt&gt; and make it executable. Run manually at least once to test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod 744 ~/bin/myRsync
&lt;span class="nv"&gt;$ &lt;/span&gt;~/bin/myRsync
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="automate"&gt;
&lt;h2&gt;2. Automate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Cron&lt;/strong&gt; is a daemon that runs programs at specified times. Use the command &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; to setup &lt;tt class="docutils literal"&gt;myRsync&lt;/tt&gt; to auto-run with the following parameters:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;perform a daily backup at &lt;tt class="docutils literal"&gt;23:55&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;log program activity by redirecting output to &lt;tt class="docutils literal"&gt;/home/my_username/cron.log&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# To define the time you can provide concrete values for&lt;/span&gt;
&lt;span class="c"&gt;# minute (m), hour (h), day of month (dom), month (mon),&lt;/span&gt;
&lt;span class="c"&gt;# and day of week (dow) or use &amp;#39;*&amp;#39; in these fields (for &amp;#39;any&amp;#39;).#&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Output of the crontab jobs (including errors) is sent through&lt;/span&gt;
&lt;span class="c"&gt;# email to the user the crontab file belongs to (unless redirected).&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# For more information see the manual pages of crontab(5) and cron(8)&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;

&lt;span class="c"&gt;# Daily backup of $HOME to the netbook server&lt;/span&gt;
55 23 * * * /home/my_username/bin/myRsync &amp;gt;&amp;gt; /home/my_username/cron.log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I stashed a more complete &lt;tt class="docutils literal"&gt;myRsync&lt;/tt&gt; &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/myRsync"&gt;script on Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="linux"></category><category term="shell"></category><category term="programming"></category><category term="github"></category></entry><entry><title>Secure remote access using SSH keys</title><link href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html" rel="alternate"></link><updated>2015-02-20T23:34:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-02:secure-remote-access-using-ssh-keys.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi Home Server Hack #1 &amp;gt;&amp;gt;&lt;/a&gt; Create cryptographic keys and disable password logins to make remote machines more secure.&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt; &lt;em&gt;Remote server&lt;/em&gt; is a &lt;a class="reference external" href="http://www.circuidipity.com/raspberry-pi-home-server.html"&gt;Raspberry Pi&lt;/a&gt; running Raspbian Linux configured for SSH logins from a &lt;a class="reference external" href="http://www.circuidipity.com/c720-lubuntubook.html"&gt;Chromebook&lt;/a&gt; &lt;em&gt;local client&lt;/em&gt; running Lubuntu 14.04.&lt;/p&gt;
&lt;p&gt;Server options: username &lt;tt class="docutils literal"&gt;pi&lt;/tt&gt;, ip address &lt;tt class="docutils literal"&gt;192.168.1.33&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install"&gt;
&lt;h2&gt;0. Install&lt;/h2&gt;
&lt;div class="section" id="on-the-server"&gt;
&lt;h3&gt;On the server&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-server&lt;/span&gt;&lt;/tt&gt; and create an SSH configuration in the home directory of users who requires access to the system:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-server
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch ~/.ssh/authorized_keys &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 600 ~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;collect key fingerprints:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_dsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_ecdsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and give &lt;tt class="docutils literal"&gt;keys.txt&lt;/tt&gt; to users to compare signature when connecting for the first time&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; specify usernames in &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt; to be granted system access (&lt;strong&gt;disabling&lt;/strong&gt; all others by default):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AllowUsers pi user2 user3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and restart SSH with new configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service ssh restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="on-the-client"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-client&lt;/span&gt;&lt;/tt&gt; and create the SSH folder in the user home directory:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-client
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;create &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; to hold &lt;em&gt;aliases&lt;/em&gt; with the login options for a server - sample entry for the Pi:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host raspberry.lan
HostName 192.168.1.33
Port 22
User pi
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test SSH password login to Pi server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh raspberry.lan
pi@192.168.1.33&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password:
Last login: Thu Feb 19 18:07:48 2015 from chromebook.lan
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; see &lt;a class="reference external" href="http://www.circuidipity.com/ddns-openwrt.html"&gt;Access from anywhere in the world using dynamic DNS&lt;/a&gt; for configuring access to the Pi from &lt;em&gt;outside&lt;/em&gt; the LAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="keys"&gt;
&lt;h2&gt;1. Keys&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;generate SSH keys:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -t rsa -C &lt;span class="s2"&gt;&amp;quot;$(whoami)@$(hostname)-$(date -I)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;upload the &lt;em&gt;public key&lt;/em&gt; to the server and append to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/authorized_keys&lt;/span&gt;&lt;/tt&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/.ssh/id_rsa.pub | ssh raspberry.lan &lt;span class="s2"&gt;&amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Graphical display managers like &lt;tt class="docutils literal"&gt;gdm&lt;/tt&gt; will automatically check a user account for SSH keys upon login. A pop-up box will prompt for the passphrase and the key will be added to the desktop session.&lt;/p&gt;
&lt;p&gt;If logging into a console, tell SSH that you have keys by running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-add&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-add
&lt;span class="nv"&gt;$ &lt;/span&gt;Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; /home/username/.ssh/id_rsa:
Identity added: /home/username/.ssh/id_rsa &lt;span class="o"&gt;(&lt;/span&gt;/home/username/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All SSH sessions launched from this console will access this user key stored in memory. Make sure to test the connection before disabling password logins:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh raspberry.lan
Last login: Thu Feb 19 18:22:42 2015 from chromebook.lan
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No passphrase request indicates SSH key authentication is properly configured.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-password-logins"&gt;
&lt;h2&gt;2. Disable password logins&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;On the server&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;edit &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;PubkeyAuthentication yes
ChallengeResponseAuthentication no
PasswordAuthentication no
UsePAM no
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart SSH:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service ssh restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="key-management"&gt;
&lt;h2&gt;3. Key management&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.funtoo.org/Keychain"&gt;Keychain&lt;/a&gt; is an OpenSSH key manager. From the package description:&lt;/p&gt;
&lt;blockquote&gt;
When keychain is run, it checks for a running ssh-agent, otherwise it starts one. It saves the ssh-agent environment variables to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;, so that subsequent logins and non-interactive shells such as cron jobs can source the file and make passwordless ssh connections.  In addition, when keychain runs, it verifies that the key files specified on the command-line are known to ssh-agent, otherwise it loads them, prompting you for a password if necessary.&lt;/blockquote&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;On the client&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install keychain
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;configure &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# setup keychain - ssh-agent management&lt;/span&gt;
keychain ~/.ssh/id_rsa
. ~/.keychain/&lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt;-sh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;flush all cached keys from memory with:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;keychain --clear
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; if using &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; enable persistent SSH key management across sessions by editing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.tmux.conf&lt;/span&gt;&lt;/tt&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;set&lt;/span&gt;-option -g update-environment &lt;span class="s2"&gt;&amp;quot;DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="linux"></category><category term="raspberry pi"></category></entry><entry><title>There's no place like [a Raspberry Pi] Home [Server]</title><link href="http://www.circuidipity.com/raspberry-pi-home-server.html" rel="alternate"></link><updated>2015-02-19T19:46:00-05:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2015-02-01:raspberry-pi-home-server.html</id><summary type="html">&lt;img alt="Raspberry Pi Home Server" class="align-right" src="images/raspberry-pi-home-server.png" style="width: 300px; height: 300px;" /&gt;
&lt;p&gt;&lt;em&gt;Work-in-progress&lt;/em&gt;: Running your own &lt;strong&gt;Linux-powered home server&lt;/strong&gt; is a fun learning experience about how networks work and using a &lt;a class="reference external" href="http://www.circuidipity.com/tag-raspberry-pi.html"&gt;Raspberry Pi&lt;/a&gt; is a cheap and cheerful way to get the job done!&lt;/p&gt;
&lt;div class="section" id="let-s-go"&gt;
&lt;h2&gt;Let's go!&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;0. &lt;a class="reference external" href="http://www.circuidipity.com/run-a-raspberry-pi-from-external-usb-storage.html"&gt;Move the root filesystem to external USB storage&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;1. &lt;a class="reference external" href="http://www.circuidipity.com/secure-remote-access-using-ssh-keys.html"&gt;Secure remote access using SSH keys&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;2. &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;Multiple terminal windows using tmux&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;3. &lt;a class="reference external" href="http://www.circuidipity.com/backup-home.html"&gt;Backup /home&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;4. &lt;a class="reference external" href="http://www.circuidipity.com/nas-raspberry-pi-sshfs.html"&gt;Network attached storage&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;5. &lt;a class="reference external" href="http://www.circuidipity.com/ddns-openwrt.html"&gt;Access from anywhere in the world using dynamic DNS&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;6. &lt;a class="reference external" href="http://www.circuidipity.com/php-nginx-postgresql.html"&gt;Web server and database&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;7. &lt;a class="reference external" href="http://www.circuidipity.com/ttrss.html"&gt;RSS reader and aggregator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Happy hacking!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="raspberry pi"></category><category term="networks"></category><category term="linux"></category></entry></feed>