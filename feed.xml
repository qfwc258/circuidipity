<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feed.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2014-09-30T13:49:00-04:00</updated><entry><title>A place for humanity in the stars</title><link href="http://www.circuidipity.com/20140930.html" rel="alternate"></link><updated>2014-09-30T13:49:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-30:20140930.html</id><summary type="html">&lt;p&gt;Excerpt from &amp;quot;The Man Who Sold the Moon&amp;quot; by &lt;strong&gt;Cory Doctorow&lt;/strong&gt;, part of the wonderful &lt;a class="reference external" href="http://www.circuidipity.com/20140928.html"&gt;Hieroglyph&lt;/a&gt; story collection:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Lost Cosmonaut Conspiracy theory holds that a certain number - two? three? - of Russian cosmonauts were killed before Gagarin's successful flight. They say when Gagarin got into the Vostok in 1961, he fully expected to die, but he got in anyway, and not because of the crack of a commissar's pistol. He boarded his death trap because it was his ticket into space. He had gone to what could almost certainly have been his death because of his belief in a better future. A place for humanity in the stars.&lt;/p&gt;
&lt;p&gt;When you think of a hero, think of Gagarin, strapped into that capsule, the rumble of the jets below him, the mutter of the control tower in his headset, the heavy hand of acceleration hard upon his chest, pushing with increasing, bone-crushing force, the roar of the engines blotting out all sound. Think of him going straight to his death with a smile on his face, and think of him breaking through the atmosphere, the sudden weightlessness, the realization that he had survived. That he was the first human being to go to space.&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="quotes"></category><category term="space"></category><category term="sf"></category><category term="books"></category></entry><entry><title>"Hieroglyph", or ideas about getting Big Stuff Done in an incremental world</title><link href="http://www.circuidipity.com/20140928.html" rel="alternate"></link><updated>2014-09-28T14:49:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-28:20140928.html</id><summary type="html">&lt;img alt="Hieroglyh" class="align-right" src="images/20140928-0.jpg" style="width: 222px; height: 343px;" /&gt;
&lt;p&gt;&lt;strong&gt;Neal Stephenson&lt;/strong&gt; laments in his preface to &lt;em&gt;Hieroglyph: Stories &amp;amp; Visions for a Better Future&lt;/em&gt; that:&lt;/p&gt;
&lt;blockquote&gt;
Today's belief in ineluctable certainty is the true innovation killer of our age. In this environment, the best... [we] can do is to develop small improvements to existing systems - climbing the hill, as it were, toward a local maximum, trimming fat, eking out the occasional tiny innovation - like city planners painting bicycle lanes on the streets as a gesture toward solving our energy problems. Any strategy that involves crossing a valley - accepting short-term losses to reach a higher hill in the distance - will soon be brought to a halt by the demands of a system that celebrates short-term gains and tolerates stagnation, but condemns anything else as failure. In short, a world where big stuff can never get done.&lt;/blockquote&gt;
&lt;p&gt;Identifying the problem is the first step towards solving it, and &lt;a class="reference external" href="http://hieroglyph.asu.edu/"&gt;Project Hieroglyph&lt;/a&gt; has assembled a wonderful collection of ideas for a world where Big Stuff &lt;em&gt;Does&lt;/em&gt; Get Done: starting with Stephenson's own tale of constructing a steel tower that reaches the stratosphere; &lt;strong&gt;Kathleen Ann Goonan&lt;/strong&gt; on a revolutionary leap in neuroscience that heralds a new Age of Learning; &lt;strong&gt;Cory Doctorow&lt;/strong&gt; puts 3-D printers on the Moon; &lt;strong&gt;Karl Schroeder&lt;/strong&gt; shows Canada's First Nations making a radical realignment in the balance of power using group decision-making tools; &lt;strong&gt;Gregory Benford&lt;/strong&gt; on entrepreneurs industrializing the solar system and reaching for the stars; and more.&lt;/p&gt;
</summary><category term="books"></category><category term="sf"></category><category term="quotes"></category></entry><entry><title>Upton on Shenzhen</title><link href="http://www.circuidipity.com/20140927.html" rel="alternate"></link><updated>2014-09-27T13:32:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-27:20140927.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Eben Upton&lt;/strong&gt;, co-founder of &lt;strong&gt;Raspberry Pi&lt;/strong&gt;, on hardware hacker-friendly Shenzhen:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the big problems with large Western components companies is that they have such big overheads that they have to qualify (sales) opportunities. One of the reasons that the Raspberry Pi has been successful is that we have taken high-end software and silicon that you can’t normally only buy a million of, because you have got to get through an opportunity certification program… it could cost a hundred thousand dollars for them to just to think about selling you the chip. They have got to know if it will be worth it.&lt;/p&gt;
&lt;p&gt;There’s all this wonderful silicon which is completely fenced off from your average maker. So that’s what Raspberry Pi has done, is dragging together all that harm into one basket, get that through opportunity certification, largely because I worked for the silicon company in question. Now we are big enough, that if [we] took Raspberry Pi now and took it to a silicon company saying we want to buy your silicon they would say yes. The problem is nobody would believe it until it happens.&lt;/p&gt;
&lt;p&gt;That’s the lovely thing about Shenzhen. There’s no opportunity qualification, they don’t care. They have no overheads, they have one guy on the store, their own factory and they make stuff. For Makers, people who maybe want to make a hundred or a thousand that’s awesome... [Raspberry Pi gets] you over one barrier, then Shenzhen gets you over the other, and suddenly you’ve got a product, you’ve got a business.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.mobilegeeks.com/eben-upton-founder-raspberry-pi-talks-silicon-valley-shenzhen-maker/"&gt;Eben Upton, founder of Raspberry Pi talks Silicon Valley, Shenzhen and Maker&lt;/a&gt;&lt;/p&gt;
</summary><category term="shenzhen"></category><category term="china"></category><category term="raspberry pi"></category><category term="electronics"></category><category term="quotes"></category></entry><entry><title>Ping Parade #4 -- Breaker</title><link href="http://www.circuidipity.com/pingparade4.html" rel="alternate"></link><updated>2014-09-26T21:10:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-26:pingparade4.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Unlock the full potential of your home router using OpenWrt.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="OpenWRT" src="images/pingparade4-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;A &lt;strong&gt;home router&lt;/strong&gt; is a much more capable device than its pre-installed software would lead you to believe. &lt;a class="reference external" href="https://openwrt.org/"&gt;OpenWrt&lt;/a&gt; is an embedded Linux distribution that converts cheap, energy-efficient, network-capable devices into much more useful hackable computers.&lt;/p&gt;
&lt;p&gt;Getting its start hacking the original &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Linksys_WRT54G_series#WRT54G"&gt;Linksys WRT54G&lt;/a&gt;, OpenWrt and its volunteer developers now support a &lt;a class="reference external" href="http://wiki.openwrt.org/toh/start"&gt;wide and growing range of hardware&lt;/a&gt;. The project hosts software packages that lay out a smorgasboard of extra possibilities: more network tools with more fine-grained controls, plus a range of server capabilities... manage printers, connect external USB drives for backup, host files/torrents/VOIP/VPNs.&lt;/p&gt;
&lt;p&gt;I am currently using an OpenWrt-supported &lt;a class="reference external" href="http://wiki.openwrt.org/toh/tp-link/tl-wr841nd"&gt;TP-Link TL-WR841N&lt;/a&gt; wireless N router, an inexpensive ($20-25CDN) device with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2 antennas (on the otherwise identical TL-WR841ND they are detachable)&lt;/li&gt;
&lt;li&gt;4 Port 100/10 LAN&lt;/li&gt;
&lt;li&gt;1 Port 100/10 WAN&lt;/li&gt;
&lt;li&gt;4 MB Flash + 32MB RAM&lt;/li&gt;
&lt;li&gt;[my device has] firmware: 3.14.3 build 131011 rel. 55505n hardware &lt;strong&gt;version: v8&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not much flash storage for added packages but its a cheap and cheerful device to hack on. It has been running &lt;a class="reference external" href="http://wiki.openwrt.org/doc/barrier.breaker"&gt;Barrier Breaker&lt;/a&gt;  - the release candidate of the next upcoming version of OpenWrt - with no problems for the last few months.&lt;/p&gt;
&lt;p&gt;Below are the steps to replace the default router firmware with OpenWrt. I am using my TL-WR841N as an example. Good luck!&lt;/p&gt;
&lt;div class="section" id="step-0-download-install-image"&gt;
&lt;h2&gt;Step 0 - Download install image&lt;/h2&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;OpenWrt builds different install images for different devices. Consult the &lt;a class="reference external" href="http://wiki.openwrt.org/toh/start"&gt;Table of Hardware&lt;/a&gt; to confirm that your router is supported and read the wiki entry for your particular device to identify the correct image. It is &lt;strong&gt;easy to brick a device&lt;/strong&gt; (render inoperable) using an incorrect install image.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;TL-WR841N is an &lt;strong&gt;ar71xx&lt;/strong&gt; device. Download the most recent devel VERSION (=14.07-rc3 as of 9-26):&lt;/p&gt;
&lt;p&gt;[Sample link] &lt;a class="reference external" href="http://downloads.openwrt.org/barrier_breaker/VERSION/ar71xx/generic/openwrt-ar71xx-generic-tl-wr841n-v8-squashfs-factory.bin"&gt;http://downloads.openwrt.org/barrier_breaker/VERSION/ar71xx/generic/openwrt-ar71xx-generic-tl-wr841n-v8-squashfs-factory.bin&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-flash-router"&gt;
&lt;h2&gt;Step 1 - Flash router&lt;/h2&gt;
&lt;p&gt;Log into the TP-Link router web interface - address=192.168.0.1, user=admin, pass=admin - navigate to the update page and select the downloaded &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openwrt-*-squashfs-factory.bin&lt;/span&gt;&lt;/tt&gt; firmware image as the update package. Allow several minutes for the device to write the new OpenWrt firmware; when finished the device will reboot and can be accessed at address=192.168.1.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-first-login"&gt;
&lt;h2&gt;Step 2 - First login&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/firstlogin"&gt;Use telnet (no password) to login for the first time&lt;/a&gt; to the new OpenWrt installation. Use &lt;tt class="docutils literal"&gt;passwd&lt;/tt&gt; to create a new root password. Once the password is properly configured telnet is disabled. Exit and re-login using &lt;tt class="docutils literal"&gt;ssh root&amp;#64;192.168.1.1&lt;/tt&gt; and the new password.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/internet.connection"&gt;Setup your internet connection&lt;/a&gt; either by editing &lt;tt class="docutils literal"&gt;/etc/config/network&lt;/tt&gt; or using OpenWrt's &lt;em&gt;Unified Configuration Interface&lt;/em&gt; (UCI). Using my DSL (pppoe) as an example...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;uci &lt;span class="nb"&gt;set &lt;/span&gt;network.wan.proto&lt;span class="o"&gt;=&lt;/span&gt;pppoe
uci &lt;span class="nb"&gt;set &lt;/span&gt;network.wan.username&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yougotthisfromyour@isp.su&amp;#39;&lt;/span&gt;
uci &lt;span class="nb"&gt;set &lt;/span&gt;network.wan.password&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yourpassword&amp;#39;&lt;/span&gt;
uci commit network
ifup wan
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-web-interface"&gt;
&lt;h2&gt;Step 3 - Web interface&lt;/h2&gt;
&lt;p&gt;OpenWrt can be further configured in the console or install the optional &lt;a class="reference external" href="http://wiki.openwrt.org/doc/howto/luci.essentials"&gt;LuCI web interface&lt;/a&gt; using the &lt;strong&gt;opkg&lt;/strong&gt; package manager...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;opkg update
opkg install luci
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;With only 4MB flash to play with there is less than 256K remaining in &lt;tt class="docutils literal"&gt;rootfs/overlay&lt;/tt&gt; for more packages after installing LuCI.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After install LuCI is not running by default...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/etc/init.d/uhttpd start    &lt;span class="c"&gt;# start the web server&lt;/span&gt;
/etc/init.d/uhttpd &lt;span class="nb"&gt;enable&lt;/span&gt;   &lt;span class="c"&gt;# auto-start at boot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LuCI's default web server &lt;strong&gt;uhttpd&lt;/strong&gt; is configured in &lt;tt class="docutils literal"&gt;/etc/config/uhttpd&lt;/tt&gt; and LuCI itself is configured in &lt;tt class="docutils literal"&gt;/etc/config/luci&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="LuCI login" src="images/pingparade4-1.png" style="width: 960px; height: 300px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-ssh"&gt;
&lt;h2&gt;Step 4 - SSH&lt;/h2&gt;
&lt;p&gt;Secure access to the router by configuring &lt;a class="reference external" href="http://www.circuidipity.com/pingparade2.html"&gt;SSH key authentication&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Its exciting what you can do with these consumer routers once you let it sink in that - with a few dollars and OpenWrt - you have an extremely configurable general purpose computer.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="openwrt"></category><category term="linux"></category></entry><entry><title>He did not have a long voyage, just a long tossing about</title><link href="http://www.circuidipity.com/20140921.html" rel="alternate"></link><updated>2014-09-21T13:14:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-21:20140921.html</id><summary type="html">&lt;img alt="Seneca" class="align-right" src="images/20140921-2-seneca.png" style="width: 222px; height: 300px;" /&gt;
&lt;p&gt;In his book &lt;em&gt;On the Shortness of Life&lt;/em&gt; the Roman statesman and philosopher &lt;strong&gt;Seneca&lt;/strong&gt; makes his argument that the perceived shortness of a human life is an illusion:&lt;/p&gt;
&lt;blockquote&gt;
Everyone hustles his life along, and is troubled by a longing for the future and weariness of the present. But the man who... organizes every day as though it were his last, neither longs for nor fears the next day… Nothing can be taken from this life, and you can only add to it as if giving to a man who is already full and satisfied food which he does not want but can hold. So you must not think a man has lived long because he has white hair and wrinkles: he has not lived long, just existed long. For suppose you should think that a man had had a long voyage who had been caught in a raging storm as he left harbor, and carried hither and thither and driven round and round in a circle by the rage of opposing winds? He did not have a long voyage, just a long tossing about.&lt;/blockquote&gt;
&lt;p&gt;We reach the end of our days and discover that we have placed a low value on an irreplacable commodity - the time that has been alloted to us:&lt;/p&gt;
&lt;blockquote&gt;
No one will bring back the years; no one will restore you to yourself. Life will follow the path it began to take, and will neither reverse nor check its course. It will cause no commotion to remind you of its swiftness, but glide on quietly. It will not lengthen itself for a king’s command or a people’s favor... You have been preoccupied while life hastens on. Meanwhile death will arrive, and you have no choice in making yourself available for that.&lt;/blockquote&gt;
&lt;p&gt;The way out of this constricting existence, Seneca believes, is through the study of philosophy and the making of all worthy things are own. The life of the philosopher can contain &lt;em&gt;multitudes&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All the years that have passed before them are added to their own... By the toil of others we are led into presence of things which have been brought from darkness into light. We are excluded from no age, but we have access to them all; and if we are prepared in loftiness of mind to pass beyond the narrow confines of human weakness, there is a long period of time through which we can roam...&lt;/p&gt;
&lt;p&gt;We are in the habit of saying that it was not in our power to choose the parents who were allotted to us, that they were given to us by chance. But we can choose whose children we would like to be. There are households of the noblest intellects: choose the one into which you wish to be adopted, and you will inherit not only their name but their property too. Nor will this property need to be guarded meanly or grudgingly: the more it is shared out, the greater it will become. These will offer you a path to immortality and raise you to a point from which no one is cast down... So the life of the philosopher extends widely... Some time has passed: he grasps it in his recollection. Time is present: he uses it. Time is to come: he anticipates it. This combination of all times into one gives him a long life.&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="books"></category><category term="philosophy"></category><category term="quotes"></category></entry><entry><title>Ping Parade #3 -- Backup</title><link href="http://www.circuidipity.com/pingparade3.html" rel="alternate"></link><updated>2014-09-19T01:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-19:pingparade3.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Make automatic backups of important stuff using a dash of shell scripting + rsync + SSH + cron!&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Backup" src="images/pingparade3-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;One of the advantages of setting up a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade1.html"&gt;Linux home server&lt;/a&gt; is providing a place to do that thing which everyone agrees is important but &lt;em&gt;very few do consistently&lt;/em&gt; (or even &lt;em&gt;once&lt;/em&gt;): &lt;strong&gt;backups&lt;/strong&gt;. Hopefully you never experience any loss of data... but &lt;em&gt;hope&lt;/em&gt; is not a plan! A little peace of mind can be gained in a few steps as I describe the simple backup solution I use to automatically mirror my laptop's home directory on my netbook server sitting on the local area network (LAN).&lt;/p&gt;
&lt;div class="section" id="step-0-ssh"&gt;
&lt;h2&gt;Step 0 - SSH&lt;/h2&gt;
&lt;p&gt;Configure &lt;strong&gt;OpenSSH&lt;/strong&gt; and &lt;strong&gt;keychain&lt;/strong&gt; as per &lt;a class="reference external" href="http://www.circuidipity.com/pingparade2.html"&gt;these instructions&lt;/a&gt;. Keychain makes it easy to use a &lt;strong&gt;passphrase-protected encryption key&lt;/strong&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ssh-agent"&gt;ssh-agent&lt;/a&gt; in automated scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-script"&gt;
&lt;h2&gt;Step 1 - Script&lt;/h2&gt;
&lt;p&gt;Login to the server and create a backup directory to hold the contents of $HOME: &lt;tt class="docutils literal"&gt;mkdir &lt;span class="pre"&gt;~/home-backup&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;On the local machine create a backup script - &lt;tt class="docutils literal"&gt;~/bin/backup_home.sh&lt;/tt&gt; - that makes use of the &lt;strong&gt;rsync&lt;/strong&gt; file-copying tool. A sample script includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;load the details of the &lt;strong&gt;SSH key&lt;/strong&gt; stored in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mirror&lt;/strong&gt; &lt;tt class="docutils literal"&gt;$HOME&lt;/tt&gt; to the server's &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/home-backup&lt;/span&gt;&lt;/tt&gt; using options &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--archive&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;exclude&lt;/strong&gt; certain items from the backup like &lt;em&gt;cache&lt;/em&gt; and &lt;em&gt;trash&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;be careful nothing important is wiped out&lt;/strong&gt; using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--delete&lt;/span&gt;&lt;/tt&gt; ... run rsync in a console with option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--dry-run&lt;/span&gt;&lt;/tt&gt; to test your settings before saving to a script ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Sample variables&lt;/span&gt;
&lt;span class="nv"&gt;ssh_agent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$HOME/.keychain/$HOSTNAME-sh&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;rsync_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--verbose --archive --delete&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;exclude_items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--exclude=*[Cc]ache* --exclude=*[Tt]rash*&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;local_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${HOME}/&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;192.168.1.22&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${address}:~/home-backup&amp;quot;&lt;/span&gt;

. &lt;span class="nv"&gt;$ssh_agent&lt;/span&gt;
rsync &lt;span class="nv"&gt;$rsync_options&lt;/span&gt; &lt;span class="nv"&gt;$exclude_items&lt;/span&gt; &lt;span class="nv"&gt;$local_dir&lt;/span&gt; &lt;span class="nv"&gt;$destination&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the script executable and run manually at least once to test...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod 755 ~/bin/backup_home.sh
&lt;span class="nv"&gt;$ &lt;/span&gt;~/bin/backup_home.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-automate"&gt;
&lt;h2&gt;Step 2 - Automate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Cron&lt;/strong&gt; is a daemon that runs programs at specified times and I use the command &lt;tt class="docutils literal"&gt;crontab &lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; to setup my backup script to auto-run with the following parameters:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;perform a daily backup at 23:55&lt;/li&gt;
&lt;li&gt;run program silently in the background by redirecting output to &lt;tt class="docutils literal"&gt;/dev/null&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;any errors will be emailed to the user ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# To define the time you can provide concrete values for&lt;/span&gt;
&lt;span class="c"&gt;# minute (m), hour (h), day of month (dom), month (mon),&lt;/span&gt;
&lt;span class="c"&gt;# and day of week (dow) or use &amp;#39;*&amp;#39; in these fields (for &amp;#39;any&amp;#39;).#&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Output of the crontab jobs (including errors) is sent through&lt;/span&gt;
&lt;span class="c"&gt;# email to the user the crontab file belongs to (unless redirected).&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# For more information see the manual pages of crontab(5) and cron(8)&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# m h  dom mon dow   command&lt;/span&gt;

&lt;span class="c"&gt;# Daily backup of $HOME to the netbook server&lt;/span&gt;
55 23 * * * &lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/backup_home.sh &amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For an alternate, more flexible rsync solution that accepts options at runtime &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/home2"&gt;check out this more complete script&lt;/a&gt; that I call using this &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/backup-home-server"&gt;second script&lt;/a&gt; executed by cron that includes logging (un)successful backup attempts to file.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="encryption"></category><category term="linux"></category><category term="shell"></category><category term="programming"></category><category term="github"></category></entry><entry><title>Stay relaxed and success will follow</title><link href="http://www.circuidipity.com/20140918.html" rel="alternate"></link><updated>2014-09-18T01:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-18:20140918.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Bill Murray&lt;/strong&gt; on staying relaxed and how success will follow:&lt;/p&gt;
&lt;blockquote&gt;
Someone told me some secrets early on about living. You have to remind yourself that you can do the very best you can when you’re very, very relaxed. No matter what it is, no matter what your job is, the more relaxed you are, the better you are. That’s sort of why I got into acting. I realized that the more fun I had, the better I did it, and I thought, &lt;em&gt;Well, that’s a job I can be proud of&lt;/em&gt;. I’d be proud to have that job, if I had to go to work and say, ‘No matter what my condition or what my mood is, no matter how I feel about what’s going on in my life, if I can relax myself and enjoy what I’m doing and have fun with it, then I can do my job really well.’ And it’s changed my life, learning that. And it’s made me better at what I do. I’m not the greatest or anything. But I really enjoy what I do.&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.vulture.com/2014/09/7-steps-to-living-a-bill-murray-life.html"&gt;7 Steps to Living a Bill Murray Life, by Bill Murray&lt;/a&gt;&lt;/p&gt;
</summary><category term="quotes"></category></entry><entry><title>Ping Parade #2 -- Keys</title><link href="http://www.circuidipity.com/pingparade2.html" rel="alternate"></link><updated>2014-09-12T01:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-12:pingparade2.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Create cryptographic keys and disable password logins to make remote machines more secure.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="OpenSSH" src="images/pingparade2-0.png" style="width: 960px; height: 500px;" /&gt;
&lt;p&gt;&lt;strong&gt;OpenSSH&lt;/strong&gt; is a toolkit for securing communication with Unix-like remote machines and services and supports authenticating users with a public and private &lt;strong&gt;key pair&lt;/strong&gt;. Michael Lucas, author of &lt;a class="reference external" href="https://www.michaelwlucas.com/nonfiction/ssh-mastery"&gt;OpenSSH Mastery&lt;/a&gt;, describes the risk of passwords in SSH:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the last few years, a network of compromised machines dubbed the &amp;quot;Hail Mary Cloud&amp;quot; has scanned the Internet for SSH servers. When a member of this cloud finds an SSH server, it lets the other machines in the network know about it. The cloud then methodically tries possible usernames and passwords. One host on the network tries a few times, then another, then another. Blocking individual IP addresses is not a useful defense, because each address is used only a few times.&lt;/p&gt;
&lt;p&gt;Any one attempt has low odds of guessing successfully. The attempts are constant. They never end. Eventually [some automated attacker] will get lucky and break into your server. It might be tomorrow, or next year, but it _will_ happen. To stop these types of attacks, you can either use packet filtering to block public access to your SSH server, or you can eliminate passwords on your servers. User keys let you eliminate passwords.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is how to configure SSH key authentication between a &lt;a class="reference external" href="http://www.circuidipity.com/pingparade1.html"&gt;home server&lt;/a&gt; and a client such as a laptop that are both running &lt;strong&gt;Debian Linux&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="step-0-install"&gt;
&lt;h2&gt;Step 0 - Install&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the server:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-server&lt;/span&gt;&lt;/tt&gt; and create an SSH configuration in the home directory of users who requires access to the system ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-server
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch ~/.ssh/authorized_keys &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 600 ~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;collect key fingerprints from the server...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_dsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_ecdsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub &amp;gt;&amp;gt; ~/.ssh/keys.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and give &lt;tt class="docutils literal"&gt;keys.txt&lt;/tt&gt; to users to compare signature when connecting for the first time&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; edit &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt; adding specific users to be granted system access (&lt;strong&gt;disabling&lt;/strong&gt; all others by default) ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AllowUsers USERNAME1 USERNAME2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and restart SSH with the new config by running &lt;tt class="docutils literal"&gt;sudo service ssh restart&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;openssh-client&lt;/span&gt;&lt;/tt&gt; and create the SSH folder in the user home directory ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install openssh-client
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.ssh &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod 700 ~/.ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;optional:&lt;/em&gt; create an entry in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; with the login options for a server - for example ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host tyrell
HostName 192.168.1.88
Port 23456
User gaff
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-generate-keys"&gt;
&lt;h2&gt;Step 1 - Generate keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;generate keys by running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-keygen&lt;/span&gt; &lt;span class="pre"&gt;-t&lt;/span&gt; rsa &lt;span class="pre"&gt;-C&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;$(whoami)&amp;#64;$(hostname)-$(date&lt;/span&gt; &lt;span class="pre"&gt;-I)&amp;quot;&lt;/span&gt;&lt;/tt&gt; and supply a passphrase&lt;/li&gt;
&lt;li&gt;upload the public key to the server and append it to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/authorized_keys&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/.ssh/id_rsa.pub | ssh SERVER &lt;span class="s2"&gt;&amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-test"&gt;
&lt;h2&gt;Step 2 - Test&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Graphical display managers like &lt;tt class="docutils literal"&gt;gdm&lt;/tt&gt; will automatically check a user account for SSH keys upon login. A pop-up box will prompt for the passphrase and the key will be added to the desktop session.&lt;/p&gt;
&lt;p&gt;If logging into a console, tell SSH that you have keys by running &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssh-add&lt;/span&gt;&lt;/tt&gt; ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-add
&lt;span class="nv"&gt;$ &lt;/span&gt;Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; /home/gaff/.ssh/id_rsa:
Identity added: /home/gaff/.ssh/id_rsa &lt;span class="o"&gt;(&lt;/span&gt;/home/gaff/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All SSH sessions launched from this console will access this user key stored in memory. Make sure to test the connection before disabling password logins ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh 192.168.1.88
Last login: Thu Sep 11 23:46:28 2014 from kambei.lan
&lt;span class="nv"&gt;$ &lt;/span&gt;uname -n
tyrell
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No request to enter a passphrase indicates SSH key authentication is properly configured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-disable-password-logins"&gt;
&lt;h2&gt;Step 3 - Disable password logins&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;On the server:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;edit &lt;tt class="docutils literal"&gt;/etc/ssh/sshd_config&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;PubkeyAuthentication yes
ChallengeResponseAuthentication no
PasswordAuthentication no
UsePAM no
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and restart the SSH server &lt;tt class="docutils literal"&gt;sudo service ssh restart&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-key-management"&gt;
&lt;h2&gt;Step 4 - Key management&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.funtoo.org/Keychain"&gt;Keychain&lt;/a&gt; is an OpenSSH key manager. From the Debian package description:&lt;/p&gt;
&lt;blockquote&gt;
When keychain is run, it checks for a running ssh-agent, otherwise it starts one. It saves the ssh-agent environment variables to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.keychain/$HOSTNAME-sh&lt;/span&gt;&lt;/tt&gt;, so that subsequent logins and non-interactive shells such as cron jobs can source the file and make passwordless ssh connections.  In addition, when keychain runs, it verifies that the key files specified on the command-line are known to ssh-agent, otherwise it loads them, prompting you for a password if necessary.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;On the client:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;install &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install keychain&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;configure &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# setup keychain - ssh-agent management&lt;/span&gt;
keychain ~/.ssh/id_rsa
. ~/.keychain/&lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt;-sh
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;flush all cached keys from memory with &lt;tt class="docutils literal"&gt;keychain &lt;span class="pre"&gt;--clear&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;if using &lt;a class="reference external" href="http://www.circuidipity.com/tmux.html"&gt;tmux&lt;/a&gt; enable persistent SSH key management across sessions by editing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.tmux.conf&lt;/span&gt;&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;set&lt;/span&gt;-option -g update-environment &lt;span class="s2"&gt;&amp;quot;DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="networks"></category><category term="encryption"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>A growing something else</title><link href="http://www.circuidipity.com/20140911.html" rel="alternate"></link><updated>2014-09-11T01:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-11:20140911.html</id><summary type="html">&lt;p&gt;After a tour of Google's headquaters, historian &lt;strong&gt;George Dyson&lt;/strong&gt; - quoted in James Barrat's &lt;em&gt;Our Final Invention: Artificial Intelligence and the End of the Human Era&lt;/em&gt; - had this to say about where an &lt;strong&gt;artificial superintelligence&lt;/strong&gt; might take root:&lt;/p&gt;
&lt;blockquote&gt;
For thirty years I have been wondering, what indication of its existence might we expect from a true AI? Certainly not any explicit revelation, which might spark a movement to pull the plug. Anomalous accumulation or creation of wealth might be a sign, or an unquenchable thirst for raw information, storage space, and processing cycles, or a concerted attempt to secure an uninterrupted, autonomous power supply. But the real sign, I suspect, would be a circle of cheerful, contented, intellectually and physically well-nourished people surrounding the AI. There wouldn't be any need for True Believers, or the downloading of human brains or anything sinister like that: just a gradual, gentle, pervasive and mutually beneficial contact between us and a growing something else. This remains a nontestable hypothesis, for now.&lt;/blockquote&gt;
</summary><category term="quotes"></category><category term="books"></category><category term="AI"></category><category term="transhuman"></category></entry><entry><title>Happier China Spy Keys</title><link href="http://www.circuidipity.com/20140909.html" rel="alternate"></link><updated>2014-09-09T01:23:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-09-09:20140909.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Latest books feeding my ((^_^)) ...&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="rig columns-4"&gt;
    &lt;li&gt;
        &lt;img src="images/books1-1-thumb.jpg" alt="10percent Happier" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-2-thumb.jpg" alt="Age of Ambition" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-3-thumb.jpg" alt="A Spy Among Friends" /&gt;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;img src="images/books1-4-thumb.jpg" alt="SSH Mastery" /&gt;&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;span class="booktitle"&gt;10% Happier: How I Tamed the Voice in My Head, Reduced Stress Without Losing My Edge, and Found Self-Help That Actually Works - A True Story&lt;/span&gt; by Dan Harris (It Books)&lt;/p&gt;
&lt;p&gt;ABC correspondent Dan Harris takes a sceptical and very personal odyssey through the frontiers of self-help and neuroscience and discovers the power of Buddhist meditation and the &amp;quot;self-interested case for not being a dick&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; &lt;span class="booktitle"&gt;Age of Ambition: Chasing Fortune, Truth, and Faith in the New China&lt;/span&gt; by Evan Osnos (Farrar, Straus and Giroux)&lt;/p&gt;
&lt;p&gt;Communist China has lifted more people out of poverty in less time than any other society in history, and the lives of ordinary Chinese portrayed here hustle up more questions than answers (good!) about personal ambition inside an authoritarian state and sacrifices being made to build the world's largest economy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; &lt;span class="booktitle"&gt;A Spy Among Friends: Kim Philby and the Great Betrayal&lt;/span&gt; by Ben Macintyre (Crown)&lt;/p&gt;
&lt;p&gt;British spymaster and Soviet double-agent Philby's long-running Cold War act of betrayal ultimately gives the impression that the man was playing &lt;strong&gt;everybody&lt;/strong&gt; as part of his own personal game, and in the end proved too clever by half with his &amp;quot;defection&amp;quot; more a case of push than escape.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; &lt;span class="booktitle"&gt;SSH Mastery: OpenSSH, Putty, Tunnels and Keys&lt;/span&gt; by Michael W. Lucas (Tilted Windmill Press)&lt;/p&gt;
&lt;p&gt;OpenSSH is a toolkit for securing communication with Unix-like remote machines and services and this book does an excellent job getting you started and describing SSH best practices such as replacing passwords with encryption keys.&lt;/p&gt;
</summary><category term="books"></category></entry></feed>