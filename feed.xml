<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Circuidipity</title><link href="http://www.circuidipity.com/" rel="alternate"></link><link href="http://www.circuidipity.com/feed.xml" rel="self"></link><id>http://www.circuidipity.com/</id><updated>2014-07-10T00:00:00-04:00</updated><entry><title>Ship or sails adapted to the heavenly breezes</title><link href="http://www.circuidipity.com/heavenly-breezes.html" rel="alternate"></link><updated>2014-07-10T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-07-10:heavenly-breezes.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Johannes Kepler&lt;/strong&gt; in a letter to &lt;strong&gt;Galileo Galilei&lt;/strong&gt; - &lt;em&gt;Conversation with the Messenger from the Stars&lt;/em&gt; - dated 19 April 1610:&lt;/p&gt;
&lt;blockquote&gt;
As soon as somebody demonstrates the art of flying, settlers from our species of man will not be lacking [on the Moon and Jupiter]... Who would have believed that a huge ocean could be crossed more peacefully and safely than the the narrow expanse of the Adriatic, the Baltic Sea or the English Channel? Provide ship or sails adapted to the heavenly breezes, and there will be some who will not fear even that void [of space]... So, for those who will come shortly to attempt this journey, let us establish the astronomy: Galileo, you of Jupiter, I of the Moon.&lt;/blockquote&gt;
</summary><category term="quote"></category><category term="space"></category></entry><entry><title>Increase RAM available to Raspberry Pi CPU</title><link href="http://www.circuidipity.com/pi-memory-split.html" rel="alternate"></link><updated>2014-07-09T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-07-09:pi-memory-split.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Raspberry Pi Model B Rev 2&lt;/strong&gt; has 512MB RAM that is partitioned between the CPU and the GPU. If the Pi is working as a headless server or the Pi desktop is being accessed via &lt;a class="reference external" href="http://www.raspberrypi.org/documentation/remote-access/vnc/"&gt;VNC&lt;/a&gt; (which doesn't utilize the GPU) the &lt;em&gt;memory split&lt;/em&gt; between the two processors can be altered to assign more memory to the CPU for running applications.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The &lt;strong&gt;Pi Camera Module&lt;/strong&gt; requires a minimum of 128MB RAM assigned to the GPU.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Default GPU memory on Raspbian is set to 64MB and the minimum recommended to ensure proper operation is 16MB. To modify GPU memory to 16MB either:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;edit &lt;tt class="docutils literal"&gt;/boot/config.txt&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;gpu_mem=16&lt;/tt&gt;; or&lt;/li&gt;
&lt;li&gt;run &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;raspi-config&lt;/span&gt;&lt;/tt&gt; and select &lt;strong&gt;&amp;quot;8 Advanced Options -&amp;gt; A3 Memory Split&amp;quot;&lt;/strong&gt; and modify &lt;strong&gt;64&lt;/strong&gt; to &lt;strong&gt;16&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Save the change, reboot the Pi, and enjoy the CPU memory boost!&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://elinux.org/RPi_config.txt"&gt;RPiconfig&lt;/a&gt;&lt;/p&gt;
</summary><category term="raspberry pi"></category><category term="raspbian"></category><category term="linux"></category></entry><entry><title>Ubuntu 14.04 Minimal Install</title><link href="http://www.circuidipity.com/ubuntu-trusty-install.html" rel="alternate"></link><updated>2014-07-07T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-07-07:ubuntu-trusty-install.html</id><summary type="html">&lt;img alt="Ubuntu Trusty Tahr" class="align-left" src="images/ubuntuTrusty.png" style="width: 100px; height: 100px;" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ubuntu.com/desktop"&gt;Ubuntu 14.04 &amp;quot;Trusty Tahr&amp;quot;&lt;/a&gt; is a &lt;em&gt;long-term support&lt;/em&gt; release (till 2019) of the popular Linux operating system. I use Ubuntu's &lt;a class="reference external" href="https://help.ubuntu.com/community/Installation/MinimalCD"&gt;minimal install image&lt;/a&gt; to create a &lt;em&gt;lightweight, console-only&lt;/em&gt; base configuration that can be customized for various tasks and alternate desktops.&lt;/p&gt;
&lt;p&gt;Below is a visual walk-through of a sample Ubuntu setup that makes use of an entire storage device divided into 3 partitions: unencrypted &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup"&gt;LUKS&lt;/a&gt; encrypted &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="step-0-installer"&gt;
&lt;h2&gt;Step 0 - Installer&lt;/h2&gt;
&lt;p&gt;Download a &lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/current/images/netboot/mini.iso"&gt;64-bit&lt;/a&gt; (&lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/trusty/main/installer-i386/current/images/netboot/mini.iso"&gt;32-bit&lt;/a&gt; for older machines) Ubuntu &lt;em&gt;mini.iso&lt;/em&gt; and burn the image to a CD or &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;prepare a USB boot device&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-go"&gt;
&lt;h2&gt;Step 1 - Go!&lt;/h2&gt;
&lt;img alt="Install" class="align-center" src="images/screenshot/trustyInstall/01.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Language" class="align-center" src="images/screenshot/trustyInstall/02.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select Location" class="align-center" src="images/screenshot/trustyInstall/03.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure Keyboard" class="align-center" src="images/screenshot/trustyInstall/04.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure Keyboard" class="align-center" src="images/screenshot/trustyInstall/041.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure Keyboard" class="align-center" src="images/screenshot/trustyInstall/042.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Hostname" class="align-center" src="images/screenshot/trustyInstall/05.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror Country" class="align-center" src="images/screenshot/trustyInstall/06.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mirror archive" class="align-center" src="images/screenshot/trustyInstall/07.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Proxy" class="align-center" src="images/screenshot/trustyInstall/08.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Full Name" class="align-center" src="images/screenshot/trustyInstall/09.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Username" class="align-center" src="images/screenshot/trustyInstall/10.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="User password" class="align-center" src="images/screenshot/trustyInstall/11.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify password" class="align-center" src="images/screenshot/trustyInstall/12.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encrypt home" class="align-center" src="images/screenshot/trustyInstall/13.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure clock" class="align-center" src="images/screenshot/trustyInstall/14.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Select time zone" class="align-center" src="images/screenshot/trustyInstall/15.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-partitions"&gt;
&lt;h2&gt;Step 2 - Partitions&lt;/h2&gt;
&lt;p&gt;In the example below we create 3 partitions on the disk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sda1 is a 16GB &lt;tt class="docutils literal"&gt;root&lt;/tt&gt; partition&lt;/li&gt;
&lt;li&gt;sda5 is a 1GB LUKS encrypted &lt;tt class="docutils literal"&gt;swap&lt;/tt&gt; partition using a &lt;em&gt;random key&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;sda6 uses the remaining space as a LUKS encrypted &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; partition using a &lt;em&gt;passphrase&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Partitioning method" class="align-center" src="images/screenshot/trustyInstall/16.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition disks" class="align-center" src="images/screenshot/trustyInstall/17.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition table" class="align-center" src="images/screenshot/trustyInstall/18.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/trustyInstall/19.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New Partition" class="align-center" src="images/screenshot/trustyInstall/20.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/trustyInstall/21.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Primary partition" class="align-center" src="images/screenshot/trustyInstall/22.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/trustyInstall/23.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Setting &lt;em&gt;Mount options&lt;/em&gt; to &lt;em&gt;noatime&lt;/em&gt; decreases write operations and boosts drive speed.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/trustyInstall/24.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/trustyInstall/25.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/trustyInstall/26.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/trustyInstall/27.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/trustyInstall/28.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Beginning" class="align-center" src="images/screenshot/trustyInstall/29.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Use as" class="align-center" src="images/screenshot/trustyInstall/30.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encrypt volume" class="align-center" src="images/screenshot/trustyInstall/31.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If the hard disk has not been securely wiped prior to installing Ubuntu (using a utility like &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;DBAN&lt;/a&gt;) you may want to configure &lt;em&gt;Erase data&lt;/em&gt; as &lt;em&gt;yes&lt;/em&gt;. Note, however, that depending on the size of the disk this operation can last several hours.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Encryption key" class="align-center" src="images/screenshot/trustyInstall/32.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Random key" class="align-center" src="images/screenshot/trustyInstall/33.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/trustyInstall/34.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Free space" class="align-center" src="images/screenshot/trustyInstall/35.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="New partition" class="align-center" src="images/screenshot/trustyInstall/36.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Partition size" class="align-center" src="images/screenshot/trustyInstall/37.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Logical partition" class="align-center" src="images/screenshot/trustyInstall/38.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Use as" class="align-center" src="images/screenshot/trustyInstall/39.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encrypt volume" class="align-center" src="images/screenshot/trustyInstall/40.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/trustyInstall/41.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure encrypted volumes" class="align-center" src="images/screenshot/trustyInstall/42.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Write changes to disk" class="align-center" src="images/screenshot/trustyInstall/43.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Create encrypted volumes" class="align-center" src="images/screenshot/trustyInstall/44.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Devices to encrypt" class="align-center" src="images/screenshot/trustyInstall/45.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish encrypt" class="align-center" src="images/screenshot/trustyInstall/46.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Encryption passphrase" class="align-center" src="images/screenshot/trustyInstall/47.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Verify passphrase" class="align-center" src="images/screenshot/trustyInstall/48.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Configure encrypted volume" class="align-center" src="images/screenshot/trustyInstall/49.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount point" class="align-center" src="images/screenshot/trustyInstall/50.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount home" class="align-center" src="images/screenshot/trustyInstall/51.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Mount options" class="align-center" src="images/screenshot/trustyInstall/52.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="noatime" class="align-center" src="images/screenshot/trustyInstall/53.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;&lt;em&gt;Reserved blocks&lt;/em&gt; can be used by privileged system processes to write to disk - useful if a full filesystem blocks users from writing - and reduce disk fragmentation. On large, non-root partitions extra space can be gained by reducing the 5% reserve set aside by Ubuntu to 1%.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Reserved blocks" class="align-center" src="images/screenshot/trustyInstall/54.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Percent file blocks" class="align-center" src="images/screenshot/trustyInstall/55.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Done setting up partition" class="align-center" src="images/screenshot/trustyInstall/56.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Write changes to disk" class="align-center" src="images/screenshot/trustyInstall/57.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Confirm write" class="align-center" src="images/screenshot/trustyInstall/58.png" style="width: 800px; height: 600px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-install-packages-and-finish-up"&gt;
&lt;h2&gt;Step 3 - Install packages and finish up&lt;/h2&gt;
&lt;img alt="No automatic updates" class="align-center" src="images/screenshot/trustyInstall/59.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Leave all tasks unmarked if you wish to start with a minimal, console-only base configuration ready for further customization. The task menu can be accessed post-install by running &lt;tt class="docutils literal"&gt;sudo tasksel&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Software selection" class="align-center" src="images/screenshot/trustyInstall/60.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="GRUB" class="align-center" src="images/screenshot/trustyInstall/61.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="UTC" class="align-center" src="images/screenshot/trustyInstall/62.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Finish install" class="align-center" src="images/screenshot/trustyInstall/63.png" style="width: 800px; height: 600px;" /&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If an encrypted &lt;tt class="docutils literal"&gt;home&lt;/tt&gt; partition was created in Step 2 the system will display a passphrase prompt to unlock the partition.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt="Enter encrypt passphrase" class="align-center" src="images/screenshot/trustyInstall/64.png" style="width: 800px; height: 600px;" /&gt;
&lt;img alt="Login" class="align-center" src="images/screenshot/trustyInstall/65.png" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;Enjoy your fresh Ubuntu!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Raspberry Pi Plate</title><link href="http://www.circuidipity.com/pi-plate.html" rel="alternate"></link><updated>2014-07-03T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-07-03:pi-plate.html</id><summary type="html">&lt;img alt="Raspberry Pi Plate" class="align-right" src="images/pi_plate_300.jpg" style="width: 300px; height: 400px;" /&gt;
&lt;p&gt;My new &lt;strong&gt;Raspberry Pi&lt;/strong&gt; attached to a bottom &lt;a class="reference external" href="http://www.thingiverse.com/thing:24096"&gt;Pi Plate&lt;/a&gt; I generated using my local library's 3D printer!&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://www.torontopubliclibrary.ca/using-the-library/computer-services/innovation-spaces/3D-design-print.jsp"&gt;Toronto Public Library&lt;/a&gt; recently installed MakerBot &lt;a class="reference external" href="https://store.makerbot.com/replicator2"&gt;3D printers&lt;/a&gt; at two locations for public use.&lt;/p&gt;
</summary><category term="raspberry pi"></category><category term="3D printing"></category></entry><entry><title>Duplicate Debian package selection on multiple machines</title><link href="http://www.circuidipity.com/dpkg-duplicate.html" rel="alternate"></link><updated>2014-05-28T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-28:dpkg-duplicate.html</id><summary type="html">&lt;p&gt;I am happy with the selection of packages installed on my &lt;a class="reference external" href="http://www.circuidipity.com/c720-sidbook.html"&gt;Debian-powered laptop&lt;/a&gt; and discovered an easy method to &lt;strong&gt;duplicate&lt;/strong&gt; the configuration on another machine.&lt;/p&gt;
&lt;p&gt;On the 'master' machine generate a list of installed packages...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg --get-selections | grep -v deinstall &amp;gt; deb-pkg-list.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Move the generated list to the target machine. Configure the package manager to duplicate the selection on the new system...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ PKGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-cache dumpavail &amp;gt; &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --merge-avail &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rm -f &lt;span class="s2"&gt;&amp;quot;$PKGS&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --clear-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg --set-selections &amp;lt; deb-pkg-list.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get dselect-upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I created a &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/dpkgDup"&gt;shell script&lt;/a&gt; that includes the above steps for generating and restoring package lists.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://github.com/vonbrownie/linux-home-bin/blob/master/dpkgDup"&gt;dpkgDup&lt;/a&gt;, &lt;a class="reference external" href="http://debian-handbook.info/browse/wheezy/sect.apt-get.html"&gt;Debian Administrator's Handbook&lt;/a&gt;&lt;/p&gt;
</summary><category term="debian"></category><category term="linux"></category><category term="shell"></category><category term="programming"></category></entry><entry><title>Policykit upgrade generates user permission problems</title><link href="http://www.circuidipity.com/policykit-upgrade-user-permission.html" rel="alternate"></link><updated>2014-05-15T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-15:policykit-upgrade-user-permission.html</id><summary type="html">&lt;p&gt;After a recent upgrade on my 64-bit systems running Debian Sid/Unstable and Openbox I discovered user permission problems with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;nm-applet&lt;/strong&gt; - &amp;quot;(32) Not authorized to control networking&amp;quot; - refusing to make new wireless connections&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;xfce4-power-manager --dump&lt;/strong&gt; shows suspend/reboot/shutdown as disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Openbox launches with &lt;tt class="docutils literal"&gt;startx&lt;/tt&gt; using &lt;tt class="docutils literal"&gt;exec &lt;span class="pre"&gt;ck-launch-session&lt;/span&gt; &lt;span class="pre"&gt;dbus-launch&lt;/span&gt; &lt;span class="pre"&gt;openbox-session&lt;/span&gt;&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xinitrc&lt;/span&gt;&lt;/tt&gt;. Online searching for fixes generates a lot of information about policykit, consolekit, and systemd but the current problems narrowed down to the most recent upgrade of polkit-related packages in Debian.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(Temporary) Fix:&lt;/strong&gt; Downgrade the problematic packages from versions &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-5&lt;/span&gt;&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-4&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 0:&lt;/strong&gt; Removing the current polkit packages will also remove a number of related packages including network-manager and break the net connection. Previous good &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;0.105-4&lt;/span&gt;&lt;/tt&gt; versions of the affected packages were still available in &lt;tt class="docutils literal"&gt;/var/cache/apt/archives&lt;/tt&gt;... otherwise download packages from &lt;a class="reference external" href="http://snapshot.debian.org/"&gt;snapshot.debian.org&lt;/a&gt;. For 64-bit amd64:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-gobject-1-0_0.105-4_amd64.deb"&gt;libpolkit-gobject-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-agent-1-0_0.105-4_amd64.deb"&gt;libpolkit-agent-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/libpolkit-backend-1-0_0.105-4_amd64.deb"&gt;libpolkit-backend-1-0:amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://snapshot.debian.org/archive/debian/20131015T214817Z/pool/main/p/policykit-1/policykit-1_0.105-4_amd64.deb"&gt;policykit-1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Remove the troublesome packages. Take note of the dependencies also removed for later restoration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get remove libpolkit-gobject-1-0:amd64 libpolkit-agent-1-0:amd64 libpolkit-backend-1-0:amd64 policykit-1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install the downgrade packages and place them &amp;quot;on hold&amp;quot; to block &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; from trying to upgrade again to newer (broken) versions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-gobject-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-agent-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i libpolkit-backend-1-0_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo dpkg -i policykit-1_0.105-4_amd64.deb
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-gobject-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-agent-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;libpolkit-backend-1-0:amd64 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;policykit-1 hold&amp;quot;&lt;/span&gt; | sudo dpkg --set-selections
&lt;span class="nv"&gt;$ &lt;/span&gt;dpkg get-selections | grep &lt;span class="s2"&gt;&amp;quot;pol&amp;quot;&lt;/span&gt;  &lt;span class="c"&gt;# confirm pkgs are now on hold&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Restore dependencies... my own system as an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install accountsservice colord consolekit cups-pk-helper gnome-control-center network-manager-gnome &lt;span class="se"&gt;\&lt;/span&gt;
packagekit packagekit-tools policykit-1-gnome upower xfce4-power-manager
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://forums.debian.net/viewtopic.php?f=5&amp;amp;t=114412"&gt;UPower Suspend/Hibernate: not authorized&lt;/a&gt;&lt;/p&gt;
</summary><category term="debian"></category><category term="linux"></category></entry><entry><title>Creating new commands with alias</title><link href="http://www.circuidipity.com/alias-commands.html" rel="alternate"></link><updated>2014-05-13T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-13:alias-commands.html</id><summary type="html">&lt;p&gt;An &lt;strong&gt;alias&lt;/strong&gt; is useful for setting desirable options for a shell command or creating new commands using the structure &lt;tt class="docutils literal"&gt;alias &lt;span class="pre"&gt;name='string&lt;/span&gt;&lt;/tt&gt;. Multiple commands can be placed on a single line by separating them with a semicolon &lt;tt class="docutils literal"&gt;alias &lt;span class="pre"&gt;name='command0;&lt;/span&gt; command1; command2&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Check for aliases already set in the environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove the alias for command &lt;tt class="docutils literal"&gt;foo&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;unalias &lt;/span&gt;foo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create new aliases:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -aFlhv --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;dpkgg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dpkg -l | grep&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;aaa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sudo apt-get update; sudo apt-get dist-upgrade; sudo apt-get autoremove&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;type &lt;/span&gt;ls   &lt;span class="c"&gt;# display information about a command&lt;/span&gt;
ls is aliased to &lt;span class="s1"&gt;&amp;#39;ls -aFlhv --color=auto&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aliases created at the prompt persist only for the duration of the current session. Make them permanent by adding them to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.bashrc&lt;/span&gt;&lt;/tt&gt;. Examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;df -hT&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;colordiff&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;dpkgg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dpkg -l | grep&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;grep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;halt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl poweroff&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;mkdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mkdir -p -v&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;psg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ps aux | grep&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias pwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pwd -P&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;reboot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl reboot&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias suspend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;systemctl suspend&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</summary><category term="shell"></category><category term="linux"></category></entry><entry><title>Enable forward search in Bash history</title><link href="http://www.circuidipity.com/forward-search-bash.html" rel="alternate"></link><updated>2014-05-10T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-10:forward-search-bash.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-R&lt;/span&gt;&lt;/tt&gt; enables reverse incremental searches through the Bash shell history and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; runs forward searches. However &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; collides with XON/XOFF flow control in my terminal and disables that feature in history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Disable XON/XOFF in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.bashrc&lt;/span&gt;&lt;/tt&gt;...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;stty -ixon
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bonus: Hitting &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;CTRL-S&lt;/span&gt;&lt;/tt&gt; by mistake in vim no longer disables output to the terminal.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://stackoverflow.com/questions/791765/unable-to-forward-search-bash-history-similarly-as-with-ctrl-r"&gt;Unable to forward search Bash history similarly as with CTRL-r&lt;/a&gt;&lt;/p&gt;
</summary><category term="shell"></category><category term="linux"></category></entry><entry><title>From Chromebook to Sidbook</title><link href="http://www.circuidipity.com/c720-sidbook.html" rel="alternate"></link><updated>2014-05-09T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-05-09:c720-sidbook.html</id><summary type="html">&lt;p&gt;Replace ChromeOS permanently with the &lt;strong&gt;sid/unstable&lt;/strong&gt; branch of &lt;strong&gt;Debian Linux&lt;/strong&gt; on the &lt;strong&gt;Acer C720 Chromebook&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="Debianized Acer C720" class="align-right" src="images/sidbook.png" style="width: 300px; height: 161px;" /&gt;
&lt;p&gt;Running a full-featured Linux on this little laptop is a delight: lightweight, several hours battery life, inexpensive, and snappy performance using &lt;a class="reference external" href="http://openbox.org/"&gt;Openbox&lt;/a&gt; window manager.&lt;/p&gt;
&lt;p&gt;There are a few different configurations of this device... mine is the &lt;a class="reference external" href="http://us.acer.com/ac/en/US/content/model-datasheet/NX.SHEAA.002"&gt;C720-2848&lt;/a&gt; non-touchscreen model with 2GB RAM and 16GB SSD.&lt;/p&gt;
&lt;p&gt;Let's go!&lt;/p&gt;
&lt;div class="section" id="step-0-recovery-image"&gt;
&lt;h2&gt;Step 0 - Recovery Image&lt;/h2&gt;
&lt;p&gt;Create a recovery image of Chrome OS (my C720 is model &lt;tt class="docutils literal"&gt;PEPPY &lt;span class="pre"&gt;C6A-N3C-A7O&lt;/span&gt;&lt;/tt&gt;) to enable restoring the Chromebook to its default configuration. This will require a spare USB stick of 2GB or better:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Log into the Chromebook and let it auto update, as there sometimes are firmware updates... check the updating status in the browser at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://help&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Insert the USB stick, enter &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;chrome://imageburner&lt;/span&gt;&lt;/tt&gt; and follow the directions to generate a recovery image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://support.google.com/chromebook/answer/1080595?hl=en"&gt;Create a Chromebook recovery image&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-debian-installer"&gt;
&lt;h2&gt;Step 1 - Debian Installer&lt;/h2&gt;
&lt;p&gt;Prepare the Debian installation media. I use &lt;a class="reference external" href="http://grml.org/"&gt;GRML 2014.03&lt;/a&gt; installed on a USB stick.&lt;/p&gt;
&lt;p&gt;Sources: Creating a &lt;a class="reference external" href="http://www.circuidipity.com/multi-boot-usb.html"&gt;USB stick with multiple Linux installers&lt;/a&gt; and &lt;a class="reference external" href="http://www.circuidipity.com/grml-debootstrap.html"&gt;installing Debian using grml-debootstrap&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-seabios"&gt;
&lt;h2&gt;Step 2 - SeaBIOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.coreboot.org/SeaBIOS"&gt;SeaBIOS&lt;/a&gt; in combination with &lt;strong&gt;coreboot&lt;/strong&gt; provides an open-source legacy BIOS that enables access to the MBR and the ability to install an alternative OS on the Chromebook. All this good stuff involves jumping through a few simple hoops and not trembling in fear at the &amp;quot;scary white screen&amp;quot; that pops up at power up stating that the boot loader detects something is &lt;strong&gt;very very wrong&lt;/strong&gt; with the Chromebook and helpfully suggests pressing the spacebar to begin recovery. &lt;strong&gt;Do not press the spacebar&lt;/strong&gt; or the Debian installation will be wiped from disk!&lt;/p&gt;
&lt;p&gt;There are 2 different methods for configuring SeaBIOS in preparation for installing Debian. The first method uses a few simple commands in the ChromeOS shell to place the Chromebook into &lt;strong&gt;developer mode&lt;/strong&gt; and allow booting the USB install media and replacing ChromeOS with Debian. The drawback is that scary screen appears at every boot and you must press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; to boot to legacy-mode and onward to GRUB and Debian (and &lt;strong&gt;ignore&lt;/strong&gt; the helpful prompt to press spacebar and inadvertently begin the adventure of wiping clean the SSD).&lt;/p&gt;
&lt;p&gt;The second method involves setting new flags for the write-protected &lt;strong&gt;Google Binary Block&lt;/strong&gt; (GBB) in the device firmware. Delay at the boot screen can be reduced to a one second timeout and the legacy-mode BIOS set as the system default (no key combo required). Pressing the spacebar is disabled from doing any harm to Debian (the Chromebook just beeps). The drawback is that it involves the (very simple) removal of the device's bottom cover and the temporary removal of the &lt;strong&gt;write-protect screw&lt;/strong&gt; from the motherboard to permit flashing new flags to the GBB... and this may void the Chromebook's warranty (one of the case screws lies underneath a sticker declaring the warranty void if disturbed).&lt;/p&gt;
&lt;p&gt;Experimenting with alternate OS installs on the Chromebook I first employed the developer mode method followed by the write-protect screw removal. I prefer configuring the device to default to legacy-mode BIOS but I have employed both methods successfully and describe their respective steps below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No guarantees&lt;/strong&gt;, though... Hopefully you enjoy equal success!&lt;/p&gt;
&lt;div class="section" id="write-protect-screw-method"&gt;
&lt;h3&gt;2.1 Write-Protect Screw Method&lt;/h3&gt;
&lt;p&gt;Disconnect power. Turn the Chromebook over facing bottom up and remove the 13 screws (not missing the one hidden under the warranty sticker). Gently pry the case off starting with the seam where the display connects to device. It comes away pretty easy.&lt;/p&gt;
&lt;p&gt;This is what you see...&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="C720 annotated innards" src="images/c720-chromebook-annotated-innards.png" style="width: 800px; height: 558px;" /&gt;
&lt;p class="caption"&gt;[Image: The battery lock screw is #6 and the write-protect screw is #7, courtesy &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook#TOC-Firmware"&gt;Chromium&lt;/a&gt;].&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the write-protect screw (this will &lt;strong&gt;wipe out&lt;/strong&gt; whatever is installed on the SSD)&lt;/li&gt;
&lt;li&gt;Close back cover using only the battery lock screw to hold in place&lt;/li&gt;
&lt;li&gt;Re-connect power, boot chromebook and wait until it displays...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Chrome OS is missing or damaged.
Please insert a recovery USB stick or SD card.
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Insert USB recovery media prepared in Step 0 and it will proceed to restore ChromeOS and reboot&lt;/li&gt;
&lt;li&gt;At default ChromeOS &amp;quot;Welcome!&amp;quot; screen open a terminal &lt;tt class="docutils literal"&gt;CTRL+ALT+F2&lt;/tt&gt; (Right-arrow)&lt;/li&gt;
&lt;li&gt;Login as &lt;tt class="docutils literal"&gt;chronos&lt;/tt&gt; (no password), then enter &lt;tt class="docutils literal"&gt;sudo su&lt;/tt&gt; for superuser access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set new GBB flags using the &lt;tt class="docutils literal"&gt;set_gbb_flags.sh&lt;/tt&gt; script in ChromeOS. To enable short &lt;strong&gt;developer mode&lt;/strong&gt; screen (1 second timeout) followed by &lt;strong&gt;default legacy mode&lt;/strong&gt; boot use these flags...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GBB_FLAG_DEV_SCREEN_SHORT_DELAY 0×00000001
GBB_FLAG_FORCE_DEV_SWITCH_ON 0×00000008
GBB_FLAG_FORCE_DEV_BOOT_LEGACY 0×00000080
GBB_FLAG_DEFAULT_DEV_BOOT_LEGACY 0×00000400
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... which adds up to running in the shell...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;set_gbb_flags.sh 0x489
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shutdown with &lt;tt class="docutils literal"&gt;shutdown &lt;span class="pre"&gt;-h&lt;/span&gt; now&lt;/tt&gt; and disconnect the power:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the bottom cover again and reinstall the write-lock screw to protect the BIOS&lt;/li&gt;
&lt;li&gt;Close cover and reinstall all the case screws&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Re-connect the power, insert the USB stick prepared in Step 1, and power up the Chromebook.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Whenever you remove battery power to the Chromebook (like opening up the case) the hardware clock on the motherboard resets to a future year (mine travelled to 2040). Providing a network connection is up during the Debian installation the system should fetch a correct time from a NTP server... otherwise fix the &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/acer-c720-chromebook-debian-gnu-linux/"&gt;fallout from an incorrect clock&lt;/a&gt; by re-mounting partitions read-only and correct filesystem timestamps using &lt;tt class="docutils literal"&gt;fsck&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="http://www.coreboot.org/pipermail/coreboot/2014-January/077083.html"&gt;Useful GBB flags&lt;/a&gt; for &lt;a class="reference external" href="https://blogs.fsfe.org/the_unconventional/2014/04/20/acer-c720-chromebook-debian-gnu-linux/"&gt;another new free software machine&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-mode-method"&gt;
&lt;h3&gt;2.2 Developer Mode Method&lt;/h3&gt;
&lt;p&gt;The alternative to removing the write-protect screw above is to place the Chromebook into developer mode using the ChromeOS shell before booting the USB install media:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;With the Chromebook off... Hold down &lt;tt class="docutils literal"&gt;ESC+F3&lt;/tt&gt; (Refresh) keys and power on the device&lt;/li&gt;
&lt;li&gt;Invoke Recovery, and at the Recovery screen press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Device will prompt for confirmation, press &lt;tt class="docutils literal"&gt;ENTER&lt;/tt&gt; and the system reboots into developer mode&lt;/li&gt;
&lt;li&gt;Scary white boot screen appears and you need to press &lt;tt class="docutils literal"&gt;Ctrl+D&lt;/tt&gt; to continue boot&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Switching between developer and normal (non-developer) modes will remove user accounts and their associated information from your Chromebook.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Enable the &lt;strong&gt;USB Boot&lt;/strong&gt; and &lt;strong&gt;Legacy BIOS&lt;/strong&gt; modes by opening the shell with &lt;tt class="docutils literal"&gt;Ctrl+Alt+T&lt;/tt&gt; and enter &lt;tt class="docutils literal"&gt;shell&lt;/tt&gt;. Set &lt;tt class="docutils literal"&gt;dev_boot_usb&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dev_boot_legacy&lt;/tt&gt; to active...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo crossystem &lt;span class="nv"&gt;dev_boot_usb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo &lt;span class="nv"&gt;dev_boot_legacy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert the USB stick prepared in Step 1, reboot the Chromebook and press &lt;tt class="docutils literal"&gt;CTRL+L&lt;/tt&gt; at the boot screen to enter legacy boot mode.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.chromium.org/chromium-os"&gt;Chromium OS&lt;/a&gt; developer information for the &lt;a class="reference external" href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook"&gt;Acer C720 Chromebook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-install-debian"&gt;
&lt;h2&gt;Step 3 - Install Debian&lt;/h2&gt;
&lt;p&gt;My &lt;a class="reference external" href="http://www.circuidipity.com/grml-debootstrap.html"&gt;grml-debootstrap instructions&lt;/a&gt; for installing Debian Wheezy, configuring &lt;strong&gt;TRIM&lt;/strong&gt; support for the SSD, and my &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/debian-post-install-main.sh"&gt;post-install script&lt;/a&gt; for upgrading and configuring Debian's sid/unstable branch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-4-touchpad"&gt;
&lt;h2&gt;Step 4 - Touchpad&lt;/h2&gt;
&lt;p&gt;After installing Debian the C720 touchpad is non-functional and requires compiling new kernel modules and creating a &lt;strong&gt;synaptic touchpad&lt;/strong&gt; config file:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Compile new kernel modules using the &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/sid-c720-kern-mods.sh"&gt;sid-c720-kern-mods.sh&lt;/a&gt; script... Confirmed &lt;strong&gt;working&lt;/strong&gt; in kernel &lt;tt class="docutils literal"&gt;3.13.10&lt;/tt&gt; and &lt;strong&gt;not working&lt;/strong&gt; in &lt;tt class="docutils literal"&gt;3.14.x&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Create touchpad config &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/50-c720-touchpad.conf"&gt;50-c720-touchpad.conf&lt;/a&gt; in &lt;tt class="docutils literal"&gt;/etc/X11/xorg.conf.d&lt;/tt&gt; ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mkdir /etc/X11/xorg.conf.d
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/50-c720-touchpad.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify this file to adjust timeouts, add tap-mouse actions (2-finger tap = right-click, 3-finger tap = middle-click), and 2-finger scrolling.&lt;/p&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Touchpad Synaptics&lt;/a&gt; and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook#configuration"&gt;C720 configuration&lt;/a&gt; on the Arch Wiki&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-5-suspend"&gt;
&lt;h2&gt;Step 5 - Suspend&lt;/h2&gt;
&lt;p&gt;Enable suspend|resume under &lt;strong&gt;systemd&lt;/strong&gt; (for sysv-init see &lt;em&gt;Helpful Resources&lt;/em&gt; at bottom):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/cros-sound-suspend.sh"&gt;cros-sound-suspend.sh&lt;/a&gt; (make it executable) in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/lib/systemd/system-sleep&lt;/span&gt;&lt;/tt&gt; and...&lt;/li&gt;
&lt;li&gt;... &lt;a class="reference external" href="https://github.com/vonbrownie/linux-post-install/blob/master/extra/c720/debian/cros-acpi-wakeup.conf"&gt;cros-acpi-wakeup.conf&lt;/a&gt; in &lt;tt class="docutils literal"&gt;/etc/tmpfiles.d&lt;/tt&gt; to restore sound and touchpad after suspend&lt;/li&gt;
&lt;li&gt;Configure &lt;tt class="docutils literal"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/tt&gt; setting in &lt;tt class="docutils literal"&gt;/etc/default/grub&lt;/tt&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash add_efi_memmap boot=local noresume noswap i915.modeset=1 tpm_tis.force=1 tpm_tis.interrupts=0 nmi_watchdog=panic,lapic&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and update the grub config...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sources: &lt;a class="reference external" href="https://plus.google.com/+PedroLarroy/posts/6CgQypQukMa"&gt;Chrubuntu resume fix&lt;/a&gt; on Google+, &lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=1364521#p1364521"&gt;Acer C720 thread&lt;/a&gt; in Arch Forums, and &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Allow_users_to_shutdown"&gt;systemctl user controls&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-6-keyboard-shortcuts"&gt;
&lt;h2&gt;Step 6 - Keyboard Shortcuts&lt;/h2&gt;
&lt;p&gt;The top row on the keyboard with the shortcut icons (brightness, volume, etc.) identify in Linux as the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;F1-F10&lt;/span&gt;&lt;/tt&gt; keys and the Search key (in the &lt;tt class="docutils literal"&gt;CapsLk&lt;/tt&gt; position) acts as the &lt;tt class="docutils literal"&gt;Super&lt;/tt&gt; (Windows) modifier key.&lt;/p&gt;
&lt;p&gt;Create keyboard shortcuts in Openbox to modify the sound, brightness, and page movement settings by first installing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;amixer - command line mixer&lt;/li&gt;
&lt;li&gt;xbacklight - set backlight level using RandR&lt;/li&gt;
&lt;li&gt;xdotool - simulate keyboard/mouse input&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install alsa-utils xbacklight xdotool
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and creating keybindings in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.config/openbox/rc.xml&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="sound"&gt;
&lt;h3&gt;6.1 Sound&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;!-- Keybindings &lt;span class="k"&gt;for &lt;/span&gt;Acer C720 volume keys: mute/down/up --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F8&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master toggle&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F9&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master 5%- unmute&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F10&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;amixer -q -D pulse &lt;span class="nb"&gt;set &lt;/span&gt;Master 5%+ unmute&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="display-brightness"&gt;
&lt;h3&gt;6.2 Display Brightness&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;lt;!-- Keybingings &lt;span class="k"&gt;for &lt;/span&gt;Acer C720 brightness keys: lower/raise --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F6&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xbacklight - 10&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W-F7&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xbacklight + 10&amp;lt;/command&amp;gt;
    &amp;lt;/action&amp;gt;
&amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="page-up-page-down-home-end"&gt;
&lt;h3&gt;6.3 Page-Up, Page-Down, Home, End&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &amp;lt;!-- Keybindings &lt;span class="k"&gt;for &lt;/span&gt;Page-Up, Page-Down, Home, End --&amp;gt;
&amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A-Up&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Page_Up&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A-Down&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
       &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Page_Down&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C-A-Up&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers Home&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
 &amp;lt;keybind &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C-A-Down&amp;quot;&lt;/span&gt;&amp;gt;
   &amp;lt;action &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&amp;gt;xdotool key --clearmodifiers End&amp;lt;/command&amp;gt;
   &amp;lt;/action&amp;gt;
 &amp;lt;/keybind&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="power-key"&gt;
&lt;h3&gt;6.4 Power Key&lt;/h3&gt;
&lt;p&gt;The power key ignores any configuration in the window manager and triggers poweroff without delay when pressed (easy to do by accident as its positioned next to &lt;tt class="docutils literal"&gt;backspace&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;If you want to disable the power key... modify &lt;tt class="docutils literal"&gt;/etc/systemd/logind.conf&lt;/tt&gt; and set &lt;tt class="docutils literal"&gt;HandlePowerKey=ignore&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-7-helpful-resources"&gt;
&lt;h2&gt;Step 7 - Helpful Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vonbrownie/linux-post-install/tree/master/extra/c720/debian"&gt;My personal C720 configurations&lt;/a&gt; (github.com/vonbrownie)&lt;br /&gt;
Configuring the Chromebook and the output of &lt;em&gt;lshw&lt;/em&gt;, &lt;em&gt;lspci&lt;/em&gt;, and &lt;em&gt;lsusb&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/liangcj/AcerC720CrunchBang"&gt;CrunchBang Linux on the Acer C720 Chromebook&lt;/a&gt; (github.com/liangcj)&lt;br /&gt;
Guide for wiping ChromeOS and installing CrunchBang&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Acer_C720_Chromebook"&gt;Acer C720 Chromebook&lt;/a&gt; (wiki.archlinux.org)&lt;br /&gt;
Arch Linux installation with useful post-install details applicable to any Linux distro&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.reddit.com/r/chrubuntu/comments/1rsxkd/list_of_fixes_for_xubuntu_1310_on_the_acer_c720/"&gt;List of fixes for Xubuntu 13.10 on the Acer C720&lt;/a&gt; (reddit.com/r/chrubuntu)&lt;br /&gt;
Ongoing discussion thread about Chromebook configuration for a Debian/Ubuntu-based install&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blog.codestarter.org/post/93985346780/how-we-turn-199-chromebooks-into-ubuntu-based-code"&gt;Turn Chromebooks into Ubuntu-based code learning machines for kids&lt;/a&gt; (blog.codestarter.org)&lt;br /&gt;
Configure the C720 to dual-boot ChromeOS and Ubuntu using open-source install script&lt;/p&gt;&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="chromebook"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>Ubuntu 14.04 and Virtualbox</title><link href="http://www.circuidipity.com/ubuntu1404-virtualbox.html" rel="alternate"></link><updated>2014-04-27T00:00:00-04:00</updated><author><name>Daniel Wayne Armstrong</name></author><id>tag:www.circuidipity.com,2014-04-27:ubuntu1404-virtualbox.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; is virtualization software that allows a Linux user to HOST multiple GUEST operating systems as &lt;em&gt;virtual machines&lt;/em&gt; (VMs). Its a cool tool for playing with different Linux distros and experimenting with configurations.&lt;/p&gt;
&lt;p&gt;In this HOWTO I install Virtualbox on a Debian HOST and create an Ubuntu GUEST virtual machine.&lt;/p&gt;
&lt;div class="section" id="step-0-install-virtualbox-on-host"&gt;
&lt;h2&gt;Step 0 - Install VirtualBox on HOST&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential dkms module-assistant linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install virtualbox virtualbox-dkms virtualbox-qt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Virtualbox kernel modules are built via &lt;em&gt;Dynamic Kernel Module Support&lt;/em&gt; (&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support"&gt;DKMS&lt;/a&gt;). After installing the virtualbox packages the &lt;tt class="docutils literal"&gt;vbox&lt;/tt&gt; modules should be auto-built and -loaded ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lsmod | grep vbox
vboxpci                19066  0
vboxnetadp             13155  0
vboxnetflt             23571  0
vboxdrv               190057  4 vboxnetflt,vboxnetadp,vboxpci
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I add my USERNAME to the &lt;tt class="docutils literal"&gt;vboxusers&lt;/tt&gt; group...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser YOUR_USERNAME vboxusers
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="step-1-create-the-ubuntu-guest"&gt;
&lt;h2&gt;Step 1 - Create the Ubuntu GUEST&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;Default Machine Folder&lt;/em&gt; where VM images are stored is &lt;tt class="docutils literal"&gt;$HOME/Virtualbox VMs&lt;/tt&gt; (this can be modified in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;File-&amp;gt;Preferences-&amp;gt;General&lt;/span&gt;&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;See the &lt;a class="reference external" href="http://www.virtualbox.org/manual/UserManual.html"&gt;User Manual&lt;/a&gt; for creating a GUEST virtual machine. I use the &lt;a class="reference external" href="http://archive.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/current/images/netboot/"&gt;Ubuntu mini.iso installer&lt;/a&gt; to create a new virtual machine with a minimal system configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2-guest-additions"&gt;
&lt;h2&gt;Step 2 - GUEST Additions&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Guest Additions&lt;/em&gt; provide extra features such as the ability to tweak display settings and add a shared folder that can accessed by both HOST and GUEST machines.&lt;/p&gt;
&lt;p&gt;On the new Ubuntu GUEST run...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install build-essential module-assistant linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt; dkms
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo m-a prepare
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo adduser YOUR_USERNAME vboxsf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the virtualbox modules need to be rebuilt for any reason for the running kernel...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;uname -r | sudo xargs -n1 /usr/lib/dkms/dkms_autoinstaller start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot Ubuntu GUEST and &lt;tt class="docutils literal"&gt;vbox&lt;/tt&gt; drivers should now be loaded...&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;lsmod | grep vbox
vboxguest
vboxsf
vboxvideo
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3-guest-configuration"&gt;
&lt;h2&gt;Step 3 - GUEST Configuration&lt;/h2&gt;
&lt;p&gt;Tweak display settings by going to the Virtualbox &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Machine-&amp;gt;Settings...-&amp;gt;Display&lt;/span&gt;&lt;/tt&gt; setting and move the slider to add more video memory and enable 3d acceleration.&lt;/p&gt;
&lt;img alt="Display Settings" class="align-center" src="images/20121207-display.png" style="width: 662px; height: 502px;" /&gt;
&lt;p&gt;With VirtualBox guest additions the display and resolution can be changed when running X...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ps aux | grep VBox
/usr/sbin/VBoxService
/usr/bin/VBoxClient --clipboard
/usr/bin/VBoxClient --display
/usr/bin/VBoxClient --seamless
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If GUEST does not use a graphical login manager to launch its desktop then modify &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.xinitrc&lt;/span&gt;&lt;/tt&gt; to start VBoxClient services...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;VBoxClient --clipboard &amp;amp;
VBoxClient --display &amp;amp;
VBoxClient --seamless &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next create a shared folder on HOST. Make it accessible to GUEST by going to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Machine-&amp;gt;Settings...-&amp;gt;Shared&lt;/span&gt; Folders&lt;/tt&gt; and click &lt;tt class="docutils literal"&gt;Add Shared Folder&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Auto-Mount&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;img alt="Shared Folder Settings" class="align-center" src="images/20121207-shared-folders.png" style="width: 662px; height: 502px;" /&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="virtual environments"></category><category term="debian"></category><category term="ubuntu"></category><category term="linux"></category></entry></feed>